WEBVTT

NOTE duration:"01:16:15"

NOTE recognizability:0.776

NOTE language:en-us

NOTE Confidence: 0.873827266666667

f4451592-7a3a-4c0b-81d1-99dc583b5064
00:00:00.000 --> 00:00:02.550
Sorry about that.

NOTE Confidence: 0.873827266666667

f1d37672-c8bf-4e2a-b505-232588f0af31
00:00:02.550 --> 00:00:05.454
So you have to ask your lab instructor

NOTE Confidence: 0.873827266666667

82c4fc2c-9a5e-477d-a207-b95220bdfcc2
00:00:05.454 --> 00:00:07.837
to open new attempt for you.

NOTE Confidence: 0.873827266666667

115b2f94-f9cc-4a98-91c9-533971e3e4c9
00:00:07.840 --> 00:00:10.384
If you already submitted the lab

NOTE Confidence: 0.873827266666667

0e1595b1-4566-46f4-97f8-648f95a9f037
00:00:10.384 --> 00:00:15.070
eight or lab 9 and or or about the

NOTE Confidence: 0.873827266666667

3e1b4377-4d70-40ec-9dca-b6311917d50e
00:00:15.070 --> 00:00:17.878
lectures so your lab instructor

NOTE Confidence: 0.873827266666667

786d7035-ccd6-4548-bb2c-318035d34b0c
00:00:17.878 --> 00:00:21.760
can open a new attempt for you.

NOTE Confidence: 0.873827266666667

8d933be6-637d-4c8c-a616-4336fbf8808e
00:00:21.760 --> 00:00:25.016
OK, this is about the labs I mean

NOTE Confidence: 0.873827266666667

68292e5c-f512-4620-833c-11dd89da7aa2
00:00:25.016 --> 00:00:28.220
and the lecture extensions are.

NOTE Confidence: 0.873827266666667

50f9678e-b5c7-4c69-a9b8-97a5c57bd724
00:00:28.220 --> 00:00:31.548
So today we are going to finish the

NOTE Confidence: 0.873827266666667

b756e1e4-0a98-428b-892f-287e700ce334
00:00:31.548 --> 00:00:34.044
process control which is the chapter

NOTE Confidence: 0.873827266666667

77baea62-833a-4148-84cf-4758efaa5df4
00:00:34.044 --> 00:00:37.480
eight of the book and then we start

NOTE Confidence: 0.873827266666667

be838886-dc27-48f5-b18d-cdd337206e3f
00:00:37.480 --> 00:00:40.455
the Chapter 10 of the book about

NOTE Confidence: 0.873827266666667

5dd1d2f7-3fba-4bf8-9e95-e8a516c1d666
00:00:40.455 --> 00:00:43.283
signal signaling between processes.

NOTE Confidence: 0.873827266666667

bff884be-a31d-47e4-aea1-462152f1cce7
00:00:43.283 --> 00:00:46.487
And which is a?

NOTE Confidence: 0.873827266666667

83d29d43-4993-4301-a8f5-f55d9960fee8
00:00:46.490 --> 00:00:50.066
The opening and opening for a

NOTE Confidence: 0.873827266666667

14dd1bab-2f0a-418f-80a2-17044687efdd
00:00:50.066 --> 00:00:52.450
very important topic called

NOTE Confidence: 0.873827266666667

978605ee-6343-4350-a0d0-cb7f650ac31b
00:00:52.563 --> 00:00:55.389
Interprocess communication.

NOTE Confidence: 0.873827266666667

6d54bde6-98e2-4c9d-a95b-25f8203a90e2
00:00:55.390 --> 00:00:59.698
So when we signal a process,

NOTE Confidence: 0.873827266666667

396bc63e-b202-4190-b79c-c65f1c5d1d4c
00:00:59.700 --> 00:01:02.324
another actually the another

NOTE Confidence: 0.873827266666667

497b439c-fbbb-4a37-9bb8-3464e8d9ee38
00:01:02.324 --> 00:01:04.948
process issues is signal.

NOTE Confidence: 0.873827266666667

1eb04b2d-3c92-4b3b-838c-964df2ea2661
00:01:04.950 --> 00:01:08.555
Process issues a signal to another process,

NOTE Confidence: 0.873827266666667

d67f6783-25d6-4d09-88b6-433bdb5da48a
00:01:08.560 --> 00:01:12.192
and we can think of this signaling as

NOTE Confidence: 0.873827266666667

fa8d0dff-f714-4ba4-acfb-5bc62986fcaf
00:01:12.192 --> 00:01:15.797
a communication between two processes.

NOTE Confidence: 0.873827266666667

b035ad2f-6918-4213-8111-d904cc05855b
00:01:15.800 --> 00:01:18.740
So, but signaling is not the only

NOTE Confidence: 0.873827266666667

efdd36f5-fdb3-432b-8551-7aaff9e3495a
00:01:18.740 --> 00:01:20.000
communication between processes.

NOTE Confidence: 0.873827266666667

eb706b66-b7b2-4656-bb62-fce24eced1dc
00:01:20.000 --> 00:01:22.496
We have different ways of communication

NOTE Confidence: 0.873827266666667

7b0bb6bd-cbf8-4faa-b99a-9f9185f76a8d
00:01:22.496 --> 00:01:24.801
between processes and we call

NOTE Confidence: 0.873827266666667

d1585207-7ffc-489a-9320-83785767a861
00:01:24.801 --> 00:01:26.508
it interprocess communication.

NOTE Confidence: 0.873827266666667

faa73f92-d414-449d-901c-098036d829a0
00:01:26.510 --> 00:01:27.458
As an instance,

NOTE Confidence: 0.873827266666667

71200df8-cf7d-4cb6-90a5-98cd52b91fc9
00:01:27.458 --> 00:01:29.670
today we are going to cover the

NOTE Confidence: 0.873827266666667

200ad3a7-d476-44f8-a1ea-b09b01b2e97e
00:01:29.742 --> 00:01:32.296
signaling and next week we are

NOTE Confidence: 0.873827266666667

71dfeefd-3b24-4d88-95cb-32b20a0a2ce6
00:01:32.296 --> 00:01:35.314
going to introduce more ways of

NOTE Confidence: 0.873827266666667

5a31e5af-6662-4eba-88cd-d7ccb7ea9e3b
00:01:35.314 --> 00:01:37.250
communication between processes.

NOTE Confidence: 0.873827266666667

68f01e13-b4cd-4ccb-89bb-39f1a16203ac
00:01:37.250 --> 00:01:41.370
And and this topic is, and I mean is a,

NOTE Confidence: 0.873827266666667

8dfaa294-90f9-423d-9ce1-7e56de71f0f7
00:01:41.370 --> 00:01:44.190
I mean trivial consequence of having

NOTE Confidence: 0.873827266666667

4b1f39b2-12e4-4b0b-bdc2-2b094a83dfc7
00:01:44.190 --> 00:01:46.650
multiple processes inside the memory.

NOTE Confidence: 0.873827266666667

3fc4f97f-745a-4137-bfc4-7774448a7330
00:01:46.650 --> 00:01:48.810
If we don't have multiple process,

NOTE Confidence: 0.873827266666667

f4f5fdb2-f66b-4e5b-a7e4-33fc5106fb85
00:01:48.810 --> 00:01:51.015
if you only have one process inside

NOTE Confidence: 0.873827266666667

082ddb2d-c145-4e05-8fb9-bd54eaecac47
00:01:51.015 --> 00:01:53.408
the memory and Colonel and the shell,

NOTE Confidence: 0.873827266666667

29477b4a-2f15-456e-876f-0e981e7e0e4e
00:01:53.410 --> 00:01:56.178
there is no need for interprocess

NOTE Confidence: 0.873827266666667

244cac19-30fc-42c0-ac64-cc267be9488a
00:01:56.178 --> 00:01:56.586
communication.

NOTE Confidence: 0.873827266666667

e9a51415-8c58-4312-8c24-7afaa43dfd30
00:01:56.586 --> 00:01:58.218
The only communication happens

NOTE Confidence: 0.873827266666667

092ded31-50e8-41a8-a8a3-40b2da4530fa
00:01:58.218 --> 00:02:00.589
with the kernel and your process.

NOTE Confidence: 0.873827266666667

d8123d05-77b2-4eaf-91af-cebcb1a3f3bb
00:02:00.590 --> 00:02:02.900
But when we have multiple

NOTE Confidence: 0.873827266666667

9c00fb5e-7cd9-4231-af7d-2e11719dbd92
00:02:02.900 --> 00:02:04.748
processes inside the memory,

NOTE Confidence: 0.873827266666667

3025e387-85e5-427a-bd4a-f45f8052cb89
00:02:04.750 --> 00:02:06.640
then.

NOTE Confidence: 0.873827266666667

62460bbc-2e86-40ee-81aa-e914bb1cd575
00:02:06.640 --> 00:02:09.328
It's good to have to provide

NOTE Confidence: 0.873827266666667

31cef48e-e050-436a-addb-073af0c9e2a2
00:02:09.328 --> 00:02:10.672
communication between them.

NOTE Confidence: 0.7668846265

ad17683c-0d4c-4176-8835-47ec349722a4
00:02:14.390 --> 00:02:18.539
So, uh. This is because of the I mean

NOTE Confidence: 0.7668846265

479d9605-26d5-4732-b732-31e6e79354b6
00:02:18.539 --> 00:02:21.666
multiprocessing environment or the most

NOTE Confidence: 0.7668846265

90587c32-90f1-40e8-9abd-9df5f216e538
00:02:21.666 --> 00:02:24.886
programming environment inside the computer

NOTE Confidence: 0.7668846265

21d9d329-b9bb-4dc4-8e40-4b20d1b5f2e4
00:02:24.886 --> 00:02:29.880
system using a single process processor.

NOTE Confidence: 0.7668846265

c458485f-3e7b-4ec0-9041-83eb956f832e
00:02:29.880 --> 00:02:33.608
But before we start, I mean we start

NOTE Confidence: 0.7668846265

bcabcf57-372d-46b1-b103-972b8255f449
00:02:33.608 --> 00:02:36.313
the communication between a the

NOTE Confidence: 0.7668846265

06df5656-2c34-484e-be3d-018904c6abc9
00:02:36.313 --> 00:02:39.118
different processes inside the memory.

NOTE Confidence: 0.7668846265

239f89ba-0aea-4c09-beeb-d3725f6ea1f7
00:02:39.120 --> 00:02:44.646
We have to do a recap on the lifecycle

NOTE Confidence: 0.7668846265

04ce3812-3935-4999-b114-4fd00405a4b4
00:02:44.646 --> 00:02:48.864
of a process inside a memory.

NOTE Confidence: 0.7668846265

8569d46a-5983-4ce7-a86a-5a5addaa755b
00:02:48.870 --> 00:02:51.228
Usually it's called process states or

NOTE Confidence: 0.7668846265

774c7b2d-c98d-4d4e-b663-04f9384afa4f
00:02:51.228 --> 00:02:54.738
life cycle of a process inside of memory.

NOTE Confidence: 0.7668846265

cd3b7f79-b899-4dea-8b94-bec81e0419a1
00:02:54.740 --> 00:02:57.812
So we already know that we have

NOTE Confidence: 0.7668846265

f649375b-4c63-4571-b61b-af1a403e4b1c
00:02:57.812 --> 00:03:00.698
a program written in a language,

NOTE Confidence: 0.7668846265

3ee82095-e367-40eb-969c-732f1c8305d5
00:03:00.700 --> 00:03:04.475
but it's a dead body we have to bring it

NOTE Confidence: 0.7668846265

1466af48-b33f-4559-b33e-528873391971
00:03:04.475 --> 00:03:07.409
inside the memory to make it runnable.

NOTE Confidence: 0.7668846265

e072e18d-2e9e-40e1-bf5a-54407baf6797
00:03:07.410 --> 00:03:11.514
So when we bootstrap a program into a memory,

NOTE Confidence: 0.7668846265

b46e0189-0cdc-40e2-af77-fd60f7a059f7
00:03:11.520 --> 00:03:14.430
it becomes a process. However,

NOTE Confidence: 0.7668846265

0a13258b-747a-45eb-ba2d-8e38665e42b9
00:03:14.430 --> 00:03:18.760
inside a multi processing environment.

NOTE Confidence: 0.7668846265

5ce66d60-bf1a-4a07-8c58-799af5365713
00:03:18.760 --> 00:03:20.848
Processor cannot be assigned

NOTE Confidence: 0.7668846265

aa3b6ec3-c857-45b5-bea2-9444b24cf3bd
00:03:20.848 --> 00:03:23.934
right away to the process. Uh,

NOTE Confidence: 0.7668846265

ba83e1f5-8fae-4de1-852a-45f52c8f26c5
00:03:23.934 --> 00:03:26.778
basically when you bootstrap your process,

NOTE Confidence: 0.7668846265

89aaa9be-2ff2-441a-8dfa-612de3b2e998
00:03:26.780 --> 00:03:28.770
your programming so the memory

NOTE Confidence: 0.7668846265

2e909526-6989-487b-a26a-aad2647cf4f1
00:03:28.770 --> 00:03:30.760
it goes into a Q.

NOTE Confidence: 0.7668846265

2595e672-0e1d-467e-8b72-7465105790e9
00:03:30.760 --> 00:03:32.923
Or into a list of, uh,

NOTE Confidence: 0.7668846265

97bf65a3-4f75-4c67-9746-dea7246e1985
00:03:32.923 --> 00:03:37.427
I mean processes and then it waits for

NOTE Confidence: 0.7668846265

9eed86b6-3238-4f6e-846c-fad5ba489b5f
00:03:37.427 --> 00:03:42.777
the kernel to assign the processor to the.

NOTE Confidence: 0.7668846265

8d27c048-e3b6-4063-8138-ea90d2d10b99
00:03:42.780 --> 00:03:43.822
Bootstrap process.

NOTE Confidence: 0.7668846265

8050231e-3903-44c2-89c0-b18e276f931b
00:03:43.822 --> 00:03:46.948
It's like a chess player that

NOTE Confidence: 0.7668846265

24a0356c-139d-402b-9dbd-506b765a3547
00:03:46.948 --> 00:03:49.239
registers into a competition,

NOTE Confidence: 0.7668846265

38f944dc-5941-46b4-99d0-ae22428c6ca0
00:03:49.240 --> 00:03:52.208
but it's not assigned any game or

NOTE Confidence: 0.7668846265

c174d3bb-aeeb-4763-912e-e8d3ec6f44b6
00:03:52.208 --> 00:03:55.127
any chess board to start the game.

NOTE Confidence: 0.7668846265

59641a1e-c83f-40ea-8d7d-2cbe304f5c48
00:03:55.130 --> 00:03:57.167
This is there is called the ready,

NOTE Confidence: 0.7668846265

da9883eb-c9c7-4762-8e77-c5020f4b8b23
00:03:57.170 --> 00:03:59.347
which usually we call it a process.

NOTE Confidence: 0.7668846265

e4deda87-22fb-4a50-bf77-e55b397202c4
00:03:59.350 --> 00:04:01.766
I mean now the program becomes a process,

NOTE Confidence: 0.7668846265

1ca43c56-325c-4ad7-b74d-848a973eb651
00:04:01.770 --> 00:04:05.145
but it's not running any opcode.

NOTE Confidence: 0.7668846265

516d3f16-ac5e-4696-a4aa-9957732f8352
00:04:05.145 --> 00:04:07.695
It is waiting for the processor.

NOTE Confidence: 0.768741778571429

2ca1bc7c-90d6-43fe-80fc-8daa48ae0807
00:04:09.830 --> 00:04:12.406
And then when the kernel decides to

NOTE Confidence: 0.768741778571429

e3040de4-aa9c-43ea-9eeb-684dc5212641
00:04:12.406 --> 00:04:15.128
assign a share of processor or time,

NOTE Confidence: 0.768741778571429

c0a1d389-1d73-46c6-9f17-6cbc9d3623ee
00:04:15.130 --> 00:04:18.431
it slices of the processor to the process.

NOTE Confidence: 0.768741778571429

f032cd41-30d0-433d-910d-0499bc1cd645
00:04:18.431 --> 00:04:22.397
So basically this list or queue.

NOTE Confidence: 0.768741778571429

56e98cef-ceee-4fdf-a075-a52b284b2ad7
00:04:22.400 --> 00:04:25.270
You can think of it as a I mean in

NOTE Confidence: 0.768741778571429

8f23998a-51a2-482e-8a57-d4d28c851cc9
00:04:25.364 --> 00:04:28.332
real world queue there are some priorities.

NOTE Confidence: 0.768741778571429

cb032bbb-9297-4249-9b70-07f3ec7c1f94
00:04:28.332 --> 00:04:31.865
So the kernel gives a processor more

NOTE Confidence: 0.768741778571429

ee9f1d4c-b16d-458c-b4c9-409cad8d5a4b
00:04:31.865 --> 00:04:34.460
to the more important processes.

NOTE Confidence: 0.768741778571429

5a313b40-5de6-4044-bca9-dfc962e03541
00:04:34.460 --> 00:04:38.020
Also it depends on The Who who came

NOTE Confidence: 0.768741778571429

e0e4c61e-d968-4c0d-8bf2-b2fa5f858298
00:04:38.020 --> 00:04:40.998
first and who wants to finish.

NOTE Confidence: 0.768741778571429

074e41b7-739a-4251-bcd8-4b5e152c7ed4
00:04:41.000 --> 00:04:44.582
Sooner so you can think of this as a.

NOTE Confidence: 0.768741778571429

85fa135d-a9a0-472d-917a-92182d7bff34
00:04:44.590 --> 00:04:47.770
Kind of first in first out,

NOTE Confidence: 0.768741778571429

8a7ea03d-a75e-4c7b-b19c-4bc0bf38b2b3
00:04:47.770 --> 00:04:49.254
but this is not, I mean two.

NOTE Confidence: 0.768741778571429

d84c0ebc-b907-46d5-bbdb-a0ef22e7ac95
00:04:49.260 --> 00:04:51.786
It's a priority queue in the

NOTE Confidence: 0.768741778571429

b750f907-2e0f-4247-b5b6-f09abeb5d631
00:04:51.786 --> 00:04:53.049
operating system course.

NOTE Confidence: 0.768741778571429

e3c6532d-6793-44d6-9ca6-4f353ca3537e
00:04:53.050 --> 00:04:56.407
You'll learn more about the

NOTE Confidence: 0.768741778571429

8657ae6a-7b90-4d2a-a750-a6feec4e529e
00:04:56.407 --> 00:05:01.549
list of the list of processes.

NOTE Confidence: 0.768741778571429

a186ac52-6b13-4981-be9c-9fb873574ee6
00:05:01.550 --> 00:05:05.240
Inside any readystate.

NOTE Confidence: 0.768741778571429

7b631faf-c4ba-4096-b8d5-9cc050a19afd
00:05:05.240 --> 00:05:05.810
So the

NOTE Confidence: 0.645618184444445

3fc90463-77d2-4853-b659-84acc1af14b8
00:05:08.580 --> 00:05:11.382
 P1, P2, up until Pn these are n processes waiting 

NOTE Confidence: 0.645618184444445

a747a35c-702a-4d27-8b08-fdc9ee2a4301
00:05:11.382 --> 00:05:13.998
for the processor and the kernel decide

NOTE Confidence: 0.645618184444445

b0b8b8cc-cc0f-4913-bf5e-057bea0bbc74
00:05:13.998 --> 00:05:16.228
which one should be picked and which

NOTE Confidence: 0.645618184444445

67f103fc-69aa-4d65-b48c-4b37b182a9c4
00:05:16.228 --> 00:05:18.370
one should be assigned the processor.

NOTE Confidence: 0.645618184444445

a7c31964-4db9-4add-973f-441a29cd48c3
00:05:18.370 --> 00:05:22.578
For instance, if PDO has a higher priority.

NOTE Confidence: 0.645618184444445

6cafec28-36ef-46a2-8d39-3a52b8aba951
00:05:22.580 --> 00:05:26.190
It gets the processor sooner.

NOTE Confidence: 0.645618184444445

7bce3da6-1c1a-42d2-bf8f-28a2da6a8c52
00:05:26.190 --> 00:05:29.508
And it goes to the running state.

NOTE Confidence: 0.645618184444445

ad0f15a5-2904-498c-981b-50a3a54c7d8d
00:05:29.510 --> 00:05:33.280
In the lab in the lecture 09 we

NOTE Confidence: 0.645618184444445

c09e9c3f-800e-4408-a116-07fdb26c7ad2
00:05:33.280 --> 00:05:36.736
talked about something called Nice or

NOTE Confidence: 0.645618184444445

9adf972d-0342-4b09-9fe9-d854cdd8bbe8
00:05:36.736 --> 00:05:40.226
niceness of a process in Unix platform.

NOTE Confidence: 0.645618184444445

d4188b81-1251-452a-ac64-ced7ddaaefea
00:05:40.226 --> 00:05:42.336
If a process wants to.

NOTE Confidence: 0.818468121818182

5ece99c7-110e-49c5-8835-588dfe5bf358
00:05:44.600 --> 00:05:48.206
Ask for more processor share or

NOTE Confidence: 0.818468121818182

9f098d8e-aeaa-450e-b8a7-acee2e9897d5
00:05:48.206 --> 00:05:51.470
increase the priority of itself.

NOTE Confidence: 0.818468121818182

c8a33593-6327-4ba6-8af6-6033733c9970
00:05:51.470 --> 00:05:54.060
It should reduce its niceness,

NOTE Confidence: 0.818468121818182

4c62e24b-10b3-4781-9235-d557315b6508
00:05:54.060 --> 00:05:55.944
meaning that basically the

NOTE Confidence: 0.818468121818182

d57184f2-8414-4b61-96d1-fedca8142cd4
00:05:55.944 --> 00:05:58.770
logic is in the reverse order.

NOTE Confidence: 0.818468121818182

934f1cda-25b8-4f2c-8439-3f8377d6e72e
00:05:58.770 --> 00:06:00.690
A niceness means that a

NOTE Confidence: 0.818468121818182

a23d0056-3b2a-4e07-a79f-d4fe065e1a1a
00:06:00.690 --> 00:06:02.226
process that is generous,

NOTE Confidence: 0.818468121818182

b5ddf36a-802b-425a-8848-e6621d3717fd
00:06:02.230 --> 00:06:04.450
meaning that it wants to share.

NOTE Confidence: 0.818468121818182

583b68ae-91e7-49f1-84ec-82b55345ae65
00:06:04.450 --> 00:06:07.588
I mean, gives his own share

NOTE Confidence: 0.818468121818182

916bb9da-77b7-4e3b-ba69-c76ad6496032
00:06:07.588 --> 00:06:09.157
process to others.

NOTE Confidence: 0.818468121818182

687cb0be-da11-465b-bb52-9eb1e7a67aa9
00:06:09.160 --> 00:06:12.200
If you want to not to be generous,

NOTE Confidence: 0.818468121818182

8c2997e7-f494-4fc9-9f89-7a326fffc5ea
00:06:12.200 --> 00:06:15.406
you have to be more mean meaner,

NOTE Confidence: 0.818468121818182

a37220bf-da91-49f5-95a3-db05a1d63c6d
00:06:15.410 --> 00:06:17.412
meaning that you don't want to share

NOTE Confidence: 0.818468121818182

f75434a4-cead-42d6-9aaa-effe8590c20f
00:06:17.412 --> 00:06:19.612
your share of processor and you want

NOTE Confidence: 0.818468121818182

5d14720d-a235-4576-8445-cc24ab756ac0
00:06:19.612 --> 00:06:21.532
not only your share of processor,

NOTE Confidence: 0.818468121818182

a67b0e6c-209f-490f-ad89-57fedae9a13f
00:06:21.540 --> 00:06:23.084
but you want more.

NOTE Confidence: 0.818468121818182

7eaa6451-d17f-436f-9bea-ca202c35e605
00:06:23.084 --> 00:06:25.400
So you have to increase your

NOTE Confidence: 0.818468121818182

0655907b-8c30-4d6d-9051-9f9e135a9013
00:06:25.482 --> 00:06:28.536
niceness or nicety and as a result

NOTE Confidence: 0.818468121818182

a92857b4-7704-4174-9b3b-c4f98afbd5ce
00:06:28.536 --> 00:06:30.900
you increase your priority and then

NOTE Confidence: 0.818468121818182

70746af3-0d5b-4d34-901e-51e6047c1cac
00:06:30.983 --> 00:06:33.689
the panel gives you more processor.

NOTE Confidence: 0.818468121818182

80f42ce7-4a3d-4397-8d23-c0c0e258dc27
00:06:33.690 --> 00:06:36.948
However, if you increase your niceness,

NOTE Confidence: 0.818468121818182

966afd75-c75f-4aa9-90ae-0b6d7f1f3583
00:06:36.950 --> 00:06:39.846
meaning that you want to be more generous,

NOTE Confidence: 0.818468121818182

9bfd8ed5-0887-43e4-9e8c-de5f3a77e269
00:06:39.850 --> 00:06:41.900
you give more priority to

NOTE Confidence: 0.818468121818182

e33eb617-4d7d-489f-bf4f-854dd1973cb1
00:06:41.900 --> 00:06:43.130
others than yourself.

NOTE Confidence: 0.818468121818182

e161a49f-12fa-462a-9391-56316387d158
00:06:43.130 --> 00:06:45.170
So you are kind of sacrificing

NOTE Confidence: 0.818468121818182

f369bb64-ff07-4d59-a1b7-cc8b1de764cd
00:06:45.170 --> 00:06:46.530
yourself for other processes,

NOTE Confidence: 0.818468121818182

474a1824-25bc-4c85-bf58-6a04f796f764
00:06:46.530 --> 00:06:49.706
so you increase your niceness as a result

NOTE Confidence: 0.818468121818182

4bbc9f8e-6fa2-4d4e-ba7c-965111a8317a
00:06:49.706 --> 00:06:52.238
with decrease or lower your priority.

NOTE Confidence: 0.813987112857143

ad26cdd3-9148-47c3-b77b-bc922483b9eb
00:06:54.400 --> 00:06:55.814
Anyways, at the end of the day,

NOTE Confidence: 0.813987112857143

ff33791b-d6d3-40e4-9452-41519c847e29
00:06:55.820 --> 00:06:58.016
if you receive a processor share,

NOTE Confidence: 0.813987112857143

079b7398-44ad-43bd-a60b-2c2a148a7bdb
00:06:58.020 --> 00:07:00.596
are you going to the running state?

NOTE Confidence: 0.813987112857143

994afb3c-f466-458c-a37f-c34f92f2d269
00:07:00.600 --> 00:07:02.820
And in the running state,

NOTE Confidence: 0.813987112857143

66df2540-0d83-4ae1-9b32-a560dbe37c3b
00:07:02.820 --> 00:07:05.326
if you have only one single processor,

NOTE Confidence: 0.813987112857143

83eb0b1b-6444-4ad8-a614-e07bcf6a40ec
00:07:05.330 --> 00:07:08.810
only one process out of all the ready

NOTE Confidence: 0.813987112857143

643b087c-c28f-4762-b01f-9bea0bd4255a
00:07:08.810 --> 00:07:11.909
processes can be in the runnable state.

NOTE Confidence: 0.813987112857143

f479fe2e-68c0-431c-a634-afe3acdd3337
00:07:11.910 --> 00:07:14.826
Like a chess player that receives

NOTE Confidence: 0.813987112857143

6487cc23-b26b-4327-8794-96e0e93091cf
00:07:14.826 --> 00:07:18.083
the chess board and a set of

NOTE Confidence: 0.813987112857143

9dab516c-6c76-41f8-a437-3f32fa92b01a
00:07:18.083 --> 00:07:20.525
chess pieces to start the game.

NOTE Confidence: 0.813987112857143

cffe3bbd-cbf2-4341-ba6f-05b72cb45fe2
00:07:20.530 --> 00:07:24.226
All the other chess players are waiting

NOTE Confidence: 0.813987112857143

adc75005-ba87-4dd7-944e-647b9fd668fb
00:07:24.226 --> 00:07:27.540
for this player to do some moves.

NOTE Confidence: 0.813987112857143

24bb7357-4841-4663-afe1-27785e799607
00:07:27.540 --> 00:07:29.672
And if your process.

NOTE Confidence: 0.813987112857143

b83ee6e9-b35d-40a9-a14f-5d516305bc25
00:07:29.672 --> 00:07:32.870
I could finish quickly within the

NOTE Confidence: 0.813987112857143

ea102765-4855-4d13-aaf4-e4608ce82854
00:07:32.974 --> 00:07:36.526
assigned time slices of the process,

NOTE Confidence: 0.813987112857143

432172fe-84aa-4d6b-888a-e4f017301a18
00:07:36.530 --> 00:07:39.248
so it goes to termination state.

NOTE Confidence: 0.813987112857143

eb36d4ea-e637-4c5f-8dd1-4c0a280dbb61
00:07:39.250 --> 00:07:40.850
 So like a chess. 

NOTE Confidence: 0.813987112857143

7fd4630b-db2c-4eb5-9423-b9d08d296048
00:07:40.850 --> 00:07:43.237
I mean a player or chess master

NOTE Confidence: 0.813987112857143

399facb8-8b01-4fcc-938f-0b1fc7c8401b
00:07:43.237 --> 00:07:45.788
that can checkmates the rival

NOTE Confidence: 0.813987112857143

af9f7d21-348f-40dc-9b80-14c4c4eea90a
00:07:45.788 --> 00:07:49.100
just in one or two moves.

NOTE Confidence: 0.813987112857143

d7ebca54-2a60-4412-9a28-d88b8bb778dc
00:07:49.100 --> 00:07:49.570
However,

NOTE Confidence: 0.813987112857143

e5f85acf-5bd3-4f55-9c44-3eb82ac98a31
00:07:49.570 --> 00:07:52.390
usually it's not any possible or

NOTE Confidence: 0.813987112857143

10bfb12b-8cb5-4c94-80d2-fc494c4ceaef
00:07:52.390 --> 00:07:55.427
usually our processes is not like just

NOTE Confidence: 0.813987112857143

4aab08ad-1c08-4e78-9b87-d8e38fcd52d8
00:07:55.427 --> 00:07:57.499
finish quickly using our process.

NOTE Confidence: 0.813987112857143

094a3ba6-4a85-4f91-9bfb-b71d24b2991e
00:07:57.499 --> 00:08:00.530
Maybe need some input from the user

NOTE Confidence: 0.813987112857143

28e71bcc-3936-422a-baf1-f680b19614d0
00:08:00.530 --> 00:08:02.706
and if the user waits for one or

NOTE Confidence: 0.813987112857143

09ae9b1e-affd-4eea-b8b8-403f5926f78a
00:08:02.706 --> 00:08:04.740
two hours or one or two minutes,

NOTE Confidence: 0.813987112857143

72a8ba75-f45d-48b2-8324-ecff90031250
00:08:04.740 --> 00:08:06.790
so our process actually waits

NOTE Confidence: 0.813987112857143

50550b72-ebfe-4956-9781-ad468dff500d
00:08:06.790 --> 00:08:08.430
for the user input.

NOTE Confidence: 0.813987112857143

1b5acde4-a07c-4c32-90a8-f1ffc4a788ee
00:08:08.430 --> 00:08:10.074
As a result,

NOTE Confidence: 0.813987112857143

5621ccdb-a7d0-4050-9bcc-0ab4f150f921
00:08:10.074 --> 00:08:12.884
the kernel can get the processor

NOTE Confidence: 0.813987112857143

28105734-7592-48ee-9ded-4c5068bc002a
00:08:12.884 --> 00:08:15.600
back from you and then make you

NOTE Confidence: 0.813987112857143

9b533145-018b-444c-b834-8793d943b70f
00:08:15.688 --> 00:08:17.908
go through a blocking state.

NOTE Confidence: 0.813987112857143

20fb8e37-6b2a-476c-b655-8309f32c644a
00:08:17.910 --> 00:08:19.630
We said that a kernel.

NOTE Confidence: 0.813987112857143

73e0d76b-e410-4d0c-87d5-413788029ccd
00:08:19.630 --> 00:08:21.877
Not only can I stop the execution

NOTE Confidence: 0.813987112857143

16bfb030-6a24-44cd-bcbb-a6a0f7b17858
00:08:21.877 --> 00:08:23.420
of the processor by halt,

NOTE Confidence: 0.813987112857143

549b48b5-6d08-4afe-bebb-266cc4f87b44
00:08:23.420 --> 00:08:25.450
but also it can stop the process.

NOTE Confidence: 0.813987112857143

7c10f12b-23d1-49fe-b0c0-973fd6c584b1
00:08:25.450 --> 00:08:26.164
I mean,

NOTE Confidence: 0.813987112857143

a01477e7-ed56-4c9a-a5ec-ffb58c130573
00:08:26.164 --> 00:08:27.949
the execution of a process

NOTE Confidence: 0.813987112857143

576322db-204d-4968-b5a4-e28ea7994f99
00:08:27.950 --> 00:08:29.730
by blocking the process.

NOTE Confidence: 0.813987112857143

105583a7-a577-4497-83bf-1170ff77a906
00:08:29.730 --> 00:08:31.955
So then your process goes

NOTE Confidence: 0.813987112857143

b8303d6b-02f6-4929-9034-9bfa9b6cf44a
00:08:31.955 --> 00:08:34.088
to the blocking state.

NOTE Confidence: 0.813987112857143

7b8bea42-ebe7-46d6-85e1-1bdac71de6a5
00:08:34.090 --> 00:08:36.424
So although in the running state

NOTE Confidence: 0.813987112857143

0a175bb6-2f5f-4fea-a727-67db00117fd9
00:08:36.424 --> 00:08:39.770
we have only one process in a

NOTE Confidence: 0.813987112857143

cf657c5a-ccec-4599-81ef-00052ba14b2c
00:08:39.770 --> 00:08:41.477
single processing environment.

NOTE Confidence: 0.813987112857143

da368973-25d3-46c7-8021-ca33a48850dc
00:08:41.480 --> 00:08:44.240
Like a ready state in the blocking state.

NOTE Confidence: 0.813987112857143

d2b579df-b170-41d3-9a54-56356b41454a
00:08:44.240 --> 00:08:46.942
We have a list of all the

NOTE Confidence: 0.813987112857143

971836ac-de52-428d-aaa3-39336581a572
00:08:46.942 --> 00:08:48.900
processes that are blocked.

NOTE Confidence: 0.813987112857143

5fa1b57a-6c0c-4057-bcd8-e34d4b9f3834
00:08:48.900 --> 00:08:51.790
Twice as P5P10 and etc.

NOTE Confidence: 0.813987112857143

74ecf692-786d-4739-8141-1a8d5a7d1921
00:08:51.790 --> 00:08:54.010
These are all the processes that

NOTE Confidence: 0.813987112857143

5a69ed5e-d6d4-4ec3-a503-8dd4808f2aae
00:08:54.010 --> 00:08:56.386
are black and they are weather

NOTE Confidence: 0.813987112857143

32e62464-7166-4113-93e9-2ecd90f83ec8
00:08:56.386 --> 00:08:59.786
waiting for IO or for instance

NOTE Confidence: 0.813987112857143

90ba4c05-9be3-4f5b-9282-bb7e6ab2e9da
00:08:59.786 --> 00:09:01.658
there are other scenarios.

NOTE Confidence: 0.813987112857143

c230c3e9-5017-4748-9f3b-a2661ad8502a
00:09:01.660 --> 00:09:03.190
For instance they are waiting

NOTE Confidence: 0.813987112857143

dc2a2e9f-36c5-445e-a459-19763c3b3980
00:09:03.190 --> 00:09:04.720
for their child to finish.

NOTE Confidence: 0.813987112857143

0a3a71c4-685b-4d6c-9f9c-2276a37fb5d0
00:09:04.720 --> 00:09:07.240
We already saw that the parent

NOTE Confidence: 0.813987112857143

ad91bcd4-de54-41c0-8c37-5dd0b14eee19
00:09:07.240 --> 00:09:08.500
process an issue.

NOTE Confidence: 0.813987112857143

1febc991-2092-495a-8d93-886f5215e489
00:09:08.500 --> 00:09:10.164
The system called weight,

NOTE Confidence: 0.813987112857143

e0f23565-3f30-44ee-8026-4387cd0a264a
00:09:10.164 --> 00:09:13.174
meaning that it wants to be blocked

NOTE Confidence: 0.813987112857143

90516da1-882f-4222-b6b3-76bbd8081202
00:09:13.174 --> 00:09:16.198
up until the child or the children

NOTE Confidence: 0.813987112857143

893cfdba-0348-478f-9b15-36a313cb3674
00:09:16.198 --> 00:09:18.771
finish their tasks and then the

NOTE Confidence: 0.813987112857143

997c0fb3-8412-4dac-bf74-06de18aee3f2
00:09:18.771 --> 00:09:21.426
parents can continue the execution.

NOTE Confidence: 0.659616578125

a7ad4327-fcf0-49fc-a1ef-770ab8af9987
00:09:24.490 --> 00:09:27.416
Like a chess player that is awaiting

NOTE Confidence: 0.659616578125

5e8fb497-7c6a-4fbf-9028-9824a06b188a
00:09:27.416 --> 00:09:30.547
for who is waiting for her rivals

NOTE Confidence: 0.659616578125

027da6d7-725b-435b-b147-4a457dd10b7a
00:09:30.547 --> 00:09:33.645
move so as long as other rivals

NOTE Confidence: 0.659616578125

ba1b28ea-2c10-4419-892a-4b47b8c4cd50
00:09:33.645 --> 00:09:36.410
his rival doesn't do any move.

NOTE Confidence: 0.659616578125

a910e400-8274-46a1-9d7c-4df60d5f54fc
00:09:36.410 --> 00:09:38.590
So the chess player should

NOTE Confidence: 0.659616578125

ecc0627d-6718-49e9-8cf9-d3c443518db8
00:09:38.590 --> 00:09:40.080
be in awaiting mistake.

NOTE Confidence: 0.794348152

300f7f35-8ce1-4689-8e7b-94c41e2bf4e6
00:09:42.220 --> 00:09:44.620
So during this waiting state,

NOTE Confidence: 0.794348152

f66b590c-8eb0-47d6-8d5f-f84ae1322041
00:09:44.620 --> 00:09:46.832
the processor can be

NOTE Confidence: 0.794348152

21ef37e5-fad9-406d-bd63-8d9c2d3c0e6a
00:09:46.832 --> 00:09:49.044
assigned to other processes.

NOTE Confidence: 0.794348152

ee505760-34a6-4dd1-a6aa-6e7d16627e9d
00:09:49.050 --> 00:09:50.430
When the processor,

NOTE Confidence: 0.794348152

9aa46a5c-e938-4d34-b885-dd259b3f9a82
00:09:50.430 --> 00:09:53.202
I mean the user, for instance,

NOTE Confidence: 0.794348152

732315d1-d94d-4a3d-977f-accccc219eb5
00:09:53.202 --> 00:09:56.930
enters some inputs and press the new line.

NOTE Confidence: 0.794348152

2df1248f-fa9f-45e9-84c9-d6854052a356
00:09:56.930 --> 00:09:59.876
Or a device and the requested

NOTE Confidence: 0.794348152

24191176-9fbf-4275-a888-5622358bfed6
00:09:59.876 --> 00:10:03.133
data or the child finishes in

NOTE Confidence: 0.794348152

4fedac6f-7f0c-4cf5-a222-0f2c958f19fb
00:10:03.133 --> 00:10:05.191
any of these scenarios or other

NOTE Confidence: 0.794348152

84ab1054-e087-4614-8461-4dd62072188f
00:10:05.191 --> 00:10:07.328
scenarios that you can think of it.

NOTE Confidence: 0.794348152

d4a74afd-aece-40a3-ae40-d877e035460b
00:10:07.330 --> 00:10:10.640
A black processor become ready

NOTE Confidence: 0.794348152

594283ef-fbc6-442c-a112-913b33d9f962
00:10:10.640 --> 00:10:13.136
to execute again, however,

NOTE Confidence: 0.794348152

1e8f3dfc-b5c9-4117-8bbe-aa79fc3c2dd1
00:10:13.136 --> 00:10:16.678
it doesn't go directly to the runnable

NOTE Confidence: 0.794348152

8f35a930-4182-4dd5-922f-2b6718337879
00:10:16.678 --> 00:10:20.045
state because we have already a lot

NOTE Confidence: 0.794348152

cba0ebec-1cd5-4472-a024-529ffe8df458
00:10:20.045 --> 00:10:23.110
of processes in the radio state.

NOTE Confidence: 0.794348152

94fa5720-89af-4d07-8022-73c8d5b0c38a
00:10:23.110 --> 00:10:27.025
So you have to go back to the queue.

NOTE Confidence: 0.794348152

ca830188-ed77-4b72-a497-5267345c6e2c
00:10:27.030 --> 00:10:29.184
So I found the blocking blocking

NOTE Confidence: 0.794348152

8a9395f4-5883-48ff-9293-e7747b1f8f05
00:10:29.184 --> 00:10:31.521
instead you go to their radius

NOTE Confidence: 0.794348152

e617670c-5f1b-4267-bd24-189aeaebea03
00:10:31.521 --> 00:10:33.999
state and wait for the processor.

NOTE Confidence: 0.826923156923077

c3f0eb89-3f09-4982-96e3-6f8e5f640e25
00:10:38.150 --> 00:10:41.302
So as in a normal cycle of a

NOTE Confidence: 0.826923156923077

83e46bd7-f951-494c-a420-a7bd13da7560
00:10:41.302 --> 00:10:43.730
processor process inside the memory,

NOTE Confidence: 0.826923156923077

998166a2-fbd5-4af9-bfa6-6d163fb8a784
00:10:43.730 --> 00:10:47.564
usually we have this cycle, so you have a.

NOTE Confidence: 0.826923156923077

8ee1b9c4-de19-4d11-b11b-14fd8b99d65a
00:10:47.564 --> 00:10:50.260
Your process goes to the radio state.

NOTE Confidence: 0.832410055

b72aabdc-c897-46ec-8031-2394270f5564
00:10:52.320 --> 00:10:53.403
Received some time.

NOTE Confidence: 0.832410055

b539dbd9-2c48-46b5-8d1d-4b0d5c94e6c8
00:10:53.403 --> 00:10:55.208
It slices of the processor,

NOTE Confidence: 0.832410055

dbc4787f-41f7-4902-9c2a-ec771794f574
00:10:55.210 --> 00:10:59.226
do some opcodes and then goes the blocking

NOTE Confidence: 0.832410055

87d6a561-a020-4409-afbf-9e3d41c2aa39
00:10:59.226 --> 00:11:01.602
state and then after receiving the input

NOTE Confidence: 0.832410055

2d38d107-abe0-4d5e-9138-eb91430d0305
00:11:01.602 --> 00:11:04.080
from the user or the child finishes,

NOTE Confidence: 0.832410055

0252ba6b-2c07-47c2-9e7b-2188596a82af
00:11:04.080 --> 00:11:06.502
 it goes to the ready state waiting 

NOTE Confidence: 0.832410055

b980f991-4717-4f02-9ddc-4ae780568ded
00:11:06.502 --> 00:11:08.538
for the processor again and etc.

NOTE Confidence: 0.832410055

c46e6287-d63c-4570-a426-9e33929040ce
00:11:08.540 --> 00:11:11.004
I mean again receiving the processor and

NOTE Confidence: 0.832410055

df14fb8e-ae05-4c4b-9348-909fe9272e26
00:11:11.004 --> 00:11:13.927
it's so this is the normal cycle of any.

NOTE Confidence: 0.832410055

759ad1be-4890-4f98-8357-c6f6c8dc228b
00:11:13.930 --> 00:11:16.930
I mean normal process.

NOTE Confidence: 0.832410055

9a27deed-efb0-4cd8-b783-10b2db2b10e6
00:11:16.930 --> 00:11:21.718
But sometimes your process doesn't have any.

NOTE Confidence: 0.832410055

1aee54da-028c-4092-9531-a7dae2b1cc3d
00:11:21.720 --> 00:11:24.261
I mean it doesn't need any input

NOTE Confidence: 0.832410055

8afc3bd9-5791-46b9-9ba7-554ccf0dcdb7
00:11:24.261 --> 00:11:27.222
from the user, or doesn't do any.

NOTE Confidence: 0.832410055

a9a2fb8d-0bee-4af4-847f-910c5f08e93d
00:11:27.222 --> 00:11:30.030
I mean sending or receiving information

NOTE Confidence: 0.832410055

966eaee6-986d-4595-bd69-60f4dc4e2d60
00:11:30.112 --> 00:11:33.255
from devices or doesn't have any child.

NOTE Confidence: 0.832410055

b6684a51-d18d-4f6f-8614-42d3560d99db
00:11:33.260 --> 00:11:35.250
What happens in this scenario?

NOTE Confidence: 0.832410055

b995603d-e052-4c9d-ad7f-153b6467cba2
00:11:35.250 --> 00:11:38.239
So for instance, you just write it.

NOTE Confidence: 0.832410055

298d41be-7637-4c77-9e31-129c7451916a
00:11:38.240 --> 00:11:41.019
An algorithm that does just some computation

NOTE Confidence: 0.832410055

25ff3f9e-70a1-48a5-9438-b522e72eebd6
00:11:41.019 --> 00:11:43.799
without a need for user input or without

NOTE Confidence: 0.832410055

8f8eaab9-d100-4639-876e-e7a9e1c246ec
00:11:43.799 --> 00:11:48.100
a need for a device input output.

NOTE Confidence: 0.832410055

61654598-3554-4ee9-b34a-e2fa76a28ad9
00:11:48.100 --> 00:11:51.160
A similar way would be this,

NOTE Confidence: 0.832410055

7c094c6b-d67d-4561-9933-37871a16cbaa
00:11:51.160 --> 00:11:51.956
for instance,

NOTE Confidence: 0.832410055

3092c8b2-7cf8-4279-b548-77231eb52360
00:11:51.956 --> 00:11:55.197
you remember we write a main function that

NOTE Confidence: 0.832410055

cac5024e-bddf-441f-a30e-93a474a436ff
00:11:55.197 --> 00:11:57.879
does the addition between two numbers.

NOTE Confidence: 0.832410055

6f4ae5af-9eee-4e20-aa02-4c863dd0e6b7
00:11:57.880 --> 00:12:00.848
We could write in main function without

NOTE Confidence: 0.832410055

77508742-b135-4a8d-a297-e16a0b320e4e
00:12:00.848 --> 00:12:03.606
the parameters or we ask the user to.

NOTE Confidence: 0.832410055

96a61e71-5f81-41ee-8552-c63e3936057f
00:12:03.610 --> 00:12:06.473
Input the numbers when it says number

NOTE Confidence: 0.832410055

12f3f1b4-03df-44b8-b835-07e85ed408c4
00:12:06.473 --> 00:12:09.932
 A and then ask the number B and etc. 

NOTE Confidence: 0.832410055

de1c2ae4-4986-46e9-a112-30b43d1388fc
00:12:09.932 --> 00:12:12.248
So this way our program waits

NOTE Confidence: 0.832410055

268603cf-e775-48da-9b6d-7e66e2fc1ec0
00:12:12.248 --> 00:12:14.370
for the IO in order to.

NOTE Confidence: 0.832410055

f4da4d47-e9e3-42b8-bd27-48741df551b5
00:12:14.370 --> 00:12:16.631
I mean it waits for the user

NOTE Confidence: 0.832410055

6c58fadb-4893-4172-ac82-b0933d7d6509
00:12:16.631 --> 00:12:18.300
to input some numbers.

NOTE Confidence: 0.832410055

44ee0730-afe6-4b29-817b-202029c500d9
00:12:18.300 --> 00:12:21.008
We said that we could write and

NOTE Confidence: 0.832410055

65f2b217-f9ce-46c0-a82b-0ed7aa1af9ba
00:12:21.008 --> 00:12:24.752
another way we could say that we can

NOTE Confidence: 0.832410055

722a482f-216b-4f42-ba09-2c0d68a21a6f
00:12:24.752 --> 00:12:28.177
write a mean by the argc and argv.

NOTE Confidence: 0.832410055

cd787f14-9cd1-408b-a5b0-f482929bc1e0
00:12:28.180 --> 00:12:31.324
And then we just simply do

NOTE Confidence: 0.832410055

22367131-40c6-45f5-b293-8803bfe26f44
00:12:31.324 --> 00:12:33.420
addition of the arc.

NOTE Confidence: 0.832410055

851cbab3-a935-41ff-a76b-c31be7853c4d
00:12:33.420 --> 00:12:36.395
The first parameter to the program and

NOTE Confidence: 0.832410055

cdc43946-69e0-4100-a5d4-5d98f635bbc3
00:12:36.395 --> 00:12:39.730
then the second parameter to the program.

NOTE Confidence: 0.832410055

60206ab1-c236-4529-aca2-9e097920a4cf
00:12:39.730 --> 00:12:42.404
And then we will run the program.

NOTE Confidence: 0.832410055

73210bcc-4670-46c5-80c9-fd79efa91ec8
00:12:42.410 --> 00:12:45.074
We just simply pass the parameter

NOTE Confidence: 0.832410055

46f0aa4d-8d7c-4328-85d2-a93f0c0907b5
00:12:45.074 --> 00:12:47.740
of our program inside the shell.

NOTE Confidence: 0.832410055

4a775870-1cc3-4970-8e36-0194c2ef9754
00:12:47.740 --> 00:12:49.582
So this way our program doesn't

NOTE Confidence: 0.832410055

e5726931-abeb-47e9-93ac-159fe9370242
00:12:49.582 --> 00:12:52.181
wait for the user input at the time

NOTE Confidence: 0.832410055

aa0a7e27-f56a-4745-92d3-81e18bc57b83
00:12:52.181 --> 00:12:54.137
that it is bootstrapped in memory.

NOTE Confidence: 0.832410055

69fe3257-c8ba-4135-b141-023135deb866
00:12:54.140 --> 00:12:57.040
It already has the values,

NOTE Confidence: 0.832410055

beb6b1aa-149a-4aee-9eb4-a87e5f66894d
00:12:57.040 --> 00:13:00.407
so this program doesn't have any IO,

NOTE Confidence: 0.832410055

fbc35a6b-31f5-4722-ac12-f7b0c56bfd1b
00:13:00.410 --> 00:13:02.994
so it just simply goes to the memory

NOTE Confidence: 0.832410055

518bbc64-2e1c-42b2-9bfe-f5669e7a1d17
00:13:02.994 --> 00:13:05.228
and then execute the addition.

NOTE Confidence: 0.832410055

b6bc2f70-a3f2-485e-9a21-78b7967c240e
00:13:05.230 --> 00:13:08.590
Even in this case that there is no

NOTE Confidence: 0.832410055

0ce3cd75-c36f-437e-af16-42d942dbc791
00:13:08.590 --> 00:13:11.218
blocking state or I or or for the

NOTE Confidence: 0.832410055

952dbc93-2d7a-4eb2-8f48-485a84463175
00:13:11.218 --> 00:13:13.808
child to be to finish the task.

NOTE Confidence: 0.832410055

ab950418-873b-4629-9c1f-83381ebd4e47
00:13:13.810 --> 00:13:16.246
It's still your program may takes a

NOTE Confidence: 0.832410055

794cc404-e6df-452c-ab67-c58720207c6e
00:13:16.246 --> 00:13:19.296
lot of time to do all the calculations

NOTE Confidence: 0.832410055

5c343e4e-2c19-42e2-a8cc-dd45ed41f7d0
00:13:19.300 --> 00:13:22.436
and the time it slices that is

NOTE Confidence: 0.832410055

5b201423-fe93-4933-b175-e0c8a28d2762
00:13:22.436 --> 00:13:25.714
assigned to you by the kernel might

NOTE Confidence: 0.832410055

1d2ea481-1cae-45d3-bb3f-cdd332f000e0
00:13:25.714 --> 00:13:29.050
be less than the required I mean.

NOTE Confidence: 0.832410055

bbff0267-5cf7-44a3-a9bd-bf0ef859473a
00:13:29.050 --> 00:13:29.627
Slices.

NOTE Confidence: 0.832410055

74202e8e-4e41-4c53-a79b-8a553975c5d2
00:13:29.627 --> 00:13:31.358
So for instance,

NOTE Confidence: 0.832410055

05c9ff5c-3fc5-42aa-96f9-f260d866d3e9
00:13:31.358 --> 00:13:36.410
if you need 10 times slice of processor.

NOTE Confidence: 0.832410055

d7b407db-f8e5-4006-a8c5-ae8b2e29ef4b
00:13:36.410 --> 00:13:38.330
But they can and they assign

NOTE Confidence: 0.832410055

83b641c4-fd66-4962-b957-90df1de24e86
00:13:38.330 --> 00:13:40.170
you only two time slices,

NOTE Confidence: 0.832410055

58da45a1-3748-4954-92ae-c1181bdb61f1
00:13:40.170 --> 00:13:43.186
so you just go to the running state.

NOTE Confidence: 0.832410055

78feae19-7cdb-4983-8cb2-ce099bd5d7a0
00:13:43.190 --> 00:13:45.302
You run two opcodes,

NOTE Confidence: 0.832410055

c42a210d-e4be-4406-9536-dc679a11dc81
00:13:45.302 --> 00:13:47.414
you you're the processor

NOTE Confidence: 0.832410055

633daf06-edd1-4ead-a99c-b4de313cdd25
00:13:47.414 --> 00:13:50.400
cannot be retrieved from you.

NOTE Confidence: 0.832410055

cccc43ea-d1e1-4dbf-91af-8ea9542eaf13
00:13:50.400 --> 00:13:51.243
As a result,

NOTE Confidence: 0.832410055

4dc39da3-dd32-44b4-951d-730e2725443c
00:13:51.243 --> 00:13:53.210
 you go back to the ready state 

NOTE Confidence: 0.832410055

2b028bc1-befa-4a39-b219-bc1e9226f18f
00:13:53.282 --> 00:13:54.920
to the back of the queue,

NOTE Confidence: 0.832410055

0b1bf2f6-d9cf-43fb-9655-debaff22b041
00:13:54.920 --> 00:13:58.728
and then you wait for another two slices.

NOTE Confidence: 0.832410055

1fb80911-0740-4a8a-a4f2-6142df615a12
00:13:58.730 --> 00:14:01.426
After a while you receive another two slices,

NOTE Confidence: 0.832410055

f0bdbef5-c672-4f86-a2b2-a9f541a76c37
00:14:01.430 --> 00:14:03.758
you run another two opcodes and

NOTE Confidence: 0.832410055

3b297c33-e205-49eb-b9d7-35a213179ce3
00:14:03.758 --> 00:14:06.210
then you back to the queue.

NOTE Confidence: 0.832410055

caf9aab3-24ee-4432-9d42-419fc2f3f750
00:14:06.210 --> 00:14:07.476
So again,

NOTE Confidence: 0.832410055

efb81144-5804-46e6-8133-93604da77b8c
00:14:07.476 --> 00:14:10.850
even in this case you gonna

NOTE Confidence: 0.832410055

c1b41e12-c2b1-4b35-a233-9f8a64615423
00:14:10.850 --> 00:14:12.950
go to the radio state.

NOTE Confidence: 0.832410055

25417622-de3c-4b08-a278-e2d8068af6e8
00:14:12.950 --> 00:14:14.972
But here you don't have any

NOTE Confidence: 0.832410055

ae4ae81b-c6ac-45e7-8ccb-35a747243e5d
00:14:14.972 --> 00:14:16.786
blocking state because you are

NOTE Confidence: 0.832410055

ddcab66d-cbd5-4152-82e2-9bb013532584
00:14:16.786 --> 00:14:18.756
executing your opcode and suddenly

NOTE Confidence: 0.832410055

a503af52-bb3b-4c97-88e8-13812621f867
00:14:18.756 --> 00:14:20.959
the processor is fetched from you.

NOTE Confidence: 0.811007833684211

0cad5827-1fa5-48ff-a0ed-4f31d620eba5
00:14:20.960 --> 00:14:23.291
Uh, and then as a result you go to

NOTE Confidence: 0.811007833684211

68614d4b-f2ed-4c3c-9045-30e377ca1caf
00:14:23.291 --> 00:14:25.479
the radio state because you are

NOTE Confidence: 0.811007833684211

06d68e88-15df-4979-a49b-279c7b2198c2
00:14:25.479 --> 00:14:27.544
not waiting for other resources.

NOTE Confidence: 0.811007833684211

173b4a38-9845-4b78-9d68-bdefd9077f32
00:14:27.544 --> 00:14:29.840
You only you're only

NOTE Confidence: 0.811007833684211

e12b6dfd-8b22-4bec-8f63-fed43a2dd74b
00:14:29.840 --> 00:14:31.128
waiting for the processor.

NOTE Confidence: 0.734914155294118

29f55b35-28a6-4fc1-a529-8bf6a1e2a4ce
00:14:33.420 --> 00:14:36.048
And finally, if you have the

NOTE Confidence: 0.734914155294118

06add0e1-ddfe-4a2f-9aa5-9cf7e679cc20
00:14:36.048 --> 00:14:38.774
processor and you could run your

NOTE Confidence: 0.734914155294118

0bdacab4-a953-4dcd-9d1e-d089a69113d6
00:14:38.774 --> 00:14:40.999
last upload of your program,

NOTE Confidence: 0.734914155294118

25908e9a-2ce1-410c-afc3-212f1e3ef8aa
00:14:41.000 --> 00:14:43.570
you go into determination state.

NOTE Confidence: 0.734914155294118

84eea520-fe6a-4157-bbd0-768ff4007947
00:14:43.570 --> 00:14:47.000
Uh, like it. I mean, it's chess player.

NOTE Confidence: 0.734914155294118

07e03685-192a-4add-8360-781d9a5d7b2a
00:14:47.000 --> 00:14:50.150
That check makes the uh,

NOTE Confidence: 0.734914155294118

20d10e56-b651-40bb-b844-b0884f596216
00:14:50.150 --> 00:14:52.890
the rival after I mean,

NOTE Confidence: 0.734914155294118

ab68678e-fe18-4928-8ce2-4028d83c5c28
00:14:52.890 --> 00:14:57.120
a lot of I mean weightings, and.

NOTE Confidence: 0.734914155294118

12d80594-ac8d-41ce-bd8f-990b4100c489
00:14:57.120 --> 00:14:58.800
Back and forth and getting

NOTE Confidence: 0.734914155294118

45dbd6b5-2686-4a01-ba33-033e7e9a7624
00:14:58.800 --> 00:15:00.480
the chess board and etc.

NOTE Confidence: 0.734914155294118

608dc3a3-4343-4389-85b8-496992f89196
00:15:00.480 --> 00:15:02.514
Finally, I mean checkmates move and

NOTE Confidence: 0.734914155294118

55dbe550-8fb3-489b-85d8-3f39b50d7192
00:15:02.514 --> 00:15:04.210
then determination of the game.

NOTE Confidence: 0.789937532

400bacdc-f95d-45f4-bc68-032698e1d1f6
00:15:06.490 --> 00:15:08.275
And here is the whole, uh,

NOTE Confidence: 0.789937532

d3acb794-6a72-4614-8f31-4603d3761774
00:15:08.275 --> 00:15:11.530
lifecycle of a process inside the memory.

NOTE Confidence: 0.789937532

d1f17b02-f909-4f98-a906-f1e79857fb42
00:15:11.530 --> 00:15:14.458
This is just for one process.

NOTE Confidence: 0.789937532

e17a8fd8-a852-414e-9b4e-38e2d28f5220
00:15:14.460 --> 00:15:18.290
But for the inside, the kernel, uh,

NOTE Confidence: 0.789937532

9e2113c5-0241-4dc8-91e6-a67a5b26a9eb
00:15:18.290 --> 00:15:23.540
the QS for ready States and for the blocking.

NOTE Confidence: 0.789937532

c7aa9109-a579-4e2c-80f9-fc9393715a7b
00:15:23.540 --> 00:15:27.586
A state and who currently has the

NOTE Confidence: 0.789937532

cdb92b6c-815b-454e-b468-c47527ac13c9
00:15:27.586 --> 00:15:31.400
processor is, uh, I mean is monitored

NOTE Confidence: 0.789937532

5c5dff41-bb12-4f4b-ae6c-7526b331c41e
00:15:31.400 --> 00:15:33.520
somewhere inside the kernel.

NOTE Confidence: 0.789937532

8017a4b3-c1dd-47d1-a7e4-b6b542be525f
00:15:33.520 --> 00:15:35.848
So we have one Q here.

NOTE Confidence: 0.789937532

fd756a00-5ef6-47d7-8218-17d7ed376f49
00:15:35.850 --> 00:15:38.410
Q1 we have one Q here, Q2.

NOTE Confidence: 0.789937532

024767e7-cac5-489c-bfdf-959009c8506b
00:15:38.410 --> 00:15:41.630
You can read more about these cues

NOTE Confidence: 0.789937532

625c6397-5a96-40c2-8c6b-bd1cbdcb333a
00:15:41.630 --> 00:15:45.109
in the course operating system.

NOTE Confidence: 0.789937532

250c4e4b-228f-41f6-b576-910648fefbe6
00:15:45.110 --> 00:15:47.312
And they are when in that

NOTE Confidence: 0.789937532

6f91296b-cd9a-4ceb-bfb4-997162176b4f
00:15:47.312 --> 00:15:48.780
course you are learning.

NOTE Confidence: 0.789937532

6e9a8e67-7a17-4e47-826f-f6bf2977f11d
00:15:48.780 --> 00:15:51.080
How the process manager

NOTE Confidence: 0.789937532

ab2a093e-0e8d-4539-9013-1e419a26296d
00:15:51.080 --> 00:15:52.805
handles multiple processes?

NOTE Confidence: 0.951343932

d3ae8001-c6a9-4197-bc6a-c1f6ac98b9a6
00:15:56.220 --> 00:15:58.200
So any questions so far?

NOTE Confidence: 0.602553222222222

42d8f9e0-4895-4982-af90-d15c57eb0280
00:16:04.850 --> 00:16:08.918
Or we made some asks that an infinite loop,

NOTE Confidence: 0.602553222222222

d3d67395-372b-4b1f-acf1-6ca32107f83d
00:16:08.920 --> 00:16:11.218
meaning that the busy waiting loop

NOTE Confidence: 0.602553222222222

4f436e13-9b11-4785-accd-61f9c2b120c5
00:16:11.220 --> 00:16:14.570
caused the process to be blocked, no?

NOTE Confidence: 0.602553222222222

4e28016f-21e6-4667-9faa-aa682c84a510
00:16:14.570 --> 00:16:19.220
From the US. So let me back to this picture.

NOTE Confidence: 0.7426925

1204bf40-5fbe-46a7-a05f-c4f310f9e389
00:16:24.810 --> 00:16:29.298
Let me just. Here the whole.

NOTE Confidence: 0.7426925

0711369a-0d2d-456e-9212-86a300554c07
00:16:29.300 --> 00:16:33.180
So miss I'm asked that if we have

NOTE Confidence: 0.7426925

4975672e-af1f-40ca-a217-39f75c7dfc04
00:16:33.180 --> 00:16:36.110
a busy loop or I mean four, look.

NOTE Confidence: 0.7426925

0c6dcfbd-4578-4771-8564-65473124b391
00:16:36.110 --> 00:16:38.750
Basically your program has this way.

NOTE Confidence: 0.7426925

44bdca2e-f91d-4a8e-95e6-ba08f85bcc3c
00:16:38.750 --> 00:16:43.550
So Maine. And it has just a while.

NOTE Confidence: 0.7426925

f80be694-d045-420e-a42e-9b37c16896e4
00:16:43.550 --> 00:16:47.348
1. And do nothing. This program,

NOTE Confidence: 0.7426925

909fac87-3c46-4309-abc8-7dccc3a84f11
00:16:47.350 --> 00:16:50.410
if you run this program, it just do nothing.

NOTE Confidence: 0.7426925

aa0da73b-e027-41b6-83a9-71a4c9e25020
00:16:50.410 --> 00:16:52.450
I'm just busy waiting.

NOTE Confidence: 0.7426925

600ce9e8-914a-4444-96d8-d56537e4253d
00:16:52.450 --> 00:16:55.054
It doesn't go to the blocking state.

NOTE Confidence: 0.7426925

9d68ea91-e317-4647-992d-80f737d19e69
00:16:55.060 --> 00:16:57.202
The thing is that first of what

NOTE Confidence: 0.7426925

317a5413-6986-4942-88e6-1785cc9e92cd
00:16:57.202 --> 00:16:59.358
it goes to the radio state.

NOTE Confidence: 0.7426925

621d31d8-09d6-4ea5-8243-c9a9d5df1d15
00:16:59.360 --> 00:17:01.490
And then it waits. For instance,

NOTE Confidence: 0.7426925

ede295fc-7e51-4f84-9b4b-957768a0c48f
00:17:01.490 --> 00:17:05.080
if we already have P1 and P2 in the queue,

NOTE Confidence: 0.7426925

c0c533e8-da57-4424-9a63-ff46e3b393da
00:17:05.080 --> 00:17:07.402
so it becomes the your program

NOTE Confidence: 0.7426925

ae3709eb-85d6-4dcc-a24a-b65d67487a68
00:17:07.402 --> 00:17:08.658
becomes the P3.

NOTE Confidence: 0.7426925

23f1f4cc-c3f3-4e0e-a034-8780d1473a50
00:17:08.658 --> 00:17:12.018
This is your program, your process.

NOTE Confidence: 0.7426925

aad29e94-2f53-4889-98d2-beb86d7b3cfe
00:17:12.018 --> 00:17:15.429
So the P1 had the processor,

NOTE Confidence: 0.7426925

e6964807-e0b1-4089-8560-a53e20118df0
00:17:15.429 --> 00:17:18.801
does some tasks and maybe go to the

NOTE Confidence: 0.7426925

dc0e005a-c5ce-41c9-8c5a-e79ba419ab65
00:17:18.801 --> 00:17:21.177
blocking step waiting for IO or

NOTE Confidence: 0.7426925

62c1be62-1b64-407d-9cae-f4aba9cc3420
00:17:21.177 --> 00:17:24.189
goes back to the back of the cube.

NOTE Confidence: 0.7426925

ce3c92f1-bd0c-4b5e-b427-2c3204ba1114
00:17:24.190 --> 00:17:28.230
And then the P2 Gos received the processor.

NOTE Confidence: 0.7426925

8be51468-6257-44c5-bb11-2bed72391bc3
00:17:28.230 --> 00:17:29.064
For instance,

NOTE Confidence: 0.7426925

e4d51403-cec4-43b6-a0c9-b9fcdc44b33d
00:17:29.064 --> 00:17:31.566
we slice of the processor does

NOTE Confidence: 0.7426925

6a5a7674-959a-47a1-aa38-1ac85154c4b4
00:17:31.566 --> 00:17:33.149
two opcodes and then.

NOTE Confidence: 0.7426925

c905608a-de46-421c-a9f3-b640d459531a
00:17:33.150 --> 00:17:35.572
Goes back to the key back of

NOTE Confidence: 0.7426925

e3fc814f-37a2-4414-9528-a985aa3719b0
00:17:35.572 --> 00:17:37.620
the Q and now sorry.

NOTE Confidence: 0.7426925

7958f609-470e-4c64-9d35-fe2109d66dd4
00:17:37.620 --> 00:17:40.656
And now you have the processor.

NOTE Confidence: 0.7426925

3cfd0c95-e8b4-4e2a-ad01-858461eb7ea8
00:17:40.660 --> 00:17:42.178
So when you have the processor,

NOTE Confidence: 0.7426925

b8f3c87f-8a48-4094-8cb7-b50631c54930
00:17:42.180 --> 00:17:44.688
this while loop says.

NOTE Confidence: 0.7426925

f1074253-f171-4220-aa48-a231492a2e65
00:17:44.690 --> 00:17:47.014
Assuming that this is the first code,

NOTE Confidence: 0.7426925

4f2fa020-b3cb-4711-95bf-8f08b1fdc9e6
00:17:47.020 --> 00:17:51.268
so you have only two slices.

NOTE Confidence: 0.7426925

40a72fc2-471d-438c-9aa3-e87e83319bfb
00:17:51.270 --> 00:17:53.454
So you have.

NOTE Confidence: 0.7426925

c2e5992e-1706-491e-8327-15c5e7ef6ca8
00:17:53.454 --> 00:17:56.366
Or this oversimplified example?

NOTE Confidence: 0.7426925

c50553d7-0a2e-4c7a-9de2-68892a07cdaa
00:17:56.370 --> 00:17:58.736
For instance you have you have the

NOTE Confidence: 0.7426925

3aeddbc7-1d9c-4238-9f0b-6f3464c4ce47
00:17:58.736 --> 00:18:00.909
opportunity to run only two opcodes.

NOTE Confidence: 0.7426925

0aade147-1ee6-41da-b11e-9d21b487945b
00:18:00.910 --> 00:18:03.388
What would be that those opcodes?

NOTE Confidence: 0.7426925

a6b1771e-5d79-4526-b17b-4142cc66d339
00:18:03.390 --> 00:18:07.470
So checking the condition?

NOTE Confidence: 0.7426925

85c27833-2609-4fdc-8e9d-62e64c8f0e49
00:18:07.470 --> 00:18:09.654
So this is 1 opcode and then

NOTE Confidence: 0.7426925

6d9bf6e3-38cd-4c54-994f-8f705e0e8067
00:18:09.654 --> 00:18:11.220
if the condition is true,

NOTE Confidence: 0.7426925

b25b7b98-65d7-4367-bbcc-caed6f8031c5
00:18:11.220 --> 00:18:12.790
you go inside the bracket,

NOTE Confidence: 0.7426925

2851ce20-c6ad-43ea-a92d-ea40bb0d51a4
00:18:12.790 --> 00:18:15.418
which is nothing and then you

NOTE Confidence: 0.7426925

7e518dcf-4416-4800-82ec-fadbfce57ec7
00:18:15.418 --> 00:18:18.030
come come back to the checking.

NOTE Confidence: 0.7426925

e72d28a7-847f-401e-b7d5-bf3cd698aab3
00:18:18.030 --> 00:18:21.870
So you do the checking whether the I

NOTE Confidence: 0.7426925

cf6efeff-f715-4552-acab-35035e3ea5c9
00:18:21.870 --> 00:18:25.365
mean the condition is equal to true.

NOTE Confidence: 0.7426925

2559acc1-3ca6-4a21-8009-168f8aad84b9
00:18:25.370 --> 00:18:28.290
And then you go to.

NOTE Confidence: 0.7426925

975d1ce1-b31e-47f2-bc3e-1b2d1ef7bbfb
00:18:28.290 --> 00:18:31.714
To the wild that command go to why?

NOTE Confidence: 0.796261471176471

3dcf15d9-5dca-4d92-8258-1d65240a50df
00:18:33.840 --> 00:18:37.048
You do this, you lose the processor and

NOTE Confidence: 0.796261471176471

8ee5d0ea-2884-446b-9936-8eb9b1986314
00:18:37.048 --> 00:18:40.188
then you go back to the back of the.

NOTE Confidence: 0.796261471176471

f41a3b9e-3284-49d8-ad0f-4180220c131a
00:18:40.190 --> 00:18:44.798
A cute and then again each time you

NOTE Confidence: 0.796261471176471

ce724856-7f6e-41e4-a0c4-1231746808b8
00:18:44.798 --> 00:18:47.496
do this condition so you never blood.

NOTE Confidence: 0.796261471176471

f599b84e-b1e7-42d4-a293-3c3afaf9312b
00:18:47.496 --> 00:18:50.550
Are you process always do the checking,

NOTE Confidence: 0.796261471176471

52f3a1ed-5f96-46e2-98ae-82172b6aa1ae
00:18:50.550 --> 00:18:53.245
wait for the processor and then goes?

NOTE Confidence: 0.796261471176471

be69e1a2-6cae-430b-bb2d-d10c1ab486b0
00:18:53.250 --> 00:18:55.470
I mean receive the processor,

NOTE Confidence: 0.796261471176471

6f01f7e4-aa1d-4e03-acc8-0fa5acb7c4db
00:18:55.470 --> 00:18:58.750
do the checking back to the queue. Yeah.

NOTE Confidence: 0.779961739

ca4b2926-c85d-4e41-9652-3378ae570338
00:19:02.460 --> 00:19:04.324
Exactly, so one thing,

NOTE Confidence: 0.779961739

e9b9d42b-4a77-4026-8718-920d36dabc7d
00:19:04.324 --> 00:19:07.120
one interesting thing would be this.

NOTE Confidence: 0.779961739

73ec4aab-6f93-498c-91b3-83d72ebd5fa1
00:19:07.120 --> 00:19:09.096
I I really suggest you to do this.

NOTE Confidence: 0.779961739

10bc96d2-7ee6-473d-af4d-ffdca12251ee
00:19:09.100 --> 00:19:13.660
Uh, it's. It's a nice experience.

NOTE Confidence: 0.779961739

ba0a7129-b7bc-4067-a2eb-96266cc67701
00:19:13.660 --> 00:19:17.116
Or write such this simple program.

NOTE Confidence: 0.779961739

f0d88c33-9bee-4af3-9da6-fe1fd2299e5a
00:19:17.120 --> 00:19:20.590
And increase the higher priority

NOTE Confidence: 0.779961739

b5500fcd-a60c-4f5e-bced-3bfa876fcd97
00:19:20.590 --> 00:19:24.065
or decrease your nicety niceness.

NOTE Confidence: 0.779961739

08e890b0-f376-4fc5-9f1e-3953787cb00e
00:19:24.065 --> 00:19:27.946
So make your nice zero meaning

NOTE Confidence: 0.779961739

ea8dcd81-f991-4c36-9cae-e03f673594f8
00:19:27.946 --> 00:19:29.976
that this process gets the

NOTE Confidence: 0.779961739

1dce80d9-f2cd-46df-a758-684580c47bc9
00:19:29.976 --> 00:19:32.100
highest priority in the queue.

NOTE Confidence: 0.779961739

770e440d-5661-44b7-aaf6-392af93e8175
00:19:32.100 --> 00:19:34.398
As a result.

NOTE Confidence: 0.779961739

42aa6c30-a9a2-4b43-aecd-9b6f63e56e32
00:19:34.400 --> 00:19:37.410
The kernel gives the whole

NOTE Confidence: 0.779961739

4a376f6d-3e18-4628-a16f-68b95eee7c70
00:19:37.410 --> 00:19:38.846
process are always.

NOTE Confidence: 0.779961739

2be2e5ac-4f5c-4980-8501-74d06f817b4d
00:19:38.846 --> 00:19:40.654
You are in the front of the queue

NOTE Confidence: 0.779961739

1936da1d-2ae2-4c4e-9781-5a890d8bc6bb
00:19:40.654 --> 00:19:42.318
because you have the highest priority.

NOTE Confidence: 0.779961739

ab7fa18e-57b0-4b38-8fdd-5a7f3bbf2909
00:19:42.320 --> 00:19:44.456
Even if you go back to the queue

NOTE Confidence: 0.779961739

dd1ed252-e698-4b03-b3f6-1daac50906d0
00:19:44.456 --> 00:19:46.190
because you have the highest

NOTE Confidence: 0.779961739

eb7de935-1af2-4527-8929-5964e63d0511
00:19:46.190 --> 00:19:48.085
priority will be retrieved first.

NOTE Confidence: 0.779961739

af558067-e11b-442c-bc69-1505edbc2c57
00:19:48.090 --> 00:19:51.458
As a result, you always have the processor,

NOTE Confidence: 0.779961739

db391255-2f20-417a-b9ab-efd0404c8fff
00:19:51.460 --> 00:19:53.260
so the only process inside,

NOTE Confidence: 0.779961739

656045ea-e72a-458d-9fb5-7aa9ed41e766
00:19:53.260 --> 00:19:55.188
I mean in a running is still going

NOTE Confidence: 0.779961739

eb787956-0d3d-420e-9382-34b85da78d7a
00:19:55.188 --> 00:19:57.580
to be your process and you're wasting

NOTE Confidence: 0.779961739

78a22857-82c1-4465-85e3-00e20d25fcc6
00:19:57.580 --> 00:20:01.045
the process processor and you are not

NOTE Confidence: 0.779961739

9bd31987-7bb0-4030-8ebc-7610be1784cb
00:20:01.045 --> 00:20:04.160
letting other processes to have it.

NOTE Confidence: 0.779961739

f7094c08-9014-4d14-86a6-68f6e33d9fc3
00:20:04.160 --> 00:20:07.320
So what happens to the P1 and P2?

NOTE Confidence: 0.779961739

c16b9a6d-75ec-4e5c-93c4-5ab40d97da1f
00:20:07.320 --> 00:20:10.435
If your process has the highest priority

NOTE Confidence: 0.779961739

b3d7f5a9-ee8c-4af5-869c-b52304047fab
00:20:10.435 --> 00:20:13.800
and consumes the processor but do nothing.

NOTE Confidence: 0.779961739

fbf56be9-afb4-4e5e-9149-ae88665fb63b
00:20:13.800 --> 00:20:16.356
What happens to the other processes?

NOTE Confidence: 0.779961739

7cce4d10-910a-42ea-b0ad-8bcf7df92048
00:20:16.360 --> 00:20:19.360
We call it the other processes.

NOTE Confidence: 0.779961739

bc409c05-2fd0-4bee-94b7-3d6871db5f0d
00:20:19.360 --> 00:20:21.742
Ghana is starved.

NOTE Confidence: 0.779961739

78492b9c-e01e-4437-97b4-e1fa21f08dda
00:20:21.742 --> 00:20:23.330
And finally,

NOTE Confidence: 0.779961739

be06768a-e7c0-4a82-b7b9-2aaa82e60d7d
00:20:23.330 --> 00:20:25.850
we could say that they're gonna die,

NOTE Confidence: 0.779961739

ae488d36-0a5a-4b4e-8640-bf20b487ad4f
00:20:25.850 --> 00:20:28.466
but in the computer we don't say we

NOTE Confidence: 0.779961739

1351728f-f8f8-45e8-af26-13b579e52fb7
00:20:28.466 --> 00:20:30.605
they're gonna die because they still

NOTE Confidence: 0.779961739

5e6b745e-96e8-4554-81c9-b8071dfc0833
00:20:30.605 --> 00:20:33.646
alive inside the queue for the ready state.

NOTE Confidence: 0.779961739

08a58993-c587-4eb3-a535-a4ae78715616
00:20:33.646 --> 00:20:36.742
We can say that starving meaning

NOTE Confidence: 0.779961739

3c48eb7a-dfb2-451d-a50c-1fe94c9389db
00:20:36.742 --> 00:20:39.982
that they they don't have any

NOTE Confidence: 0.779961739

c4cedd4f-9a45-4fbf-a44d-64dfdeb5b8a3
00:20:39.982 --> 00:20:43.168
opportunity to run even one opcode.

NOTE Confidence: 0.779961739

37601934-4e05-4ce9-a449-84a84a897d31
00:20:43.170 --> 00:20:45.090
This is an interesting problem

NOTE Confidence: 0.779961739

ba6de464-3190-4d59-b9be-bbea47ec4098
00:20:45.090 --> 00:20:47.416
in operating system and you read

NOTE Confidence: 0.779961739

152ce2b5-42df-444f-802a-cc7b43e04d37
00:20:47.416 --> 00:20:49.456
more about this in that course.

NOTE Confidence: 0.779961739

a4312ade-8be4-428f-9380-c16aeaf76f7d
00:20:49.460 --> 00:20:49.770
Yeah.

NOTE Confidence: 0.699542382

4a2824ca-92d8-4f03-9905-486e6d707b2c
00:20:51.890 --> 00:20:54.088
If you try this in your local

NOTE Confidence: 0.699542382

d4257d65-3dce-414f-a696-1972d61440e4
00:20:54.088 --> 00:20:55.609
your your computer, you have to

NOTE Confidence: 0.699542382

a581b903-65fc-42c2-8043-7a847cd85345
00:20:55.609 --> 00:20:56.767
turn off your computer or you

NOTE Confidence: 0.699542382

99a973ac-3910-4034-98d0-3b5e2390ae66
00:20:56.767 --> 00:20:58.060
have to restart your computer.

NOTE Confidence: 0.764095495714286

4971551a-0459-4b97-9fe4-f2390dd76439
00:21:00.230 --> 00:21:03.238
One thing is that even if you increase

NOTE Confidence: 0.764095495714286

5d975cab-6824-45d0-81cb-62a930776667
00:21:03.238 --> 00:21:06.070
your the priority of your process,

NOTE Confidence: 0.764095495714286

4ad67b63-9408-4fbd-97f3-e263e6032076
00:21:06.070 --> 00:21:09.906
it gets higher priority than the kernel.

NOTE Confidence: 0.764095495714286

92b97600-5dbb-4add-ba37-4cb510d40c63
00:21:09.910 --> 00:21:12.454
Uh, it depends on the implementation

NOTE Confidence: 0.764095495714286

28e92d12-d71d-4a55-96ee-40efebd2896d
00:21:12.454 --> 00:21:14.150
of the operating system,

NOTE Confidence: 0.764095495714286

79eed16b-7779-4369-9bfe-1afb21bffef4
00:21:14.150 --> 00:21:18.806
so you usually the operating system

NOTE Confidence: 0.764095495714286

ac8b632d-7aef-4e4e-a246-62d7ffe71b15
00:21:18.810 --> 00:21:22.030
inside the queue for the ready process.

NOTE Confidence: 0.764095495714286

b974255d-de28-42db-a092-9a7d7050104f
00:21:22.030 --> 00:21:25.210
It never allows.

NOTE Confidence: 0.764095495714286

cefb0b2b-296e-4312-8a83-4009848638c3
00:21:25.210 --> 00:21:28.210
Other processes to have higher

NOTE Confidence: 0.764095495714286

fe8160f4-d550-4812-82b1-aaa18c7a78e0
00:21:28.210 --> 00:21:30.610
priority than the kernel.

NOTE Confidence: 0.764095495714286

15309e05-ac89-49d8-be03-3675919e1047
00:21:30.610 --> 00:21:34.215
So usually the kernel processes of the

NOTE Confidence: 0.764095495714286

3af9d13c-1e2c-4aae-a26a-5f5ced9f2bab
00:21:34.215 --> 00:21:37.874
process kernel PID one has the highest

NOTE Confidence: 0.764095495714286

859a5522-8084-4948-a5af-0c80567e5e81
00:21:37.874 --> 00:21:41.640
priority and all the other processes.

NOTE Confidence: 0.764095495714286

5c48d9d8-fd53-44b5-be18-a0c6c7f7745f
00:21:41.640 --> 00:21:44.709
Lower process priority.

NOTE Confidence: 0.764095495714286

5c668319-8c8e-4559-a46f-b99995f7fe4f
00:21:44.710 --> 00:21:46.740
So, uh, this is based on the

NOTE Confidence: 0.764095495714286

90c2fe16-bb9a-4481-939f-5453dcc0382c
00:21:46.740 --> 00:21:48.660
implementation of the operating system.

NOTE Confidence: 0.70336316

affcf784-d8df-4d52-a94f-5771e7a7a2b4
00:21:54.450 --> 00:21:56.505
No worries, so we have

NOTE Confidence: 0.70336316

8f888fa5-21fd-44c0-ab47-992a7bc85ca2
00:21:56.505 --> 00:21:58.149
a question from Victor.

NOTE Confidence: 0.70336316

35c93dbb-6954-4cdd-8ee7-3f36fa1ca801
00:21:58.150 --> 00:22:00.616
How does the system avoid blocking

NOTE Confidence: 0.70336316

b7b6e7c8-8480-473f-8e76-5f4290b170b3
00:22:00.616 --> 00:22:03.630
an opcode that is part of the

NOTE Confidence: 0.70336316

70d00991-e28c-492f-a646-dc1d1d77621b
00:22:03.630 --> 00:22:05.346
way through the execution?

NOTE Confidence: 0.70336316

52a1d4c3-e2df-46cf-9d82-82debf9ce9e9
00:22:05.350 --> 00:22:06.885
We only just finished the

NOTE Confidence: 0.70336316

de9dab5d-869b-492f-9a2d-5b15d87f01f6
00:22:06.885 --> 00:22:08.820
correct line and then put that

NOTE Confidence: 0.70336316

244f8ad6-c185-428e-8859-3cc3c3eba87d
00:22:08.820 --> 00:22:10.480
process back into the queue.

NOTE Confidence: 0.517387464285714

f3f5e821-96ae-4df3-b8bf-8cafb8609468
00:22:12.770 --> 00:22:15.255
Oh, in the in in this state.

NOTE Confidence: 0.517387464285714

daa60fd9-abca-4f92-bea2-7000f26b0234
00:22:15.260 --> 00:22:17.570
For instance, one of the

NOTE Confidence: 0.517387464285714

6948fa58-1cfb-4b23-91fb-7b62fb1862fb
00:22:17.570 --> 00:22:20.360
opcodes is that this can have

NOTE Confidence: 0.517387464285714

c4104f5b-9f38-43e9-af30-743b0d81a34c
00:22:20.360 --> 00:22:24.836
a variable a from the input.

NOTE Confidence: 0.517387464285714

964d5a40-09f9-462b-9757-025cfc13f0d9
00:22:24.840 --> 00:22:27.490
When the processor executes this,

NOTE Confidence: 0.517387464285714

a9b05400-888d-4f8e-9019-5b9684d3ec8d
00:22:27.490 --> 00:22:31.020
uh, again in this process,

NOTE Confidence: 0.517387464285714

e49e49fa-adb6-4bb6-a879-5a6c953bc1a2
00:22:31.020 --> 00:22:34.188
the device manager, the File Manager,

NOTE Confidence: 0.517387464285714

ac8f170f-7252-4f8b-82dc-6f44194be75a
00:22:34.190 --> 00:22:37.322
and the process manager is involved

NOTE Confidence: 0.517387464285714

8e7ee70a-36b1-4aa9-bfc0-1e10bf1486d3
00:22:37.322 --> 00:22:40.270
or involved in this process.

NOTE Confidence: 0.517387464285714

cc7b1be5-b16e-4ea2-8f37-201d34c86da1
00:22:40.270 --> 00:22:42.300
So what happens is that, uh?

NOTE Confidence: 0.83959567

1729cfda-768d-47f6-ae57-007e71401668
00:22:44.480 --> 00:22:47.030
This is a library routine.

NOTE Confidence: 0.83959567

21186581-79c9-4a35-8453-5c8796c459e4
00:22:47.030 --> 00:22:49.430
So it becomes a system call,

NOTE Confidence: 0.83959567

b0f9d082-51e7-431c-ad1a-de86132c1d49
00:22:49.430 --> 00:22:50.870
so we already saw this.

NOTE Confidence: 0.83959567

567dd2a0-4f13-45fc-badd-f3b4531d73a3
00:22:50.870 --> 00:22:54.094
So it becomes a read system call.

NOTE Confidence: 0.83959567

17bae2d6-a3ee-45a3-888b-2ea83cbc682b
00:22:54.094 --> 00:22:56.462
But from the standard

NOTE Confidence: 0.83959567

4faeee08-51ed-4a64-ae00-0469f4c7ff8c
00:22:56.462 --> 00:22:59.500
input which is the zero,

NOTE Confidence: 0.83959567

b9deef87-6ff7-4a0a-94dd-26f8d6071a70
00:22:59.500 --> 00:23:02.580
the file description zero is standard input.

NOTE Confidence: 0.83959567

7afe5d22-b7ae-4b1a-9eef-4ed81ac833e7
00:23:02.580 --> 00:23:05.015
And this system called goes

NOTE Confidence: 0.83959567

469abda9-e5f1-4f44-b760-9118baa2ae0d
00:23:05.015 --> 00:23:07.450
to Colonel and the Colonel.

NOTE Confidence: 0.83959567

9285939a-273a-43b1-8afd-075d0fe4c7ea
00:23:07.450 --> 00:23:11.490
It has the option to issue the

NOTE Confidence: 0.83959567

253d3472-e74c-410f-accc-b8f563e534e9
00:23:11.490 --> 00:23:15.062
hall to the processor or it has

NOTE Confidence: 0.83959567

97dc1d3c-0dca-4de7-bc77-3364aa092aad
00:23:15.062 --> 00:23:18.788
the option to put your process.

NOTE Confidence: 0.83959567

032ce059-e09a-4b5e-8d0b-6fde55353f5b
00:23:18.790 --> 00:23:23.150
Inside the blocking state.

NOTE Confidence: 0.83959567

d4c8ecad-589f-4cec-85a6-5c3acab152e1
00:23:23.150 --> 00:23:25.442
Inside the blocking and

NOTE Confidence: 0.83959567

3e3f0807-65d2-4ce3-bf45-6394f489b24b
00:23:25.442 --> 00:23:27.734
then give the processor.

NOTE Confidence: 0.83959567

1161f2da-8513-44a8-b551-0e787e4dd52b
00:23:27.740 --> 00:23:29.420
Issue a IP.

NOTE Confidence: 0.83959567

12671316-2a55-4c81-82d8-e20760d17412
00:23:29.420 --> 00:23:33.340
Change the address of the IP inside

NOTE Confidence: 0.83959567

4294ae4f-347e-4a5f-ae95-8e4ea46d5319
00:23:33.464 --> 00:23:37.280
the processor to the address of.

NOTE Confidence: 0.83959567

1deacea2-c86a-4957-bff3-89227463a564
00:23:37.280 --> 00:23:38.286
Another process,

NOTE Confidence: 0.83959567

5b5f7551-7e0f-4556-a7c4-98831b70c499
00:23:38.286 --> 00:23:42.310
but for the last command of another process.

NOTE Confidence: 0.83959567

a9b56bd1-74d5-4a2a-bceb-d8f002d55273
00:23:42.310 --> 00:23:45.586
For instance, if we already have

NOTE Confidence: 0.83959567

7aed4b3c-fdae-4f90-8bdc-1b97d582c6a8
00:23:45.590 --> 00:23:47.850
P5 inside the radius state,

NOTE Confidence: 0.83959567

fe4c0884-06fd-473b-a4d0-1fd13c830c6e
00:23:47.850 --> 00:23:50.352
but the P5 was at the

NOTE Confidence: 0.83959567

fa05d177-0bf5-4d04-984a-0c4bdd07a6d5
00:23:50.352 --> 00:23:53.039
state at the OP code 10.

NOTE Confidence: 0.83959567

cca51ab5-bf0a-430e-b862-8815d9f20ecd
00:23:53.040 --> 00:23:56.176
So it puts the address of the.

NOTE Confidence: 0.83959567

ac037dee-f047-4a17-be17-0373e4bfa532
00:23:56.180 --> 00:23:58.656
Inside the process 5,

NOTE Confidence: 0.83959567

deb20715-7afe-4803-8d3d-a469ea1a90ec
00:23:58.656 --> 00:24:02.890
but which add which opcode opcode #10.

NOTE Confidence: 0.83959567

50753763-71b3-4f7a-9c25-845832cbe7eb
00:24:02.890 --> 00:24:06.530
So this way the processor 5 gonna

NOTE Confidence: 0.83959567

deaae0d5-01a0-4608-85d1-d04402720e55
00:24:06.530 --> 00:24:10.339
have the processor and it starts

NOTE Confidence: 0.83959567

9094e794-d6bd-4ccc-984c-389ed108c69e
00:24:10.339 --> 00:24:13.978
funding next command opcode 10 so

NOTE Confidence: 0.83959567

b6275174-25cc-4178-b664-18f757d4b27d
00:24:13.978 --> 00:24:16.377
it goes the running state and does

NOTE Confidence: 0.83959567

41e614cb-ce90-44f8-8c4f-0e743d04e3cd
00:24:16.377 --> 00:24:19.299
the opcode 10 for its process.

NOTE Confidence: 0.83959567

0ce50468-decc-4195-aaf9-e54a56fd0823
00:24:19.300 --> 00:24:23.108
But your process goes in the blocking step.

NOTE Confidence: 0.83959567

085c6686-3b4b-417e-b6be-b69cb279e21b
00:24:23.110 --> 00:24:25.500
The blocking instead is nothing,

NOTE Confidence: 0.83959567

af2f4164-c8a9-4286-8679-e1360fbc83fc
00:24:25.500 --> 00:24:28.680
just a list which just kernel

NOTE Confidence: 0.83959567

67615b13-a7f8-4153-ba00-2fb9f4bf6d73
00:24:28.680 --> 00:24:31.380
doesn't give processor to them.

NOTE Confidence: 0.83959567

2dfe651d-6ae9-4c65-a9b3-5e2bfaa250bb
00:24:31.380 --> 00:24:35.062
So what happens when the this blocking

NOTE Confidence: 0.83959567

dd70e04a-b779-4358-9fc9-0baf8b3b70ed
00:24:35.062 --> 00:24:38.728
process goes to the radio state?

NOTE Confidence: 0.83959567

1627930d-fd1c-43ce-8abf-55869e6fd790
00:24:38.730 --> 00:24:44.490
So behind the scene when you put a keystroke.

NOTE Confidence: 0.83959567

f77bf170-13b8-468a-ac49-e6a5fe0743cd
00:24:44.490 --> 00:24:46.194
It does a IRQ.

NOTE Confidence: 0.83959567

2a60328c-f4b7-4c90-8b57-6b57dac10445
00:24:46.194 --> 00:24:48.750
To the processor and the IQ

NOTE Confidence: 0.83959567

fd655758-63e2-47b1-8795-9d52d0ece1e7
00:24:48.853 --> 00:24:52.094
says that what is the IQ number?

NOTE Confidence: 0.83959567

4984b20c-43b9-438b-9b09-75d76b1ef440
00:24:52.100 --> 00:24:54.686
So the IQ number 2, for instance,

NOTE Confidence: 0.83959567

6ce43c7a-dabe-4ee3-9b85-183a397a40c5
00:24:54.686 --> 00:24:56.060
switches for keyboard,

NOTE Confidence: 0.83959567

a0317008-84a5-4436-aa5c-d8358007e8ee
00:24:56.060 --> 00:24:59.378
so then it calls the kernel.

NOTE Confidence: 0.83959567

51d94804-8a91-4345-8202-3ea81c225c61
00:24:59.380 --> 00:25:01.486
You see that who calls the

NOTE Confidence: 0.83959567

03b9b0d8-0ac9-49e1-b34d-f4655badb349
00:25:01.486 --> 00:25:02.539
kernel the processor,

NOTE Confidence: 0.83959567

10514b88-1a85-41c8-bb22-10129b9e30c1
00:25:02.540 --> 00:25:05.788
but you may ask that the processor was

NOTE Confidence: 0.83959567

52cd654c-184f-4d67-84cc-f21f14a6442e
00:25:05.788 --> 00:25:09.278
given to the process five what happens?

NOTE Confidence: 0.83959567

2688e564-ced0-42c0-8b3c-d8992fab4f33
00:25:09.280 --> 00:25:12.352
The IRQ when it's it's electrical

NOTE Confidence: 0.83959567

c32cfa2b-b1f8-4084-84f6-2130cc0050d0
00:25:12.352 --> 00:25:14.400
shock to the processor.

NOTE Confidence: 0.83959567

288438cb-6ddc-4c02-ae4f-ef0e6501476c
00:25:14.400 --> 00:25:17.976
When the processor received the IRQ.

NOTE Confidence: 0.83959567

ad0b133c-7264-4eaf-b69c-d720c36b5ba9
00:25:17.980 --> 00:25:21.135
It stops execution the execution

NOTE Confidence: 0.83959567

c00f6440-f4c0-4a41-80c7-fd79a77506c5
00:25:21.135 --> 00:25:24.290
of the process 5 opcodes.

NOTE Confidence: 0.83959567

c07ba128-2ae0-40c9-b52c-edcacbbe36bf
00:25:24.290 --> 00:25:26.730
Basically it gives higher priority to the IQ,

NOTE Confidence: 0.83959567

590250aa-de1a-4510-a824-2581e1b4d19c
00:25:26.730 --> 00:25:29.030
handle it the kernel.

NOTE Confidence: 0.83959567

c7912444-d5c3-4f19-889c-e5666886bdab
00:25:29.030 --> 00:25:31.905
So again this processor stops.

NOTE Confidence: 0.83959567

4e0ae7ec-082b-4095-921c-a90818d20272
00:25:31.910 --> 00:25:35.576
It goes to the kernel and then the

NOTE Confidence: 0.83959567

ab0697b3-e7d9-4176-a31c-d0a2fc82bfc9
00:25:35.576 --> 00:25:39.360
kernel knows that it should put the P5.

NOTE Confidence: 0.83959567

96902e99-ff26-4a27-ac3b-cfec75240445
00:25:39.360 --> 00:25:42.940
Back to the readystate.

NOTE Confidence: 0.83959567

c99bd853-b58d-42cd-9e57-8627563d4166
00:25:42.940 --> 00:25:44.384
And then, uh, receive?

NOTE Confidence: 0.83959567

6bc0bf3a-bcd4-401a-8ebc-30cec0c6f1b5
00:25:44.384 --> 00:25:46.550
I'm handed the keys to the

NOTE Confidence: 0.83959567

865fa3dd-5e52-4a66-93c5-7e566ba5ec57
00:25:46.633 --> 00:25:49.470
characters from the input and then

NOTE Confidence: 0.83959567

19b9f5f5-c295-44d5-807f-8eb8575c1f8f
00:25:49.470 --> 00:25:51.945
brings the your process because

NOTE Confidence: 0.83959567

359b889f-81f7-4324-9a7d-42351d58501a
00:25:51.945 --> 00:25:55.216
the input is available into the

NOTE Confidence: 0.83959567

edf63f28-ed09-4b3f-9f90-b784de0afe0c
00:25:55.216 --> 00:25:58.869
radio state and then decides.

NOTE Confidence: 0.83959567

b141b83d-b499-4bc4-b415-d56ed8a6a872
00:25:58.869 --> 00:26:03.927
Who's turn is for the processor.

NOTE Confidence: 0.83959567

281fe7e8-dd92-4868-b7ed-0178f03e34c8
00:26:03.930 --> 00:26:06.705
So this is the whole set.

NOTE Confidence: 0.83959567

93edc84a-6f06-44c9-bce1-6d8ffff3c79e
00:26:06.705 --> 00:26:09.630
I mean flow for the.

NOTE Confidence: 0.83959567

138114a6-2bc3-4afe-9d42-f18f40ee28e4
00:26:09.630 --> 00:26:11.538
Assigning a process when

NOTE Confidence: 0.83959567

0ae03ab8-c510-4553-a681-14cf2141153f
00:26:11.538 --> 00:26:14.400
receiving the IRQ by the kernel.

NOTE Confidence: 0.878817456666667

1e5635e3-e603-42d3-b029-17f1af4f081d
00:26:17.390 --> 00:26:19.307
So in this course you have to simplify that,

NOTE Confidence: 0.878817456666667

b3afb768-ca83-404d-8cee-756c9d601956
00:26:19.310 --> 00:26:22.033
but in operating system you read more

NOTE Confidence: 0.878817456666667

5f697c98-332e-4d4f-b511-0d06b2a27281
00:26:22.033 --> 00:26:24.470
about the whole scenario. Hopefully.

NOTE Confidence: 0.893327929

1ea40cd2-003c-4908-b475-c3c6043bb522
00:26:27.000 --> 00:26:31.780
OK, so one thing I have to explain is that.

NOTE Confidence: 0.893327929

b6c272e4-c167-42eb-a007-85da94aee04e
00:26:31.780 --> 00:26:36.316
So let's do a recap from the very beginning.

NOTE Confidence: 0.893327929

2fbbeae7-3df8-463f-93af-84f99035564a
00:26:36.320 --> 00:26:39.904
Assuming that you just turn on your computer.

NOTE Confidence: 0.832331616

4f34a27a-ecb4-424a-bc29-02a3d1ba4e10
00:26:42.130 --> 00:26:44.584
We already said that when you

NOTE Confidence: 0.832331616

1898045d-1c80-41f6-b684-a3370ef07a54
00:26:44.584 --> 00:26:47.330
turn on your computer, the BIOS,

NOTE Confidence: 0.832331616

7727b0c1-f36b-4e2c-8226-5fd7dd799670
00:26:47.330 --> 00:26:50.103
which is a hardware program

NOTE Confidence: 0.832331616

f79b6488-7870-4665-b3f1-1ead5c583f87
00:26:50.103 --> 00:26:52.868
which is embedded in hardware

NOTE Confidence: 0.832331616

58e8a454-d54e-4d40-bf1a-5fa40d0278d7
00:26:52.870 --> 00:26:55.800
and written by the manufacturer.

NOTE Confidence: 0.832331616

7f2db229-e659-4bea-92fd-4d5230b5b331
00:26:55.800 --> 00:26:59.230
Helps to find ways the master boot

NOTE Confidence: 0.832331616

5d9a8790-b8f8-4280-a0a6-75e6f6e6f7a5
00:26:59.230 --> 00:27:02.121
record the mass it would record is the

NOTE Confidence: 0.832331616

f7dee829-1fcd-4764-a494-d0810ed732c0
00:27:02.121 --> 00:27:04.909
first record of a device storage device

NOTE Confidence: 0.832331616

e0843fa0-b9b8-4f26-a08c-59b55ace6397
00:27:04.910 --> 00:27:07.332
which has the address of the location

NOTE Confidence: 0.832331616

fd890baf-fc0c-45c2-8016-a00a23fa81ed
00:27:07.332 --> 00:27:09.798
of the kernel inside data storage.

NOTE Confidence: 0.832331616

80ccdbc5-bb95-4ad7-b638-5d35f7385c2d
00:27:09.800 --> 00:27:11.865
All the fires and the

NOTE Confidence: 0.832331616

3a0b832c-eb85-4b00-bbc1-b8ef0e92b6a5
00:27:11.865 --> 00:27:13.517
directors of the kernel.

NOTE Confidence: 0.832331616

6e1787ce-de9a-4b4a-b7f0-a0b4784efb4e
00:27:13.520 --> 00:27:15.488
So the master boot record knows

NOTE Confidence: 0.832331616

24f2f428-e4c2-44d9-ba4f-1aadcdac14d7
00:27:15.488 --> 00:27:17.330
the address of the kernel.

NOTE Confidence: 0.832331616

547a136f-7ec3-4a71-babe-e5d08ea853b0
00:27:17.330 --> 00:27:20.858
As a result, it loads the kernel.

NOTE Confidence: 0.832331616

6fcdb4aa-b48a-4ca8-a74d-c3dbbdc3acb7
00:27:20.860 --> 00:27:22.279
And the Colonel.

NOTE Confidence: 0.832331616

d4d7f121-a09f-464f-9205-355efb2471df
00:27:22.279 --> 00:27:24.644
With the straps inside the

NOTE Confidence: 0.832331616

46722316-7f74-4959-ac4f-794b79b2c07b
00:27:24.644 --> 00:27:26.580
memory as a process,

NOTE Confidence: 0.832331616

b2ea06c5-bff1-481a-96e9-d6085de15256
00:27:26.580 --> 00:27:28.125
we said that anything executable

NOTE Confidence: 0.832331616

404165ae-c0da-457e-a25f-57eb88de95bd
00:27:28.125 --> 00:27:30.180
inside the memory is a process,

NOTE Confidence: 0.832331616

d9418a0d-c1ca-4cae-961e-6f50d4c5466c
00:27:30.180 --> 00:27:32.570
so they cannot become process

NOTE Confidence: 0.832331616

86bd30d2-4f09-48ec-8b2d-dc709ebc6c07
00:27:32.570 --> 00:27:35.750
itself and it is assigned.

NOTE Confidence: 0.832331616

22ea7090-c116-466b-b486-d42c2d839f69
00:27:35.750 --> 00:27:38.326
It assigns the PID one to itself.

NOTE Confidence: 0.831420033333333

bc9c9212-5541-48f9-9ce6-60eeb70d572e
00:27:40.410 --> 00:27:45.972
So inside the this process is running under a

NOTE Confidence: 0.831420033333333

72cdff06-8199-48ab-87e8-21f2420da8da
00:27:45.972 --> 00:27:51.978
function name called init or initialization.

NOTE Confidence: 0.831420033333333

c4d21141-8545-4571-84cd-46de9a0edb30
00:27:51.980 --> 00:27:54.374
So there's a history behind this function.

NOTE Confidence: 0.831420033333333

3705c768-ac9d-4907-be3d-4f134d58492a
00:27:54.380 --> 00:27:58.460
You can search on the YouTube about Leonard

NOTE Confidence: 0.831420033333333

6b4a8bca-f07b-4f16-89e5-b2bfd0745d1f
00:27:58.460 --> 00:28:02.340
Sturwold about who I mean, the Linux founder.

NOTE Confidence: 0.831420033333333

3345b109-409f-46e1-9cc6-e9563c77d99b
00:28:02.340 --> 00:28:06.268
Uh, talking about the.

NOTE Confidence: 0.831420033333333

f3615788-3303-44ce-96f0-96fd70f8e965
00:28:06.270 --> 00:28:09.702
Uh, I mean how the init function actually

NOTE Confidence: 0.831420033333333

7f4af7c8-5d4e-41ee-9df2-ad332fe5fabd
00:28:09.702 --> 00:28:13.217
happened in the Linux version of the I

NOTE Confidence: 0.831420033333333

5af069d3-331f-43a7-b585-9961febe270d
00:28:13.217 --> 00:28:15.980
mean implementation of the Unix. Anyways,

NOTE Confidence: 0.831420033333333

8ad9f43e-756d-4f00-ab2c-adf886a5c3d2
00:28:15.980 --> 00:28:20.460
the whole kernel starts as a process ID,

NOTE Confidence: 0.831420033333333

ef0c7385-748b-4b6a-a312-41b3a433dca6
00:28:20.460 --> 00:28:24.627
one with the name of function called in it.

NOTE Confidence: 0.831420033333333

6d1881ae-d558-4a5b-95c0-3ae78d2e9b74
00:28:24.630 --> 00:28:26.134
And what happens next?

NOTE Confidence: 0.831420033333333

363c4791-7b29-46c7-a1aa-fddaddc51801
00:28:26.134 --> 00:28:28.990
We said that right after the kernel,

NOTE Confidence: 0.831420033333333

7538a199-185a-4c79-8bd7-0b74591957d3
00:28:28.990 --> 00:28:31.447
we need the shell to be Buddhist

NOTE Confidence: 0.831420033333333

bc810b24-a5d7-4fc9-81b7-8c45f9c82439
00:28:31.447 --> 00:28:33.663
trapped inside the memory because the

NOTE Confidence: 0.831420033333333

987c2fca-42aa-463b-8c94-ea4db1607147
00:28:33.663 --> 00:28:36.211
shell helps us to run our program.

NOTE Confidence: 0.831420033333333

1b21afac-0ffa-4423-a815-4c49f2be009c
00:28:36.220 --> 00:28:41.394
So in it. After doing some I mean stuff.

NOTE Confidence: 0.831420033333333

2e94775b-e58d-445a-a87c-c87162739434
00:28:41.394 --> 00:28:42.934
I mean making ready for,

NOTE Confidence: 0.831420033333333

0ce759ec-49c0-4072-978d-294f4891c8b1
00:28:42.940 --> 00:28:45.789
I mean managing all the hardware of

NOTE Confidence: 0.831420033333333

1e32c597-1ad2-4518-9b79-58b5c89363c4
00:28:45.789 --> 00:28:49.282
the computer system. It does a fork.

NOTE Confidence: 0.831420033333333

0a0cf57a-d352-4763-b207-98acb82c7e76
00:28:49.282 --> 00:28:53.356
Meaning that trading a new child. Why?

NOTE Confidence: 0.831420033333333

282d8041-7ba7-4c88-afa6-c73fa5a3f1e7
00:28:53.356 --> 00:28:58.684
Because the new child gonna be the task,

NOTE Confidence: 0.831420033333333

e9db8a58-92cf-4c4c-ba9c-d1d2264e588b
00:28:58.690 --> 00:29:04.306
the the container or the executable

NOTE Confidence: 0.831420033333333

a0f0eddf-1a61-4b87-93f7-52fa8b924322
00:29:04.306 --> 00:29:08.050
process for the shell.

NOTE Confidence: 0.831420033333333

cbaa7ba2-2fb9-4083-b4a7-b60b971160f4
00:29:08.050 --> 00:29:11.695
So you do have four very similar to what

NOTE Confidence: 0.831420033333333

4a168aeb-b4d7-40e6-a469-e142e0db69bf
00:29:11.695 --> 00:29:14.788
you what you've done in the lab 08.

NOTE Confidence: 0.831420033333333

8ac06853-36ff-4aa2-973c-34e5d38869a2
00:29:14.790 --> 00:29:17.894
You do a fork and give the execution

NOTE Confidence: 0.831420033333333

aabac7a1-6c20-4a30-aadd-0454db95e42b
00:29:17.894 --> 00:29:21.386
of the shell as a task to the child.

NOTE Confidence: 0.831420033333333

3a73ade8-0aac-4029-aa90-057c9d35b4b4
00:29:21.390 --> 00:29:24.876
And the child exact one of them.

NOTE Confidence: 0.831420033333333

66932897-e228-41a9-b93d-2d4db11542ea
00:29:24.880 --> 00:29:25.606
I mean,

NOTE Confidence: 0.831420033333333

5f113c3e-2ebc-4ea4-a9cf-b821bef2f464
00:29:25.606 --> 00:29:28.510
we already said that in the lab we

NOTE Confidence: 0.831420033333333

9b5fb007-a3ef-4b23-9d98-8609fffd162f
00:29:28.600 --> 00:29:31.207
have about seven different execution

NOTE Confidence: 0.831420033333333

385f221a-1575-4e14-a4bb-a54c1689b5df
00:29:31.207 --> 00:29:33.349
system called one of them that

NOTE Confidence: 0.831420033333333

b10a13b0-f141-4fc9-af74-d916dd0773ea
00:29:33.349 --> 00:29:35.218
you are using in the lab.

NOTE Confidence: 0.831420033333333

fb87aaf6-f19b-41d7-b5e1-8d6617bc474d
00:29:35.220 --> 00:29:37.000
08 is the exact.

NOTE Confidence: 0.7196815725

e1f7d963-9de9-4fa7-a767-3b603a577fff
00:29:39.950 --> 00:29:43.230
If the environment variable.

NOTE Confidence: 0.7196815725

603eeff9-2fb8-4133-b106-e4e186492ca5
00:29:43.230 --> 00:29:45.526
Uh, if you want to see that what

NOTE Confidence: 0.7196815725

c092c108-7d79-4eb8-9eae-f6f52b44fadb
00:29:45.526 --> 00:29:47.907
version of what version of the exact

NOTE Confidence: 0.7196815725

0d97b384-eee0-489e-ab66-e24918b45aea
00:29:47.907 --> 00:29:50.718
was executed this you have to see the

NOTE Confidence: 0.7196815725

d336560f-4402-450c-934c-85a1ba3e0efe
00:29:50.718 --> 00:29:53.056
exact source code of the Unix operating

NOTE Confidence: 0.7196815725

5fbc295a-b806-4836-8636-0088f03ffbfe
00:29:53.060 --> 00:29:57.036
system or the Linux in the web.

NOTE Confidence: 0.7196815725

0553f8a2-e571-4b9b-b311-6aa8ff448f1c
00:29:57.040 --> 00:29:59.256
But the main important thing here is this.

NOTE Confidence: 0.7196815725

18210721-64d3-4220-9e92-8fbd3930642b
00:29:59.260 --> 00:30:02.550
By any of these execution system calls.

NOTE Confidence: 0.7196815725

f195b77a-efde-4631-8b74-6dd2dce3fe58
00:30:02.550 --> 00:30:05.450
The path of the shell.

NOTE Confidence: 0.7196815725

e80d99fe-bd44-4fb8-b137-c66e93735b2f
00:30:05.450 --> 00:30:07.810
Gonna be passed through this

NOTE Confidence: 0.7196815725

0ce2fc68-da7b-4b66-9e62-8c894ccc388a
00:30:07.810 --> 00:30:10.860
and as a result the whole.

NOTE Confidence: 0.7196815725

29829ccc-e4c0-4e5e-b2d4-b93956a6a28c
00:30:10.860 --> 00:30:14.934
Memory space of the child process

NOTE Confidence: 0.7196815725

0ccabae5-e902-4b59-87da-5b6fa00c9c40
00:30:14.934 --> 00:30:19.440
becomes occupied by the Shell program.

NOTE Confidence: 0.7196815725

27ee5bfc-3299-4e53-baa3-3ce4ef3b9171
00:30:19.440 --> 00:30:23.193
So the shell would be the bash shell program

NOTE Confidence: 0.7196815725

c431b139-05e7-451b-bcd8-a42d2af91e61
00:30:23.193 --> 00:30:27.026
or would be SH program shell or Z shell.

NOTE Confidence: 0.7196815725

93398e6b-77a5-47b5-9976-25920bfafb55
00:30:27.026 --> 00:30:30.698
Any type of the shell that the we know,

NOTE Confidence: 0.7196815725

4ebe54c5-d449-47ae-a1ae-1373757e7220
00:30:30.700 --> 00:30:33.112
so buy it depends on the

NOTE Confidence: 0.7196815725

6e49763e-5cdf-46ef-be26-444a94e61cdb
00:30:33.112 --> 00:30:35.440
default shell of the system.

NOTE Confidence: 0.7196815725

951b202a-ce98-4143-8c5e-a602eaadc090
00:30:35.440 --> 00:30:37.318
If your default in the system,

NOTE Confidence: 0.7196815725

9bf85354-b54d-4b80-9872-702e0f9a01a0
00:30:37.320 --> 00:30:38.960
for instance like a computer

NOTE Confidence: 0.7196815725

68cf8e0d-7b24-427e-8350-d06df4f7d0e8
00:30:38.960 --> 00:30:40.272
system in the school,

NOTE Confidence: 0.7196815725

676f0874-c883-4e8b-9d8a-c02a4c1394ba
00:30:40.280 --> 00:30:42.980
it is bash for your user.

NOTE Confidence: 0.7196815725

c02a4349-0d59-44e9-80a0-2adb53bad962
00:30:42.980 --> 00:30:45.170
As a result, the fork,

NOTE Confidence: 0.7196815725

e565f283-f41f-41f0-882f-565dc25495d8
00:30:45.170 --> 00:30:48.656
the child process execute the bash program.

NOTE Confidence: 0.7196815725

c8bdb86b-81d8-43e6-b3ee-702357aca43d
00:30:48.660 --> 00:30:50.540
As a shell for you.

NOTE Confidence: 0.7196815725

b225edc7-6bf3-4c9e-b36d-26a02e6d854c
00:30:50.540 --> 00:30:54.244
In Mac OS the default is Z shell.

NOTE Confidence: 0.7196815725

d232eeef-9d42-4cd6-83b1-2fc3f3884b3c
00:30:54.250 --> 00:30:58.370
As a result, when you opened a terminal.

NOTE Confidence: 0.7196815725

fb0876bb-2535-4299-9342-32321ee1cfcf
00:30:58.370 --> 00:31:02.303
It works in new child and they execute dizzy.

NOTE Confidence: 0.7196815725

72471596-0428-48c2-9510-faff954eec9d
00:31:02.310 --> 00:31:04.026
I mean shell program for you.

NOTE Confidence: 0.779992951764706

f72735e6-b67c-4ca8-ba2e-c51cf8c7090c
00:31:06.140 --> 00:31:08.330
When the this system called happens

NOTE Confidence: 0.779992951764706

8067281f-6801-4296-915c-98afd2ac1432
00:31:08.330 --> 00:31:10.692
or basically we are running the

NOTE Confidence: 0.779992951764706

94fcec18-21eb-4226-a0de-71cdb490f89d
00:31:10.692 --> 00:31:12.777
shell program inside the memory.

NOTE Confidence: 0.779992951764706

6e74057a-9ea4-42fe-a3a8-6a01ebc974bb
00:31:12.780 --> 00:31:14.436
Basically we make the

NOTE Confidence: 0.779992951764706

bd8355a7-404d-44e1-a90c-d7cc18daa679
00:31:14.436 --> 00:31:16.506
shell program as a process.

NOTE Confidence: 0.779992951764706

4b3bf8c5-1ded-44fc-83e9-672f702f2578
00:31:16.510 --> 00:31:19.100
Have you already said that

NOTE Confidence: 0.779992951764706

18749eed-5fcf-4d12-80fe-956f687e3b8b
00:31:19.100 --> 00:31:21.172
by execution system called?

NOTE Confidence: 0.779992951764706

658605af-8377-4546-a346-6ed91a1853fd
00:31:21.180 --> 00:31:23.000
There is no new process.

NOTE Confidence: 0.779992951764706

2de7170a-2c18-488a-b19d-ebab033bde9f
00:31:23.000 --> 00:31:25.814
The process is still that child process,

NOTE Confidence: 0.779992951764706

fb73d228-be5f-477c-876b-8c291cc55c58
00:31:25.820 --> 00:31:29.712
but the content of the child process

NOTE Confidence: 0.779992951764706

60763e6e-cb4d-4cdc-a16b-28ff6fe56771
00:31:29.712 --> 00:31:35.538
becomes replaced by the new program file.

NOTE Confidence: 0.779992951764706

685918a2-d078-40da-b4a3-55ad8bfec041
00:31:35.540 --> 00:31:37.736
So then we see the command

NOTE Confidence: 0.779992951764706

ed25cea6-1044-4897-bf35-8d4b5ada691b
00:31:37.736 --> 00:31:39.200
prompt at the shell.

NOTE Confidence: 0.779992951764706

7cf733d2-4dc8-434a-b808-0f2b1c04d908
00:31:39.200 --> 00:31:42.112
And the shell is waiting for us to

NOTE Confidence: 0.779992951764706

e481fd2d-5355-48d6-9db7-0a7a081613a0
00:31:42.112 --> 00:31:45.330
input some the name of a program file.

NOTE Confidence: 0.779992951764706

dc52720e-4b0b-4f47-ba00-fb71bdc1696f
00:31:45.330 --> 00:31:48.200
So, assuming that we have the shell

NOTE Confidence: 0.779992951764706

36e07716-e785-49ca-952d-76c384c7941f
00:31:48.200 --> 00:31:51.403
and you put the, your program may.

NOTE Confidence: 0.779992951764706

fd5eca9e-ec42-42a4-8389-ec963700b596
00:31:51.403 --> 00:31:53.447
A with two argument,

NOTE Confidence: 0.779992951764706

47d8ca60-0704-4d4c-b8b7-8095f050d6f9
00:31:53.450 --> 00:31:55.365
25 that does the addition

NOTE Confidence: 0.779992951764706

caa873a0-2f34-405e-9632-7d7fb166ac2e
00:31:55.365 --> 00:31:57.280
of the two and five.

NOTE Confidence: 0.779992951764706

c5bdf51b-b6e6-47ce-ad2f-cb810ab49fc9
00:31:57.280 --> 00:31:58.108
At this,

NOTE Confidence: 0.779992951764706

36d5ea4e-c624-4883-8073-41bae8e17b1f
00:31:58.108 --> 00:32:00.178
when you press the enter

NOTE Confidence: 0.779992951764706

04abb65f-070a-4383-865b-d34eead13aac
00:32:00.180 --> 00:32:01.768
in the shell program.

NOTE Confidence: 0.673201125

6cf1e4fc-1c25-4a7e-ab19-0864ee091fb2
00:32:04.700 --> 00:32:06.332
The shell does another

NOTE Confidence: 0.673201125

63dc40b8-507f-4551-b0be-501d35c51ddb
00:32:06.332 --> 00:32:08.780
fork to create a new child,

NOTE Confidence: 0.673201125

decfed8f-59cc-49da-88f6-d01030708f84
00:32:08.780 --> 00:32:11.590
and this child becomes the

NOTE Confidence: 0.673201125

31960c60-65da-4c42-9899-560b07f0b62a
00:32:11.590 --> 00:32:13.838
grandchild of the kernel.

NOTE Confidence: 0.673201125

234426a1-769b-4e27-a9f9-56be2d7dbe77
00:32:13.840 --> 00:32:16.228
As you can see this hierarchy.

NOTE Confidence: 0.673201125

f166295e-e9d9-448d-9cf9-fd2c8eaa06a0
00:32:16.230 --> 00:32:18.070
But this is the child of the shell,

NOTE Confidence: 0.673201125

7f7073ca-69cb-47a7-9043-4e1155a92b34
00:32:18.070 --> 00:32:20.905
which is the grandchild of the Colonel.

NOTE Confidence: 0.673201125

5485f397-dd86-4ee2-8608-2bedc89c18fb
00:32:20.910 --> 00:32:23.994
And then inside this new child

NOTE Confidence: 0.673201125

2aef1c56-16f9-4a47-81fb-5665b55ad6ad
00:32:23.994 --> 00:32:25.536
or the grandchild.

NOTE Confidence: 0.673201125

3432de56-db54-4014-a584-894c8cead81a
00:32:25.540 --> 00:32:27.200
We have another execution

NOTE Confidence: 0.673201125

3b8f2c8b-d7f4-4663-b301-f5a6e7216f1b
00:32:27.200 --> 00:32:28.445
and this execution.

NOTE Confidence: 0.69376926875

2ee8efee-8a9e-4a35-90c4-c9205a094d7b
00:32:30.510 --> 00:32:35.558
Calls for the program files of your program.

NOTE Confidence: 0.69376926875

128b01db-62db-4196-a14a-04c743304fb3
00:32:35.560 --> 00:32:39.214
And as a result, the content of the child

NOTE Confidence: 0.69376926875

937f7713-83a1-4301-afec-49d5faf8b7a0
00:32:39.214 --> 00:32:42.115
process or this grandchild becomes empty

NOTE Confidence: 0.69376926875

59a494b2-6b3d-474a-9617-896185541983
00:32:42.115 --> 00:32:45.770
and becomes filled by the program files.

NOTE Confidence: 0.69376926875

e4fb75c2-e2b8-4fd8-bc80-0741810bc783
00:32:45.770 --> 00:32:49.950
Of you. And now we have your program

NOTE Confidence: 0.69376926875

a8939b36-8c97-4402-a039-1b63d6954259
00:32:49.950 --> 00:32:52.557
inside the memory and do whatever

NOTE Confidence: 0.69376926875

c028b575-fa5b-41c4-a3bc-d42ada0b20ec
00:32:52.557 --> 00:32:55.077
your program is going to do.

NOTE Confidence: 0.69376926875

5351131a-3af6-465c-bbdd-17ebe1746016
00:32:55.080 --> 00:32:57.792
And after a your program is

NOTE Confidence: 0.69376926875

4ce624b3-f505-4ed5-922c-80f8006c1d30
00:32:57.792 --> 00:33:01.080
done as a child of the shell.

NOTE Confidence: 0.69376926875

8dfe4e70-a9fb-4d50-917b-ac8d103a931a
00:33:01.080 --> 00:33:04.288
We said that any parent should do a

NOTE Confidence: 0.69376926875

820326de-eda6-4b3d-87bc-32315c84b569
00:33:04.288 --> 00:33:06.944
wait so when they shell does the fork

NOTE Confidence: 0.69376926875

b2a14c2f-b7cc-4ddc-a951-4d5dce3a0db3
00:33:06.944 --> 00:33:09.277
and gives the I mean creating new

NOTE Confidence: 0.69376926875

23166196-6842-466d-bb07-6c06b26dbb78
00:33:09.277 --> 00:33:11.850
child and gives it to your program.

NOTE Confidence: 0.69376926875

fe798f26-8fd1-4420-8c4c-1974b60b3863
00:33:11.850 --> 00:33:15.162
It does the wait waiting for the child

NOTE Confidence: 0.69376926875

fed19215-3b69-4247-b949-4ac9d0765dd9
00:33:15.162 --> 00:33:18.149
process which is executing your program.

NOTE Confidence: 0.69376926875

f3e3e57c-263a-42f3-bb17-0668dffe216e
00:33:18.150 --> 00:33:20.658
And then your program is done.

NOTE Confidence: 0.69376926875

e17fc500-4928-49a9-9b83-80d2dd49a6e3
00:33:20.660 --> 00:33:24.700
The wait, which is a blocking, uh, I mean.

NOTE Confidence: 0.69376926875

89573a72-88ca-4764-acc3-7032a01772cb
00:33:24.700 --> 00:33:26.944
System called wakes up.

NOTE Confidence: 0.69376926875

14d84173-5487-433e-96cf-769234fec4dd
00:33:26.944 --> 00:33:28.066
So basically,

NOTE Confidence: 0.69376926875

5a91c05e-0a5d-4a87-9c7e-ad227c14dfe0
00:33:28.070 --> 00:33:31.752
the shell wakes up and then becomes

NOTE Confidence: 0.69376926875

66af4362-7c39-478b-ac38-6198f66a7aea
00:33:31.752 --> 00:33:34.638
ready for another command from the user.

NOTE Confidence: 0.740494702

8e4dec4a-1162-4502-bec3-ef4e19edb93e
00:33:36.830 --> 00:33:41.560
You can. Uh, say that. In it,

NOTE Confidence: 0.740494702

3fec86ba-26a6-4878-a22b-f40cfd6e3d77
00:33:41.560 --> 00:33:44.380
which is the ancestor or the

NOTE Confidence: 0.740494702

ef05b5e0-a765-4e1d-a206-a1a4c537f7ce
00:33:44.380 --> 00:33:47.179
godfather of all the processes?

NOTE Confidence: 0.740494702

9e4ba3f0-cc01-4931-a062-87ec972249f0
00:33:47.180 --> 00:33:48.828
Also should do await?

NOTE Confidence: 0.746606755

751553dd-bc41-4c20-b6ed-576be90438e9
00:33:50.950 --> 00:33:54.790
Because at some point the shell gonna end.

NOTE Confidence: 0.746606755

ac24ed12-3911-4dcf-852f-b80df2c459e5
00:33:54.790 --> 00:33:58.046
And as a result, we wait for the

NOTE Confidence: 0.746606755

82cea2d9-f6b2-4efd-a64b-53b8d586f7ee
00:33:58.046 --> 00:34:01.738
shell to end and then we receive the.

NOTE Confidence: 0.746606755

127d7745-eee3-490a-b78d-72d9388c841c
00:34:01.740 --> 00:34:04.267
The we go back to the shell,

NOTE Confidence: 0.746606755

64b200c8-4548-4be0-85fe-cf08aa8f3468
00:34:04.270 --> 00:34:06.783
but The thing is that because the

NOTE Confidence: 0.746606755

daa72c00-4fb9-479b-b960-4b08fdee2b50
00:34:06.783 --> 00:34:11.886
shell is a kind of running a busy wait,

NOTE Confidence: 0.746606755

9ba7ef8c-bab0-4800-aae9-6d0458a555fb
00:34:11.890 --> 00:34:14.305
does the busy waiting and always ready

NOTE Confidence: 0.746606755

33daea6b-2b76-4cb6-9e33-f3e9044077a1
00:34:14.305 --> 00:34:17.138
for our new command or a new program.

NOTE Confidence: 0.746606755

87fe97ef-6d6a-4eb1-835c-5fee8e5a76c5
00:34:17.140 --> 00:34:18.844
As a result, there is usually

NOTE Confidence: 0.746606755

e671bd38-89de-4f8b-9594-ee90fb9ed624
00:34:18.844 --> 00:34:20.330
there's no need for this.

NOTE Confidence: 0.746606755

69fb9c6b-2da5-452e-93cf-984749020184
00:34:20.330 --> 00:34:25.292
Wait by the kernel. And there's always a.

NOTE Confidence: 0.746606755

5dfc7114-9009-411d-ac41-172a1396ecc2
00:34:25.292 --> 00:34:28.907
After this law I mean.

NOTE Confidence: 0.746606755

6ef36f8d-a3a1-42e6-b0df-a4b8973d6cc2
00:34:28.910 --> 00:34:33.130
In the lab 09, you saw a example of this,

NOTE Confidence: 0.746606755

0d82238d-4af0-4f52-be58-0d9cebb1799f
00:34:33.130 --> 00:34:34.324
basically the shell.

NOTE Confidence: 0.746606755

810e6228-3483-478f-8101-24a1798a58bc
00:34:34.324 --> 00:34:36.314
It's a very oversimplified version

NOTE Confidence: 0.746606755

04364d6d-ce4e-481f-8147-7c357a92214b
00:34:36.314 --> 00:34:37.560
of the shell.

NOTE Confidence: 0.746606755

d692ecec-45e5-4a96-992d-c82d3d9e8c18
00:34:37.560 --> 00:34:40.730
Actually, there is a while.

NOTE Confidence: 0.746606755

18db7ffa-0d11-4c81-b8be-9287f97518ed
00:34:40.730 --> 00:34:43.570
In this one, if there is a new command in

NOTE Confidence: 0.746606755

fd0bed70-50d5-456f-ac0c-73a61b89f7e8
00:34:43.645 --> 00:34:46.557
new program for inside the command prompt,

NOTE Confidence: 0.746606755

216c8198-485e-4808-9b43-24509dbdf96a
00:34:46.560 --> 00:34:49.503
it does the 4th and then execute the program,

NOTE Confidence: 0.746606755

004b48c7-22af-4e3f-985c-cf74d6fb2c71
00:34:49.510 --> 00:34:51.730
waits for your program to finish,

NOTE Confidence: 0.746606755

12f89742-4aff-48b6-9296-92a0feb093e3
00:34:51.730 --> 00:34:55.010
and then when it's done it come back to the.

NOTE Confidence: 0.746606755

1e82e475-dc2f-410f-a481-54c5413be3bf
00:34:55.010 --> 00:34:57.806
While and waits for another command

NOTE Confidence: 0.746606755

465b34a6-4b4f-441b-a0ea-a826eb18b492
00:34:57.806 --> 00:35:01.035
so it's a continuous loop waiting for

NOTE Confidence: 0.746606755

2eeca603-41f1-40e2-b0ee-2f479507c09e
00:35:01.035 --> 00:35:04.010
a new program file entered by you.

NOTE Confidence: 0.746606755

d3ede89f-8a59-455b-a0a1-cb9e97a4380b
00:35:04.010 --> 00:35:06.194
So this is a very simplified version

NOTE Confidence: 0.746606755

8f96dd59-8e0e-4b14-b7a6-4aa8648fe778
00:35:06.194 --> 00:35:08.171
of what happens from the very

NOTE Confidence: 0.746606755

fbe228a5-5d8d-4644-8af4-b2e93de35313
00:35:08.171 --> 00:35:10.115
beginning up until your program going

NOTE Confidence: 0.746606755

ae432404-e91d-48bd-8d62-683b706ccf9c
00:35:10.115 --> 00:35:12.240
to execute in the computer system.

NOTE Confidence: 0.786102396944445

5ffdc5ce-5bb9-436a-ab97-a0b227ac3d36
00:35:15.040 --> 00:35:17.920
And, uh, we're gonna finish this

NOTE Confidence: 0.786102396944445

0913d394-1104-4d63-ad27-eb2d61bee286
00:35:17.920 --> 00:35:20.926
topic by jump by some topics

NOTE Confidence: 0.786102396944445

6fbe9d10-3370-4569-8f61-1035a45b1b87
00:35:20.926 --> 00:35:23.866
for you to do more research.

NOTE Confidence: 0.786102396944445

c3c3fa3a-4b2d-49f5-bd2d-b75415c30a27
00:35:23.870 --> 00:35:27.315
So one way is that is it possible to ask

NOTE Confidence: 0.786102396944445

a38d63f6-95fb-4591-bbb8-8c68c2126160
00:35:27.315 --> 00:35:30.039
the kernel to have more processor sharing?

NOTE Confidence: 0.786102396944445

51c39a4f-803f-42da-b156-34ebe9d28bbf
00:35:30.040 --> 00:35:32.184
We already discussed this.

NOTE Confidence: 0.786102396944445

4e46cb91-2ae1-4645-baa0-3b40eb622d44
00:35:32.184 --> 00:35:34.790
Uh, in the Unix operating system we

NOTE Confidence: 0.786102396944445

4011fe92-a1df-438d-aca0-b7e22ec5bab9
00:35:34.790 --> 00:35:38.414
have the nice property of the process.

NOTE Confidence: 0.786102396944445

f8264736-e525-4f37-b8c8-673c30f85010
00:35:38.414 --> 00:35:40.845
Uh, in the lecture summary you

NOTE Confidence: 0.786102396944445

1bdc965b-c65f-4eb9-bf47-13928f4429c9
00:35:40.845 --> 00:35:43.066
read more about that and you

NOTE Confidence: 0.786102396944445

608c4182-a82a-4d46-b04a-606c150b860d
00:35:43.066 --> 00:35:45.226
can do research more about that.

NOTE Confidence: 0.786102396944445

478b42ec-f090-4003-b33a-61051568940a
00:35:45.230 --> 00:35:48.415
The second is that is it possible

NOTE Confidence: 0.786102396944445

206517d1-e578-48d0-802e-99866254e00f
00:35:48.415 --> 00:35:52.377
to see the list of ready processes?

NOTE Confidence: 0.786102396944445

b3998eb2-1b80-4c07-a01d-e880f6494528
00:35:52.380 --> 00:35:54.790
I said that there is a queue for all the

NOTE Confidence: 0.786102396944445

96846682-a21a-46b1-b44f-24bf58773825
00:35:54.854 --> 00:35:57.570
reading process is waiting for the processor.

NOTE Confidence: 0.786102396944445

a30416e5-e6ce-4dfc-a563-252e42c6e712
00:35:57.570 --> 00:36:00.510
Is it possible to ask the kernel to give us

NOTE Confidence: 0.786102396944445

e3526cae-72fd-4573-b05b-fdeefaa24379
00:36:00.584 --> 00:36:03.450
the list of the process names or the PID's?

NOTE Confidence: 0.786102396944445

b37fd852-41e4-4c30-86da-6da051dc005b
00:36:03.450 --> 00:36:06.650
Is it possible to have the list of

NOTE Confidence: 0.786102396944445

dfbac054-05ad-45c6-9264-3ef4c0418faa
00:36:06.650 --> 00:36:09.116
pid's for all the blocked processes

NOTE Confidence: 0.786102396944445

b5294389-e73f-4eb5-a73c-446d9ba5a1a8
00:36:09.116 --> 00:36:11.300
inside the computer system?

NOTE Confidence: 0.786102396944445

f242b107-34f6-420f-aaba-f851d665a075
00:36:11.300 --> 00:36:13.920
Is it possible to have a list of old zombies?

NOTE Confidence: 0.786102396944445

56c943cb-eb15-467e-a0aa-d6fadfdcee50
00:36:13.920 --> 00:36:18.092
Zombies are those child processes that are

NOTE Confidence: 0.786102396944445

2fa02517-9487-4496-8169-b1af625186db
00:36:18.092 --> 00:36:20.420
waiting for their parents to do the wait.

NOTE Confidence: 0.786102396944445

7ee90441-3e23-4ed0-a440-25f2017d37d7
00:36:20.420 --> 00:36:22.110
So we already discussed that.

NOTE Confidence: 0.786102396944445

86e14953-46a0-47ba-ac2e-510678e5cffb
00:36:22.110 --> 00:36:24.156
So is it possible to distinguish?

NOTE Confidence: 0.786102396944445

796e9a88-263c-4e7e-9af7-6e62463e48e9
00:36:24.160 --> 00:36:26.386
I mean, to find the zombies.

NOTE Confidence: 0.786102396944445

31fc04d5-e539-4acd-bd1c-38a879ec6884
00:36:26.390 --> 00:36:28.414
This is important because.

NOTE Confidence: 0.786102396944445

3fdf20f5-420d-475b-a19c-25f469cc212c
00:36:28.414 --> 00:36:31.450
A zombies are wasting the memory

NOTE Confidence: 0.786102396944445

6ffc68d7-3123-4468-ae86-07abcf3b5a6b
00:36:31.541 --> 00:36:33.830
space we have to make sure that

NOTE Confidence: 0.786102396944445

202b2234-1f42-41aa-9e8c-2122afe9f108
00:36:33.830 --> 00:36:35.700
the parent does the waiting.

NOTE Confidence: 0.786102396944445

974e5ea3-dbb3-4161-86dd-8f620e1eece2
00:36:35.700 --> 00:36:37.968
Some parents forget to do that.

NOTE Confidence: 0.786102396944445

8fe52b60-6218-496d-aadc-6998bdfdfe37
00:36:37.970 --> 00:36:38.726
Some parents.

NOTE Confidence: 0.786102396944445

12105016-80df-4d94-adf9-dc90bb3e28a5
00:36:38.726 --> 00:36:40.994
I mean they are just forgetful

NOTE Confidence: 0.786102396944445

579fe1eb-50bd-4c35-a0b6-8d329da3f37b
00:36:40.994 --> 00:36:42.920
like in the real world,

NOTE Confidence: 0.786102396944445

5a6870b8-a546-4466-a7a6-07da0a8afb2e
00:36:42.920 --> 00:36:44.929
so they don't care about their child.

NOTE Confidence: 0.786102396944445

c31e24ea-3ba8-4674-bfa0-a36d66403ae0
00:36:44.930 --> 00:36:48.866
As a result the child becomes zombie forever.

NOTE Confidence: 0.786102396944445

4587bcaa-0826-459d-bc48-e007c09ec51b
00:36:48.870 --> 00:36:52.080
Uh, and the kernel doesn't take

NOTE Confidence: 0.786102396944445

62b20f63-de0d-46ba-9465-38e61cee5ae4
00:36:52.080 --> 00:36:53.685
the responsibility too,

NOTE Confidence: 0.786102396944445

cff59b86-99c5-4450-bee3-c5b1277d2ad2
00:36:53.690 --> 00:36:55.580
so it's just wasting the time

NOTE Confidence: 0.786102396944445

f2aadb3c-88cf-41d0-9b17-f0ade780c244
00:36:55.580 --> 00:36:56.840
they would never space,

NOTE Confidence: 0.786102396944445

844e4cb5-bc1d-4dd1-adaf-0ef991cbd28b
00:36:56.840 --> 00:36:58.555
so it's good to know what are

NOTE Confidence: 0.786102396944445

dcd87c18-8279-4d52-8077-2ac59b5c8cde
00:36:58.555 --> 00:37:00.019
the zombies in your system,

NOTE Confidence: 0.786102396944445

caa342a4-dea8-46a8-b5ff-0f8cf04d378f
00:37:00.020 --> 00:37:03.247
and if after a while they state

NOTE Confidence: 0.786102396944445

b4711ecb-f6dc-459a-ae62-81ef9f124313
00:37:03.247 --> 00:37:05.260
you can kill them.

NOTE Confidence: 0.786102396944445

5ee0603f-45bb-42b9-80e4-862c72ceb7b2
00:37:05.260 --> 00:37:06.277
Also, the orphans.

NOTE Confidence: 0.786102396944445

2d4721b9-1761-4862-b02a-8e2294654338
00:37:06.277 --> 00:37:09.120
Is it possible to see the orphan child?

NOTE Confidence: 0.786102396944445

8fc81c74-e193-42fa-9b04-a4ef449bac2f
00:37:09.120 --> 00:37:11.336
We know that the orphan child is not

NOTE Confidence: 0.786102396944445

500e09e4-f2d7-4666-8994-ebb17d51f23f
00:37:11.336 --> 00:37:13.363
that dangerous because the kernel takes

NOTE Confidence: 0.786102396944445

fe02e235-ea6e-4bf8-ab8f-fc10679e4d9f
00:37:13.363 --> 00:37:15.481
the responsibility up until they finish.

NOTE Confidence: 0.786102396944445

2f345593-e608-48fa-9e91-abb27741d071
00:37:15.490 --> 00:37:16.513
Is they finish?

NOTE Confidence: 0.786102396944445

2dd77101-23e1-44a2-93d8-ae8a704c38ec
00:37:16.513 --> 00:37:18.900
But it's still you are able to

NOTE Confidence: 0.786102396944445

8395475b-f2aa-40c5-8816-285e448fa25c
00:37:18.974 --> 00:37:21.269
see whether the orphan child

NOTE Confidence: 0.786102396944445

aa6da100-2edf-4103-b12b-ed8937f4fd35
00:37:21.269 --> 00:37:23.564
process inside a computer system.

NOTE Confidence: 0.875688265625

ef1aa51e-303a-454a-bf0f-81230d3a10a8
00:37:25.580 --> 00:37:28.972
Another question is that is it possible for

NOTE Confidence: 0.875688265625

7c795749-8101-4f78-a738-b2b032ac26f9
00:37:28.972 --> 00:37:32.067
the process to have more than one child?

NOTE Confidence: 0.875688265625

5dc63cdd-8f5c-43d7-b52f-8dcbe6e4b0a7
00:37:32.070 --> 00:37:34.950
That's the answer is yes in the lab 09.

NOTE Confidence: 0.875688265625

ff469a35-cd41-4e8b-b0c5-4bc1a8068e5a
00:37:34.950 --> 00:37:39.045
Actually you see how to create multiple,

NOTE Confidence: 0.875688265625

f538c0a2-1dfb-4bf5-88a6-2e77d7fbd32d
00:37:39.050 --> 00:37:41.546
I mean child or? I mean,

NOTE Confidence: 0.875688265625

ca92ae81-91a5-4df6-a947-7b7ac70db5cc
00:37:41.550 --> 00:37:45.603
having children for your for yourself and

NOTE Confidence: 0.875688265625

bc1e2b14-ec5b-4a5c-8138-fdcbf671553e
00:37:45.603 --> 00:37:49.158
giving different tasks to different child.

NOTE Confidence: 0.875688265625

3d9e2fea-003d-4974-a10d-b51a94ae468b
00:37:49.160 --> 00:37:52.052
And the grandchild you already saw

NOTE Confidence: 0.875688265625

b41a7b11-cedf-4912-950d-7f0880103679
00:37:52.052 --> 00:37:54.850
an instance. All the all our program

NOTE Confidence: 0.875688265625

3c3cfd62-45ed-4fc4-a7aa-c317982f9f41
00:37:54.850 --> 00:37:57.400
is a grandchild of the Colonel.

NOTE Confidence: 0.875688265625

f22168f1-459a-4324-9b38-0329cecb56ac
00:37:57.400 --> 00:37:59.720
Because they are the child of the shell

NOTE Confidence: 0.875688265625

6d8e8f48-3938-42d7-a489-798be7d9a66e
00:37:59.720 --> 00:38:02.406
and the shell is the child of the kernel.

NOTE Confidence: 0.875688265625

62310ed5-9634-4c3a-90df-646d61b50672
00:38:02.410 --> 00:38:06.169
Also, your program can do another four.

NOTE Confidence: 0.875688265625

e6d0bca1-befe-4a5a-9d16-9ac1d1b8a8b8
00:38:06.170 --> 00:38:08.882
As a result, you have a grand grandchild

NOTE Confidence: 0.875688265625

145cd3a8-1567-4916-bc4f-e0ff5f07d220
00:38:08.882 --> 00:38:12.546
of the kernel, so it is possible to have.

NOTE Confidence: 0.875688265625

80d1fe71-72aa-45bb-8549-0123039418ec
00:38:12.550 --> 00:38:14.058
For a normal process,

NOTE Confidence: 0.875688265625

79555eeb-9ad6-40a6-9a46-ac669d92d172
00:38:14.058 --> 00:38:16.418
your program to have child,

NOTE Confidence: 0.875688265625

d7caed70-1684-4a89-9a31-f330da0f119b
00:38:16.418 --> 00:38:19.810
grandchild, brand, grandchild, etc.

NOTE Confidence: 0.875688265625

b433c080-4eea-422e-bc21-7f1f71f1ecbf
00:38:19.810 --> 00:38:21.823
So this hierarchy.

NOTE Confidence: 0.875688265625

1a391b0e-86be-4668-a966-9de39fa481a0
00:38:21.823 --> 00:38:23.836
Inside your program,

NOTE Confidence: 0.875688265625

623dfd3b-85c9-4765-baff-95cdc5a93bae
00:38:23.840 --> 00:38:27.050
if you do another 4.

NOTE Confidence: 0.875688265625

80126c52-9ae5-47cf-8db0-d56762fea11c
00:38:27.050 --> 00:38:29.808
And then in your inside your child

NOTE Confidence: 0.875688265625

062a6a08-e22c-462a-8f6e-d3ae39181bd6
00:38:29.808 --> 00:38:30.990
to another floor.

NOTE Confidence: 0.875688265625

d2baffd3-e0e9-44a0-9d6e-e16597e15a93
00:38:30.990 --> 00:38:33.600
So this hierarchy can goes forever.

NOTE Confidence: 0.857826552222222

f6447197-1d84-4a74-8b75-5cfd2c2e23d8
00:38:38.460 --> 00:38:40.560
And now we're gonna go for the

NOTE Confidence: 0.857826552222222

ea9d04d9-bd91-4f34-a245-2609ad9b8742
00:38:40.560 --> 00:38:42.352
next topic. But before that I'm

NOTE Confidence: 0.857826552222222

8c2d02cb-b320-468b-aacd-275d97a9c933
00:38:42.352 --> 00:38:43.842
ready to check your questions.

NOTE Confidence: 0.4676214825

85d0efa1-66c8-4217-b337-98f14d8eb526
00:38:46.210 --> 00:38:48.738
So Victor asks a.

NOTE Confidence: 0.54662751375

93274abe-e475-4853-90fc-82117bb4796c
00:38:52.270 --> 00:38:54.571
The initial four,

NOTE Confidence: 0.54662751375

3af8cb55-d45e-4438-a58b-7ed669072f18
00:38:54.571 --> 00:38:58.406
called the initial four call.

NOTE Confidence: 0.54662751375

e3b02582-ee9c-4b02-b22f-752b32b8244e
00:38:58.410 --> 00:38:59.718
Bootstraps to Colonel,

NOTE Confidence: 0.54662751375

d388e8b9-6689-46a1-b8c1-ec7de40c8c12
00:38:59.718 --> 00:39:02.770
why is a four required to do

NOTE Confidence: 0.54662751375

75412e50-26c1-4d76-98a5-be28feed72c5
00:39:02.861 --> 00:39:04.666
with this topic, Colonel?

NOTE Confidence: 0.54662751375

6b2ac47f-9e73-4f3f-a207-9e9730400b56
00:39:04.666 --> 00:39:07.282
And does that imply that the

NOTE Confidence: 0.54662751375

10fc31be-2de9-4334-b3ea-eb842ffab522
00:39:07.282 --> 00:39:10.170
core of the operating system has

NOTE Confidence: 0.54662751375

803fb038-0408-4d94-aa00-99784dc88c84
00:39:10.170 --> 00:39:13.140
at least one clone in memory?

NOTE Confidence: 0.54662751375

caeafeef-7df3-442d-a35e-b9eba717f067
00:39:13.140 --> 00:39:16.367
Before the kernel there is no fork.

NOTE Confidence: 0.54662751375

284ba2b9-5b85-4abf-b0d6-a4b603898278
00:39:16.370 --> 00:39:19.718
Uh, nobody folks? For the kernel,

NOTE Confidence: 0.54662751375

963cb868-2c47-4e63-93e5-bcda4ceb159a
00:39:19.720 --> 00:39:23.026
the kernel is the main process,

NOTE Confidence: 0.54662751375

fa6f6c24-902c-4524-aaf5-6e444ad24021
00:39:23.030 --> 00:39:24.600
which is the main parent.

NOTE Confidence: 0.54662751375

7ac8ae16-f7e5-4234-a20d-b8a684875754
00:39:24.600 --> 00:39:27.176
There is. Basically this is a God.

NOTE Confidence: 0.54662751375

12ce719f-7cdf-4d5e-95eb-62d12ddd8f9d
00:39:27.180 --> 00:39:28.460
The kernel is a God,

NOTE Confidence: 0.54662751375

b0e7ef73-3cce-40c9-81ef-31a12fbb42a2
00:39:28.460 --> 00:39:31.574
meaning that there is no pattern for the God.

NOTE Confidence: 0.54662751375

db76eb85-3a02-438f-a3b2-415ba1f407e1
00:39:31.580 --> 00:39:34.303
It just there in the street device

NOTE Confidence: 0.54662751375

ba886eb2-34c9-49dc-ac31-e0e7e8943746
00:39:34.303 --> 00:39:36.450
and it bootstraps inside the

NOTE Confidence: 0.54662751375

2016d7fb-a143-4b98-a573-efc4e3e3ec48
00:39:36.450 --> 00:39:38.695
memory and becomes the process.

NOTE Confidence: 0.54662751375

1072c385-72b6-4f4a-8865-a2ee0d72484f
00:39:38.700 --> 00:39:43.425
Nobody does the for for the kernel.

NOTE Confidence: 0.54662751375

c01e531b-b07a-45a1-a136-8fccd62667ad
00:39:43.430 --> 00:39:47.399
But the kernel this port is by the kernel.

NOTE Confidence: 0.54662751375

d89c19bc-5bd3-4277-ad84-6dee626de445
00:39:47.400 --> 00:39:50.830
In order to give the task of

NOTE Confidence: 0.54662751375

22b0024d-c48d-4171-8169-8da2fb766aa9
00:39:50.830 --> 00:39:53.350
Shell to this new child.

NOTE Confidence: 0.54662751375

864c9a85-be5b-4044-9eae-98bb4aab15c6
00:39:53.350 --> 00:39:58.159
So this is the. So let me.

NOTE Confidence: 0.54662751375

ea964088-aff2-456a-9c24-8f63d920cd4b
00:39:58.160 --> 00:39:59.330
Erase all, yeah.

NOTE Confidence: 0.8029195

72a716f8-c03c-436e-83b5-41661cc8c9b1
00:40:03.580 --> 00:40:04.190
Outside

NOTE Confidence: 0.8434122

e0afa27f-0646-47c0-8e8b-5317a49ec786
00:40:09.320 --> 00:40:14.971
is 4. Is done by the Colonel. So.

NOTE Confidence: 0.8434122

c28320d9-491e-4f87-96ec-69b73ee46719
00:40:14.971 --> 00:40:18.157
It is inside the init function,

NOTE Confidence: 0.8434122

3443c957-5381-47d9-8e0b-7f2d16d2f8ea
00:40:18.160 --> 00:40:19.935
so inside the init function

NOTE Confidence: 0.8434122

01e8cf84-92c6-4554-9136-ca41948333e3
00:40:19.935 --> 00:40:22.150
we have some lines of code.

NOTE Confidence: 0.8434122

5346cd04-de3f-4c10-93a6-434d023e2cad
00:40:22.150 --> 00:40:24.182
Suddenly we have therefore.

NOTE Confidence: 0.8434122

d3cca823-d729-46a2-b77a-0d4022cfc75b
00:40:24.182 --> 00:40:27.230
And the return PID for the

NOTE Confidence: 0.8434122

2241ccd8-b17b-4be2-9739-34c9b026726b
00:40:27.333 --> 00:40:29.177
init function inside the

NOTE Confidence: 0.8434122

ec3f0a53-58a8-443f-a1af-e188bac6c046
00:40:29.177 --> 00:40:32.610
candle is the PID of the shell.

NOTE Confidence: 0.8434122

c09b56d6-1c90-4c77-ad9d-0f5388c034f3
00:40:32.610 --> 00:40:33.558
Makes sense, victor.

NOTE Confidence: 0.680600556153846

383e28f3-b018-4575-9088-3cef72eedff4
00:40:37.060 --> 00:40:39.979
And all the other child does the

NOTE Confidence: 0.680600556153846

195d8e01-aa4f-467b-adf6-746580be202b
00:40:39.979 --> 00:40:42.678
execution to bootstrap the other programs

NOTE Confidence: 0.680600556153846

bd72da9f-62a0-4bf5-acfe-d22cd64d3395
00:40:42.680 --> 00:40:45.146
and clone them inside the memory.

NOTE Confidence: 0.680600556153846

0306fe07-d236-47d6-a11b-546978a9a3f3
00:40:45.150 --> 00:40:49.240
But for the kernel the bias with the

NOTE Confidence: 0.680600556153846

c8e6204a-d339-48c9-be3a-af8739de3c91
00:40:49.240 --> 00:40:50.850
help of massive would record does that.

NOTE Confidence: 0.521090433

98cac93a-4a9c-4936-8bb2-f79bd37a2034
00:41:00.480 --> 00:41:03.595
So miss I'm asked that why the

NOTE Confidence: 0.521090433

47d5f24c-2c9f-4267-9f26-f3e094a6e841
00:41:03.595 --> 00:41:08.114
PID of the shell? And the exact

NOTE Confidence: 0.521090433

f3881bfa-0c0f-43a7-8428-1133504f319a
00:41:08.114 --> 00:41:11.340
function inside a are the same.

NOTE Confidence: 0.751732908

99857c83-3cf0-4c83-887d-e5e535928839
00:41:13.450 --> 00:41:15.460
Oh, you are saying this?

NOTE Confidence: 0.751732908

81ff82d1-657d-4e47-9706-f0a05a2d1b94
00:41:15.460 --> 00:41:21.644
Why the PID? Of this child process,

NOTE Confidence: 0.751732908

60aa2338-d364-4076-b342-5533eb95e2b3
00:41:21.644 --> 00:41:24.740
this is a child process which,

NOTE Confidence: 0.751732908

87edbbc3-52a1-415c-b322-54651a51cefe
00:41:24.740 --> 00:41:27.316
given the task of running the shell,

NOTE Confidence: 0.751732908

da7acf7e-5d86-4d7d-8847-35384276b0d2
00:41:27.320 --> 00:41:31.326
the idea of the child process is exactly

NOTE Confidence: 0.751732908

8c5c6c54-912c-4444-9090-d49a51bb582b
00:41:31.326 --> 00:41:34.550
the same as the idea of the shell.

NOTE Confidence: 0.751732908

026ea841-be30-4356-a69b-d2b2b654d665
00:41:34.550 --> 00:41:38.326
So in the previous slide we said that,

NOTE Confidence: 0.751732908

190f82f4-2ab8-4547-a142-eee8d452b753
00:41:38.330 --> 00:41:41.005
oh, I think I have it

NOTE Confidence: 0.751732908

54ff6c26-4fd2-4f0a-b5b3-14778abd9fa8
00:41:41.005 --> 00:41:42.420
somewhere here we just said.

NOTE Confidence: 0.5692958925

1ec7938f-a1ba-420c-8f9f-74ec05893868
00:41:46.670 --> 00:41:52.370
Ah. I thought I had it somewhere here, but.

NOTE Confidence: 0.5692958925

4eb870c0-c22e-4f2e-a8bf-d23d2f3c2327
00:41:52.370 --> 00:41:55.706
OK, so let me a recall.

NOTE Confidence: 0.5692958925

351ef0e4-35d0-4852-8699-991c4c26c1aa
00:41:55.710 --> 00:41:58.190
Recall that from the previous

NOTE Confidence: 0.5692958925

0b85daae-62ca-41a2-b176-9d73eb3e0c00
00:41:58.190 --> 00:42:00.315
lecture in the previous lecture we

NOTE Confidence: 0.5692958925

424d522d-0249-4240-bfbc-f700a6115a57
00:42:00.315 --> 00:42:04.080
said that if this is the memory.

NOTE Confidence: 0.5692958925

d5cfc929-a6df-4e23-ae3a-9bd2664bc1bd
00:42:04.080 --> 00:42:08.178
So if this is our parents.

NOTE Confidence: 0.5692958925

3fc4d462-065d-4490-8a15-f899746a66bb
00:42:08.180 --> 00:42:11.528
When the patent does the fork.

NOTE Confidence: 0.5692958925

8feea6c8-be5b-4b66-b1c7-96ab6a685beb
00:42:11.530 --> 00:42:14.113
The kernel make a copy of the

NOTE Confidence: 0.5692958925

c9b2f21d-0fc9-4aba-aafd-649344e77117
00:42:14.113 --> 00:42:16.520
parent as the child process.

NOTE Confidence: 0.70672852

13240be5-319c-4e5f-947e-e2eeeacae7ef
00:42:18.560 --> 00:42:23.240
And then the child can do the exact.

NOTE Confidence: 0.70672852

3d83f1da-2af2-4ebd-8b61-2d9a920430f1
00:42:23.240 --> 00:42:24.800
When the child does the exact,

NOTE Confidence: 0.70672852

9611a8c4-10c3-4df4-b5a5-bcae8baa5512
00:42:24.800 --> 00:42:27.364
what happens is that.

NOTE Confidence: 0.70672852

ee408857-c251-43f2-99c6-9e9b34bfe26c
00:42:27.364 --> 00:42:30.862
The kernel empties all the child process,

NOTE Confidence: 0.70672852

e9f6630b-3fdb-4793-8fb7-8182d108d1a7
00:42:30.862 --> 00:42:32.827
but there's still the child

NOTE Confidence: 0.70672852

e5aff156-81ae-4006-b8e8-ff0431d7b9ce
00:42:32.827 --> 00:42:34.308
process ID is the same,

NOTE Confidence: 0.70672852

376d55ad-9cf9-4966-8a9f-0c1ba5b47fae
00:42:34.310 --> 00:42:36.529
doesn't change the idea of the child,

NOTE Confidence: 0.70672852

4352167c-f7a6-4878-a9c4-1b009dd20330
00:42:36.530 --> 00:42:38.903
but all the content of the memory

NOTE Confidence: 0.70672852

75a83712-a906-4484-9494-3a806059c019
00:42:38.903 --> 00:42:41.250
of the child gonna be emptied.

NOTE Confidence: 0.70672852

7884a38f-7f00-43f7-b63a-8ba01c5dcd92
00:42:41.250 --> 00:42:44.757
So there is nothing inside and then.

NOTE Confidence: 0.70672852

23e6756c-4214-4e76-bc51-cfaac9ac0d55
00:42:44.760 --> 00:42:48.204
The program that is passed inside the

NOTE Confidence: 0.70672852

77aa59d6-f989-40c8-a6d3-c32f61302f78
00:42:48.204 --> 00:42:52.690
argument, for instance you said that may.

NOTE Confidence: 0.70672852

63487eee-8fd9-4519-ae3c-197bcce114f4
00:42:52.690 --> 00:42:56.104
Your program file gonna be bootstrap

NOTE Confidence: 0.70672852

944aa2ae-ed81-48ad-a713-e83d9f0911af
00:42:56.104 --> 00:43:00.317
inside the same memory space of the child.

NOTE Confidence: 0.70672852

c002ebcc-a195-455e-a5e6-b0cafaa87f4c
00:43:00.320 --> 00:43:02.424
So it's kind of.

NOTE Confidence: 0.70672852

9135f85d-ae74-462f-a62f-45465fbc6143
00:43:02.424 --> 00:43:07.149
Occupying or kind of, uh, I mean.

NOTE Confidence: 0.70672852

4c698899-c34f-46c8-9317-2be660bb78a3
00:43:07.150 --> 00:43:10.642
Invading the memory space of the

NOTE Confidence: 0.70672852

fa75f9f2-c50d-46c3-bd98-52350081398b
00:43:10.642 --> 00:43:13.606
child so the child PID doesn't change,

NOTE Confidence: 0.70672852

d6f181ad-e2d6-4c76-8228-3c3f946ebc40
00:43:13.610 --> 00:43:14.842
but the content changes.

NOTE Confidence: 0.70672852

89d83d87-0b5d-4be2-829d-a91c3938607c
00:43:14.842 --> 00:43:17.060
That's why the PID is the same.

NOTE Confidence: 0.7722439

b70d9855-fe27-444a-99bb-3b0f38475759
00:43:24.220 --> 00:43:28.510
So Victor asks. But why do we

NOTE Confidence: 0.7722439

bc2e9773-f2d3-4ba0-bd9f-f0f7053b5eb6
00:43:28.510 --> 00:43:30.760
need a fork to bootstrap a shell?

NOTE Confidence: 0.754391374857143

a69055ca-92f8-47aa-8ccd-4d95d742d6d4
00:43:33.440 --> 00:43:37.199
Uh. So if we don't do that.

NOTE Confidence: 0.754391374857143

9d1d341a-4dc3-4415-80c9-ffb40e6b891c
00:43:37.200 --> 00:43:39.622
I mean, if we don't create a

NOTE Confidence: 0.754391374857143

ac275ffc-41f5-4136-b930-0e99d37e9154
00:43:39.622 --> 00:43:42.804
new child for the shell so.

NOTE Confidence: 0.754391374857143

81a0d29b-886f-4a5c-84ac-91aa99b6c6e8
00:43:42.804 --> 00:43:46.994
We have to, uh, I mean, at some point we

NOTE Confidence: 0.754391374857143

f8e951d9-1535-4964-ae03-aadeda4d4bb6
00:43:46.994 --> 00:43:49.580
have to bootstrap the shell inside the,

NOTE Confidence: 0.754391374857143

7d32716d-f2fa-4be3-a146-a6ac1d4308a3
00:43:49.580 --> 00:43:53.504
uh, I mean inside the memory. So.

NOTE Confidence: 0.754391374857143

b3534044-e9e1-434c-aeea-c6a688b7f600
00:43:53.504 --> 00:43:57.136
We have to do it inside the init,

NOTE Confidence: 0.754391374857143

df52d5bc-1bee-40d0-bf0d-056fab9d0805
00:43:57.140 --> 00:44:00.468
so if we do it exacution then the

NOTE Confidence: 0.754391374857143

34043fb9-cbaf-4f60-91c2-a19dfbc2a39a
00:44:00.468 --> 00:44:02.592
content of the kernel gonna be

NOTE Confidence: 0.754391374857143

c0b95ffb-5ed0-405a-aa70-22d70b09cb4b
00:44:02.592 --> 00:44:04.900
emptied and filled with the shell.

NOTE Confidence: 0.754391374857143

968f492e-1648-481f-9b70-0b96587f0b3e
00:44:04.900 --> 00:44:07.820
So there is no kernel anymore in the

NOTE Confidence: 0.754391374857143

d272a90b-2ddf-43f5-937b-ed0cd8852cf2
00:44:07.820 --> 00:44:10.417
inside the memory but we need the

NOTE Confidence: 0.754391374857143

e9a72e78-1062-45ed-a406-8703aafdcd0d
00:44:10.417 --> 00:44:13.219
Colonel so we cannot do that inside.

NOTE Confidence: 0.754391374857143

e43d62f1-07f2-4e03-948b-5d4e2db2858e
00:44:13.220 --> 00:44:15.290
I mean we cannot exactly.

NOTE Confidence: 0.754391374857143

6515b208-21ba-4540-a448-e804dbbe325f
00:44:15.290 --> 00:44:18.182
The shell inside the units because

NOTE Confidence: 0.754391374857143

8b1d7666-c376-4e02-a125-ecb8ce2c2581
00:44:18.182 --> 00:44:20.880
it replaces the kernel contact.

NOTE Confidence: 0.754391374857143

2c197678-102b-43cd-9b5a-12cc5f87896d
00:44:20.880 --> 00:44:23.156
In order to avoid that, we have to do.

NOTE Confidence: 0.754391374857143

73ddb32f-f72d-4d04-8322-333d70ca9770
00:44:23.156 --> 00:44:25.562
I mean we have to fork and create a

NOTE Confidence: 0.754391374857143

bf4f9b18-6cab-461c-b751-add75f469a1b
00:44:25.562 --> 00:44:28.314
new child and then fill out the content

NOTE Confidence: 0.754391374857143

41cc281d-390a-45f1-930d-ac6453476c7c
00:44:28.314 --> 00:44:31.599
of the new trial process by the shell.

NOTE Confidence: 0.754391374857143

b4147d97-83b6-4e36-a8fc-8d0074272fd9
00:44:31.600 --> 00:44:34.589
So basically in the lab 08 you

NOTE Confidence: 0.754391374857143

570f86bf-34c7-4fd5-95b5-a8b32dc84ad5
00:44:34.589 --> 00:44:37.670
face the same problem you did.

NOTE Confidence: 0.754391374857143

21d50a55-b847-44fa-91b7-af72603d3eec
00:44:37.670 --> 00:44:41.648
You have to do 2 system calls for the exact.

NOTE Confidence: 0.919724774285714

987184f0-0e0d-4075-b42f-db1ec4de6d80
00:44:44.340 --> 00:44:46.608
But if you do the first one.

NOTE Confidence: 0.919724774285714

9e8e3d50-ae51-4aca-8a5c-ba7cb59f4105
00:44:46.610 --> 00:44:48.674
It fills out the whole memory

NOTE Confidence: 0.919724774285714

b285f440-7353-499e-9f80-7e88e5126b8d
00:44:48.674 --> 00:44:50.050
space of your program.

NOTE Confidence: 0.919724774285714

416afca7-661c-438a-b7be-269cbd23bdbe
00:44:50.050 --> 00:44:52.482
As a result, there is no way to

NOTE Confidence: 0.919724774285714

ab7ad5f6-d7f7-4148-b4cb-d241fed71d89
00:44:52.482 --> 00:44:54.433
get execute the second command

NOTE Confidence: 0.919724774285714

4ccd866f-db65-49e9-937d-0aca482b9d25
00:44:54.433 --> 00:44:56.977
because there is no second command.

NOTE Confidence: 0.919724774285714

ac9bbc37-3a54-42a7-8580-4ebd6bd9c6a6
00:44:56.980 --> 00:44:59.050
So as a result, in order to avoid that,

NOTE Confidence: 0.919724774285714

25e8cc16-c85b-4933-bc25-60a84bcd1d3b
00:44:59.050 --> 00:45:01.754
you have to create a new child and

NOTE Confidence: 0.919724774285714

0bf0bd9b-06cd-41bb-8808-ae0d2b742b16
00:45:01.754 --> 00:45:03.882
then use the memory space of the

NOTE Confidence: 0.919724774285714

a3eaaa19-d316-4df6-af96-e9ee4ac93227
00:45:03.882 --> 00:45:06.280
new child for your new program file.

NOTE Confidence: 0.919724774285714

67c3092a-5bbf-48e2-8d01-f3a730e8442e
00:45:06.280 --> 00:45:08.470
This is the same here.

NOTE Confidence: 0.919724774285714

146eb099-6634-4ab7-a980-1882afcec54b
00:45:08.470 --> 00:45:10.840
If you run the shell inside

NOTE Confidence: 0.919724774285714

1065631b-ae94-4de9-b73d-777753724eb4
00:45:10.840 --> 00:45:13.040
the kernel by the exact.

NOTE Confidence: 0.919724774285714

a6e5e9d6-ceda-4e02-8661-e94a1b215d68
00:45:13.040 --> 00:45:15.482
Uh, you gotta lose the content

NOTE Confidence: 0.919724774285714

23b90f16-bba9-4019-8ea2-9ee9ca942ea2
00:45:15.482 --> 00:45:18.110
of the kernel from the memory.

NOTE Confidence: 0.919724774285714

fd60a5f0-0467-47b0-acea-66ca9318218f
00:45:18.110 --> 00:45:19.328
So in order to avoid that,

NOTE Confidence: 0.919724774285714

94fab385-5aaf-4aa4-8190-4ed9350407b9
00:45:19.330 --> 00:45:22.186
you need a child and then empty

NOTE Confidence: 0.919724774285714

7a44a12b-2513-461d-8662-2ee43c0b0982
00:45:22.186 --> 00:45:25.108
the content of the child and fill

NOTE Confidence: 0.919724774285714

7174e138-d611-489d-8058-7a8a8cf3ae1c
00:45:25.108 --> 00:45:28.130
it with the content of the shell.

NOTE Confidence: 0.919724774285714

319dc2d9-1b4f-4bd5-a1db-622a81f8efbf
00:45:28.130 --> 00:45:28.420
Yeah.

NOTE Confidence: 0.77246139

462ca0f2-6a67-492a-aadf-8552164a1a7a
00:45:31.100 --> 00:45:34.898
Exactly exactly when you do 4,

NOTE Confidence: 0.77246139

d76248d9-5034-47a0-8873-a0d0b2c34341
00:45:34.900 --> 00:45:37.077
the content of the child is overwritten,

NOTE Confidence: 0.77246139

ca253053-54cd-47f5-a17c-1ffe941b7152
00:45:37.080 --> 00:45:38.610
not the content of the parent.

NOTE Confidence: 0.831607541818182

4e34eaf0-b783-4a7a-860a-3aaf64d90581
00:45:41.850 --> 00:45:47.260
OK, so now I'm going to go to the next topic,

NOTE Confidence: 0.831607541818182

7d0415f4-cb79-4167-84f4-a4623ad6ba71
00:45:47.260 --> 00:45:49.714
which is the consequence of having

NOTE Confidence: 0.831607541818182

d917994e-2f60-4406-b943-9e9e0d623f3f
00:45:49.714 --> 00:45:51.800
multiple processes inside the memory

NOTE Confidence: 0.831607541818182

bb3cc038-c9a6-4879-9147-82747c708429
00:45:51.800 --> 00:45:53.540
communication between the processes.

NOTE Confidence: 0.831607541818182

fa1c5861-fd8e-4b3c-9761-a1cfb47cb0f8
00:45:53.540 --> 00:45:56.879
One of one of the immediate question that

NOTE Confidence: 0.831607541818182

907f729e-6411-4695-9432-35cc9bae60f8
00:45:56.879 --> 00:46:00.312
you may ask is that is it possible for a

NOTE Confidence: 0.831607541818182

287f658c-e533-4d88-b577-ed1eac2e32a2
00:46:00.312 --> 00:46:02.556
parent to communicate with this child?

NOTE Confidence: 0.831607541818182

1ead00ab-bdba-46b1-bb56-be015b1f0306
00:46:02.560 --> 00:46:03.720
So in a real life,

NOTE Confidence: 0.831607541818182

7ff943d3-b791-4c6d-9747-8dd0e82e6253
00:46:03.720 --> 00:46:05.838
all the parents communicate with the

NOTE Confidence: 0.831607541818182

4c31a455-8e14-4a4c-b842-295a28b6678d
00:46:05.838 --> 00:46:08.689
child in order to nurture them and etc.

NOTE Confidence: 0.831607541818182

0228e29d-e244-4fad-bb89-32aeb8938d5a
00:46:08.690 --> 00:46:10.524
So is it possible to do that?

NOTE Confidence: 0.831607541818182

4b0e39dd-76a7-4249-9c9a-50cd0afd2b82
00:46:10.530 --> 00:46:12.666
Also the reverse, is it possible for the

NOTE Confidence: 0.831607541818182

831e03c2-768a-4a50-a9b7-02fc78b4d286
00:46:12.666 --> 00:46:14.789
 child to communicate with the parent? 

NOTE Confidence: 0.831607541818182

cae2ad27-68ea-4995-addc-911588578fc7
00:46:14.790 --> 00:46:18.024
Ask something, ask for help and etc.

NOTE Confidence: 0.831607541818182

700e8555-44b9-4fea-9a22-d3f3a5603364
00:46:18.030 --> 00:46:20.242
So the same happens in the operating

NOTE Confidence: 0.831607541818182

a5ccfe65-58fc-4c48-b0c4-3a5abe4573fb
00:46:20.242 --> 00:46:22.189
system inside the computer system.

NOTE Confidence: 0.831607541818182

66b2b9bb-d050-47cf-bd1c-cb909a7154c2
00:46:22.190 --> 00:46:24.188
A child process wants to communicate

NOTE Confidence: 0.831607541818182

bc5252cb-3238-4e70-90d9-65750127bd2b
00:46:24.188 --> 00:46:26.615
with the parent and the reverse the

NOTE Confidence: 0.831607541818182

aef89bd4-e856-4dc7-9763-ab456289b506
00:46:26.615 --> 00:46:29.030
 parent wants to communicate with the child. 

NOTE Confidence: 0.831607541818182

12f469ed-147f-4a23-aa54-da77104f9c0f
00:46:29.030 --> 00:46:30.955
At the higher level at the I

NOTE Confidence: 0.831607541818182

d0702276-2dc7-4868-9f35-9465350ff475
00:46:30.955 --> 00:46:33.128
mean kind of more general level,

NOTE Confidence: 0.831607541818182

7e081faf-2152-4966-86fc-9ce4d17b1b12
00:46:33.130 --> 00:46:35.154
is it possible to?

NOTE Confidence: 0.831607541818182

8ba74ec7-45cd-40a2-8d9b-194c3c264bc3
00:46:35.154 --> 00:46:38.520
Uh, provide a communication between

NOTE Confidence: 0.831607541818182

95929b00-d172-4b30-a50c-86fc2cd21d79
00:46:38.520 --> 00:46:42.222
any process with any other process.

NOTE Confidence: 0.831607541818182

acd54ea0-1f9a-4fd4-a168-1684c4cb7fd9
00:46:42.222 --> 00:46:45.630
So if we have this memory.

NOTE Confidence: 0.831607541818182

f4bb55c8-5eca-4f4f-b088-0bdbb32177ba
00:46:45.630 --> 00:46:49.398
Inside the memory we may have.

NOTE Confidence: 0.831607541818182

d1177c55-e841-4e59-8805-a3a345e666fc
00:46:49.400 --> 00:46:50.968
A lot of processes.

NOTE Confidence: 0.577680475

0c10c3de-a805-4310-a5fe-d62464ed5278
00:46:55.830 --> 00:47:01.070
For instance, P2 is the parent of P3.

NOTE Confidence: 0.577680475

6927be59-66e0-485a-a6bf-255a08017aed
00:47:01.070 --> 00:47:03.219
P2 is the path is the charge.

NOTE Confidence: 0.577680475

365103e0-60f3-464a-8769-7737718286ea
00:47:03.220 --> 00:47:09.310
I mean the child of the AP1, so.

NOTE Confidence: 0.577680475

19680a92-4eb3-4d5b-8bf6-fdda76ca4725
00:47:09.310 --> 00:47:11.710
P1 is the path of P2.

NOTE Confidence: 0.577680475

16203574-341b-4445-a6d9-0de78fa727ac
00:47:11.710 --> 00:47:13.636
So is it possible for communication

NOTE Confidence: 0.577680475

a2cfc406-2b1d-4c57-b63c-b6995c495474
00:47:13.636 --> 00:47:14.920
between child and parent?

NOTE Confidence: 0.577680475

0038aa53-ff87-4391-b2d3-9056a0c7b49b
00:47:14.920 --> 00:47:16.156
The answer is yes.

NOTE Confidence: 0.577680475

bf33d2f4-3e54-4ee9-a4ee-bfd22e7bbb00
00:47:16.156 --> 00:47:17.701
Is it possible to communicate

NOTE Confidence: 0.577680475

884d5b80-8647-426e-b8ed-bed4e7c87a44
00:47:17.701 --> 00:47:19.682
within any process? For instance,

NOTE Confidence: 0.577680475

b9663a33-0945-4f22-b5b7-ab3bbff8196f
00:47:19.682 --> 00:47:23.410
the child P3 communicate with the child P2.

NOTE Confidence: 0.577680475

aa49a475-9a28-40c3-a68c-bebc8b6f1797
00:47:23.410 --> 00:47:25.450
Is it possible to do that?

NOTE Confidence: 0.577680475

8bf1c9e6-f45f-4295-aff4-79279a4cc87b
00:47:25.450 --> 00:47:27.950
Or P2 as a parent.

NOTE Confidence: 0.577680475

9d8657d8-ba56-4b8c-993e-841794859859
00:47:27.950 --> 00:47:30.080
Communicate with the child period.

NOTE Confidence: 0.577680475

fa4cd2b8-89cc-4bd6-8627-bde187f2890c
00:47:30.080 --> 00:47:34.259
Sorry, P. Sorry, I'll keep you 4.

NOTE Confidence: 0.577680475

3b59f87b-fe67-4711-a062-3d410a9ae7ea
00:47:34.260 --> 00:47:35.708
So this pattern communicate

NOTE Confidence: 0.577680475

3b22b60b-8abd-4396-928a-9a115d997bd4
00:47:35.708 --> 00:47:37.156
with the child P2.

NOTE Confidence: 0.577680475

e7ce5ac3-522b-4c30-895a-b4a97ce5a35b
00:47:37.160 --> 00:47:38.308
The answer is yes.

NOTE Confidence: 0.577680475

a6ddc107-43e8-4a65-a157-c78d87e331c1
00:47:38.308 --> 00:47:40.919
How about the P4 at the child of P3?

NOTE Confidence: 0.577680475

076b3fa5-ac71-41aa-894d-51276faaeab3
00:47:40.920 --> 00:47:43.470
Communicate with the parent P1,

NOTE Confidence: 0.577680475

25f7fa8e-9fa0-423c-93c3-c7b1d66202cb
00:47:43.470 --> 00:47:44.883
then I suggest.

NOTE Confidence: 0.577680475

0b78db47-1435-484d-b177-2f6e5b0ce091
00:47:44.883 --> 00:47:48.180
Exactly the same inside the real world,

NOTE Confidence: 0.577680475

e7713ca5-f5e5-4bd9-94c4-65916e182b13
00:47:48.180 --> 00:47:51.030
so your child can communicate with

NOTE Confidence: 0.577680475

9fe41a02-3163-43ff-8dea-e8096e4f05e1
00:47:51.030 --> 00:47:54.180
the parents of another child and etc.

NOTE Confidence: 0.577680475

f2c34df6-ebcd-4779-b825-dd96ed643458
00:47:54.180 --> 00:47:56.586
So this is called into it.

NOTE Confidence: 0.577680475

5d4e11c1-081b-4951-bfb2-fe758c7c3fd5
00:47:56.590 --> 00:47:59.460
This is called interprocess communication,

NOTE Confidence: 0.577680475

11e38228-9e0d-4264-b78d-5d150d47e69a
00:47:59.460 --> 00:48:03.051
and you're going to see how it is possible

NOTE Confidence: 0.577680475

6a5bea74-4d33-4c7b-a914-36778533ae9b
00:48:03.051 --> 00:48:05.979
 inside UNIX based operating system. 

NOTE Confidence: 0.577680475

7a081123-0400-4e4f-b80f-c2dba6fb6658
00:48:05.980 --> 00:48:09.148
So we start with a very basic one

NOTE Confidence: 0.577680475

e9fc5842-1912-472a-b31e-9e43e003c951
00:48:09.148 --> 00:48:10.763
communication within a parent

NOTE Confidence: 0.577680475

16ddba2f-4aa4-48e9-aaa5-2a70f2991e05
00:48:10.763 --> 00:48:13.013
to the child just One Direction.

NOTE Confidence: 0.577680475

4c0f12c9-b262-4418-beca-3f97bf65401f
00:48:13.020 --> 00:48:14.680
So we already saw this.

NOTE Confidence: 0.577680475

86ed19e2-6cc1-4d34-825d-44ef8636887d
00:48:14.680 --> 00:48:17.422
We said that a parent should

NOTE Confidence: 0.577680475

a9b3de4c-f7b5-4b72-acf1-2b6af0807fed
00:48:17.422 --> 00:48:19.796
implement or we should carries

NOTE Confidence: 0.577680475

cec709ce-7303-40d1-b755-a44fd956d5ee
00:48:19.796 --> 00:48:22.484
all the tasks of the child.

NOTE Confidence: 0.577680475

977fe474-ce1c-4b4d-b14e-682720cf5f25
00:48:22.490 --> 00:48:24.590
Because when the child created when

NOTE Confidence: 0.577680475

a7edec01-577e-4a70-b0ae-178c4a330e34
00:48:24.590 --> 00:48:26.748
the child is created by the 4th,

NOTE Confidence: 0.577680475

717460b4-12e9-4711-a179-cabe2e00c805
00:48:26.750 --> 00:48:29.067
it's an exact copy of the parent.

NOTE Confidence: 0.577680475

1cb3340e-07df-4533-a201-6758b0d000e7
00:48:29.070 --> 00:48:31.310
So if their parents has the task

NOTE Confidence: 0.577680475

8777deb2-a443-4f4a-98e6-21801b744b5d
00:48:31.310 --> 00:48:33.627
of the child as a copy of that,

NOTE Confidence: 0.577680475

426a0f01-ccdb-44e7-a307-117a73d5cce4
00:48:33.630 --> 00:48:35.030
it's not going to have the task.

NOTE Confidence: 0.825488433157895

937d809d-a921-4e5a-836c-f9080c272727
00:48:37.150 --> 00:48:39.873
So one way to pass the information

NOTE Confidence: 0.825488433157895

ae108d5a-4e8a-48ac-8355-936ae93a588a
00:48:39.873 --> 00:48:42.364
is using this idea of copy

NOTE Confidence: 0.825488433157895

a0f335ad-032e-4afb-aaba-93a6db2fe06e
00:48:42.364 --> 00:48:44.848
between the child and the parent.

NOTE Confidence: 0.825488433157895

07f0b55b-8395-4470-ae64-566904200d81
00:48:44.850 --> 00:48:48.250
So. We already saw this

NOTE Confidence: 0.825488433157895

5c5cdbad-450d-423e-bda5-788a94a9ca82
00:48:48.250 --> 00:48:50.290
generation generative model.

NOTE Confidence: 0.825488433157895

974ad80d-210f-471c-bb8b-a6af9fd59a11
00:48:50.290 --> 00:48:52.210
We said that if this is the parent,

NOTE Confidence: 0.825488433157895

84905120-91ee-4f4e-9de7-1050fe565906
00:48:52.210 --> 00:48:54.744
the parent does the forking and by

NOTE Confidence: 0.825488433157895

c622f44f-5396-45a4-8906-e4eadcb44285
00:48:54.744 --> 00:48:57.137
just checking the return PID we can

NOTE Confidence: 0.825488433157895

0d0a7c40-7afc-4d21-8a7f-b7201b8e4d17
00:48:57.137 --> 00:48:59.424
say that we are either the parent

NOTE Confidence: 0.825488433157895

816c9da7-15e1-479e-afae-95fd2c3bf96d
00:48:59.424 --> 00:49:02.049
process or we are the child process.

NOTE Confidence: 0.825488433157895

729d1a83-8b54-40e4-b736-b05d0ac57b0e
00:49:02.050 --> 00:49:05.137
Inside this part we put all the task that

NOTE Confidence: 0.825488433157895

881ee639-47ca-4d80-bb26-17e4c953983c
00:49:05.137 --> 00:49:08.599
is going to be given to the child process.

NOTE Confidence: 0.825488433157895

30f5aa75-3872-4f7d-b14c-88b8ff68cd4e
00:49:08.600 --> 00:49:10.380
Although the patent has it,

NOTE Confidence: 0.825488433157895

14337788-2f3e-4dd0-ae1d-704525e164e7
00:49:10.380 --> 00:49:13.820
but when it at runtime.

NOTE Confidence: 0.825488433157895

94d7a71f-8ab8-4ee9-973e-0002b9ba4fa8
00:49:13.820 --> 00:49:17.270
When, uh, we had a copy of the parent as

NOTE Confidence: 0.825488433157895

8cb13186-e521-4c78-bf05-0e3676c669c7
00:49:17.356 --> 00:49:21.859
a child because the child PID gonna be 0.

NOTE Confidence: 0.825488433157895

833ac931-1272-4dcc-ad5c-e2adcd775298
00:49:21.860 --> 00:49:23.248
Inside the child process,

NOTE Confidence: 0.825488433157895

c7f09fc9-7d96-42d1-a3ff-11afc4c92872
00:49:23.248 --> 00:49:25.726
these lines of code going to be

NOTE Confidence: 0.825488433157895

a255bbaf-dd8b-44e6-9c3e-236b90b35fdd
00:49:25.726 --> 00:49:27.706
reachable only by the child copy,

NOTE Confidence: 0.825488433157895

89f58973-443b-4779-bec8-7673aa94dad7
00:49:27.710 --> 00:49:30.030
not by the parent.

NOTE Confidence: 0.825488433157895

8e496170-27ac-4c8a-859a-605dccc1d81e
00:49:30.030 --> 00:49:31.820
So.

NOTE Confidence: 0.825488433157895

1b7d4290-840a-4cc8-b06e-975289314407
00:49:31.820 --> 00:49:34.660
In order to pass more information to the

NOTE Confidence: 0.825488433157895

071cc776-f798-4716-90d1-f73a3badaf79
00:49:34.660 --> 00:49:38.380
child on top of these tasks or lines of code,

NOTE Confidence: 0.825488433157895

558875ac-fc7c-43f1-bff9-ed864474d78a
00:49:38.380 --> 00:49:40.480
you could simply say that yes,

NOTE Confidence: 0.825488433157895

99d4084d-801a-49a9-a276-ba783e508af7
00:49:40.480 --> 00:49:41.476
before the four,

NOTE Confidence: 0.825488433157895

9fbb1a4a-c393-4941-a2c4-6563a4c9da12
00:49:41.476 --> 00:49:43.800
we can define a lot of variables.

NOTE Confidence: 0.825488433157895

eb7a3f83-1164-400a-a348-5ee1f5df4e9d
00:49:43.800 --> 00:49:46.433
 For instance, we could say that int a, 

NOTE Confidence: 0.825488433157895

a7ff5236-476d-4edc-9166-fd00779d89b0
00:49:46.433 --> 00:49:50.377
but this ain't gonna be for the child.

NOTE Confidence: 0.825488433157895

1961e9b2-3692-4f71-bce6-80d59d82a5e7
00:49:50.380 --> 00:49:52.108
Also, for instance,

NOTE Confidence: 0.825488433157895

02ef06a2-4017-46c7-b4dd-693466cb0583
00:49:52.108 --> 00:49:54.094
another variable float B,

NOTE Confidence: 0.825488433157895

d9ff68ab-1c26-46bc-9a21-ce8439df3796
00:49:54.094 --> 00:49:56.380
but this is going to be for the child,

NOTE Confidence: 0.825488433157895

6d0e9805-1915-47ae-9b48-cfd2041a4dbd
00:49:56.380 --> 00:49:58.018
so I just put in different name

NOTE Confidence: 0.825488433157895

a98f81cd-4e6f-4184-9418-ebd0fff7961b
00:49:58.018 --> 00:49:59.606
just to say that these variables

NOTE Confidence: 0.825488433157895

c2f667c9-e28b-43a8-89e9-f787f2a125de
00:49:59.606 --> 00:50:01.545
going to be used by the child.

NOTE Confidence: 0.825488433157895

a1563bf6-26b8-4c0e-9ab2-be4dfda43049
00:50:01.550 --> 00:50:02.320
For instance,

NOTE Confidence: 0.825488433157895

ea06edca-d56c-4244-9008-a181f13eb1d7
00:50:02.320 --> 00:50:06.209
you put number 10 and here you put number 5.

NOTE Confidence: 0.825488433157895

36762b98-3eb3-40ab-a8f8-d80a17350328
00:50:06.210 --> 00:50:09.154
And then at the time of the fork.

NOTE Confidence: 0.731212223333333

4be3187e-6c52-4221-986d-1eb4223f013e
00:50:12.340 --> 00:50:15.060
Because a copy gonna be

NOTE Confidence: 0.731212223333333

6a7f0d17-3f48-4536-bdbd-9cda57eb95c2
00:50:15.060 --> 00:50:17.236
generated for the child.

NOTE Confidence: 0.731212223333333

173b6e5e-18e2-4566-a7ad-6625bcf624dc
00:50:17.240 --> 00:50:20.486
So if this is the memory.

NOTE Confidence: 0.731212223333333

a0c8f445-23c3-48cf-bc11-1ab3fc1a15b5
00:50:20.490 --> 00:50:22.620
And this is the parent.

NOTE Confidence: 0.731212223333333

2d7b6cc8-c2a7-4fe8-8ba4-591be7ee8318
00:50:22.620 --> 00:50:26.876
A copy gonna be fully charged in the

NOTE Confidence: 0.731212223333333

5059a3ad-c062-42e7-a575-dc4db2e685ad
00:50:26.876 --> 00:50:29.610
copy of the independent variable.

NOTE Confidence: 0.731212223333333

092f4382-5004-4124-803e-ae509123ae1c
00:50:29.610 --> 00:50:33.780
A child we have the variable B child.

NOTE Confidence: 0.731212223333333

92122b0d-9d43-4336-a848-9c898ca17c2a
00:50:33.780 --> 00:50:36.340
When we do the copy for the child

NOTE Confidence: 0.731212223333333

2fac3a86-bc6d-4f66-89d2-5a529a15f3f8
00:50:36.340 --> 00:50:38.476
inside the memory of the child.

NOTE Confidence: 0.731212223333333

0101af0a-32ac-44bc-a1d9-f1b9a6f40f88
00:50:38.480 --> 00:50:41.148
Also we have a under underline

NOTE Confidence: 0.731212223333333

69103119-b208-4d52-b4c1-1f5306a6222b
00:50:41.148 --> 00:50:44.136
child and be under line chart.

NOTE Confidence: 0.731212223333333

c1242a75-279f-444c-a90d-ded93dad1fcf
00:50:44.140 --> 00:50:45.508
Because it's a copy,

NOTE Confidence: 0.731212223333333

8f6521bd-2f79-4a90-9dd6-af2838e8dc8f
00:50:45.508 --> 00:50:48.076
so this way you can pass more

NOTE Confidence: 0.731212223333333

bcb864a2-98e5-4201-aaa9-e3c882ed8114
00:50:48.076 --> 00:50:50.612
information to the child and then

NOTE Confidence: 0.731212223333333

1d3d44be-4202-4738-874e-70b6ae7745e3
00:50:50.612 --> 00:50:52.542
inside these opcodes you can

NOTE Confidence: 0.731212223333333

69380181-adf5-4e5b-af07-79824cc256c7
00:50:52.542 --> 00:50:55.099
say that for instance a child.

NOTE Confidence: 0.731212223333333

5eb7b687-3b31-4dfb-9120-ced4458d059a
00:50:55.100 --> 00:50:57.220
Uh.

NOTE Confidence: 0.731212223333333

7633b536-65b3-4b96-b979-f932291413e6
00:50:57.220 --> 00:51:00.756
Plus one goes to another variable and etc.

NOTE Confidence: 0.731212223333333

4fbe998d-597d-4766-85d9-e2319062ab8a
00:51:00.760 --> 00:51:02.923
So this way a pattern can pass

NOTE Confidence: 0.731212223333333

abac8206-6596-4b17-b975-a9e9c7bead94
00:51:02.923 --> 00:51:04.540
more information to the child,

NOTE Confidence: 0.731212223333333

b0038e0b-9e90-4ca6-8146-8c3e44edfcb4
00:51:04.540 --> 00:51:06.490
but just putting some more

NOTE Confidence: 0.731212223333333

d4e02b7f-549e-4184-93df-8a5d551990f1
00:51:06.490 --> 00:51:08.470
variables and because it's a copy,

NOTE Confidence: 0.731212223333333

79244c91-4067-45d8-9c78-9b22718e0b3b
00:51:08.470 --> 00:51:10.528
the child received both variables too.

NOTE Confidence: 0.84513223

f5bacb4b-356b-4e21-b2b9-be55a8f2b83c
00:51:13.310 --> 00:51:18.184
So here is a a I mean figure for that.

NOTE Confidence: 0.84513223

13c2f3f0-2f47-4761-887c-728ff7340ba2
00:51:18.190 --> 00:51:20.470
So we already saw this.

NOTE Confidence: 0.84513223

2dbf7e0b-2c20-422f-b4b3-660f74fed55b
00:51:20.470 --> 00:51:23.030
But the only thing here is that you

NOTE Confidence: 0.84513223

19ef4f96-dd19-406a-b896-2b12c89c6252
00:51:23.030 --> 00:51:25.840
have to be careful that it's a copy.

NOTE Confidence: 0.84513223

bfeb0943-f27f-4054-b265-d1d55acdb014
00:51:25.840 --> 00:51:28.580
Although it receives the information,

NOTE Confidence: 0.84513223

74ce2a1b-2bfe-406c-9d48-96f3c47a19ea
00:51:28.580 --> 00:51:30.492
but it's a copy.

NOTE Confidence: 0.84513223

d6242e06-b3cd-4712-8b56-e2576d071a68
00:51:30.492 --> 00:51:32.862
If you change these copies,

NOTE Confidence: 0.84513223

6b165f31-9b57-40d9-bc23-98998c1d0ca9
00:51:32.862 --> 00:51:36.124
they're gonna be isolated from each other.

NOTE Confidence: 0.84513223

374f094f-ff28-4b09-8ec3-f7f29f93bee8
00:51:36.130 --> 00:51:39.780
So if the variable a.

NOTE Confidence: 0.84513223

96c7afe8-3dfa-4ab6-9349-ba252b34e2a6
00:51:39.780 --> 00:51:43.531
Here is 5 and later becomes 10

NOTE Confidence: 0.84513223

09970f2c-68c3-46ff-8a5a-2fa194263268
00:51:43.531 --> 00:51:46.986
by the parents. This variable.

NOTE Confidence: 0.84513223

0048fd5c-e5bf-4361-94d2-73ab3406bd3e
00:51:46.990 --> 00:51:48.952
Still inside the child is still

NOTE Confidence: 0.84513223

2521a8d3-6b8a-4111-9ac2-77b637794ad2
00:51:48.952 --> 00:51:51.108
five and the child can make it,

NOTE Confidence: 0.84513223

cfae5101-7e48-4a6b-84a1-111170bfeef0
00:51:51.110 --> 00:51:55.410
for instance 25. So.

NOTE Confidence: 0.84513223

5026d187-72e1-47e7-8649-5988b12b5105
00:51:55.410 --> 00:51:57.372
The new values of this variable

NOTE Confidence: 0.84513223

3d7ab408-353c-4f28-a977-f24f4cce4d96
00:51:57.372 --> 00:52:00.209
cannot be seen by the child or the

NOTE Confidence: 0.84513223

2882128f-52b4-46e7-9435-534bdd416c42
00:52:00.209 --> 00:52:02.029
parents because they are copied.

NOTE Confidence: 0.892889238333333

bc5fc96e-45e0-4840-9453-66db582d4aa8
00:52:04.740 --> 00:52:07.506
So. In terms of operating system,

NOTE Confidence: 0.892889238333333

17250c14-fe32-4f54-baac-b1dcea6e72c5
00:52:07.510 --> 00:52:10.048
you could say that they changed

NOTE Confidence: 0.892889238333333

07c198df-3842-434d-b8f3-9a6631645001
00:52:10.048 --> 00:52:12.247
the variables inside the child

NOTE Confidence: 0.892889238333333

aa77b1d2-d071-4b6a-8c8a-63a4ad7994a3
00:52:12.247 --> 00:52:14.387
and parent process or local.

NOTE Confidence: 0.892889238333333

d6a07631-a18f-4b2d-9c2e-4bd234ecadfe
00:52:14.390 --> 00:52:16.210
You can pass it in One Direction,

NOTE Confidence: 0.892889238333333

4a68dbb8-5782-4339-8e40-3ecb75520e06
00:52:16.210 --> 00:52:18.328
but after that any change or

NOTE Confidence: 0.892889238333333

a3b213f2-fbe9-4edc-beca-32ec2ffe0460
00:52:18.328 --> 00:52:20.540
local you cannot see the check.

NOTE Confidence: 0.892889238333333

053cd24a-6b90-41f8-9ff3-28306e6eadbc
00:52:20.540 --> 00:52:22.382
The parent cannot see the change

NOTE Confidence: 0.892889238333333

29bd195a-6bfe-4e14-8a03-801c654f7d14
00:52:22.382 --> 00:52:26.800
by the child and vice versa. So.

NOTE Confidence: 0.83462902

fe22ac30-0636-4d46-9c49-f83ad8b96058
00:52:28.820 --> 00:52:30.215
Another communication happens,

NOTE Confidence: 0.83462902

c92ea457-c797-4bf0-a212-1e919d6d3616
00:52:30.215 --> 00:52:33.470
so this is one way of communication

NOTE Confidence: 0.83462902

09aa16a2-09b3-455f-8f00-67bc5a5cff29
00:52:33.540 --> 00:52:36.733
from parent to child. But uh,

NOTE Confidence: 0.83462902

ff9de92c-2f83-469a-bd8b-f8cb717d18e7
00:52:36.733 --> 00:52:39.100
at four there is no way for the parent

NOTE Confidence: 0.83462902

50ec5be8-bc14-43d1-9bc5-1c933ca7673d
00:52:39.165 --> 00:52:41.608
to do the communication with the child.

NOTE Confidence: 0.83462902

6bea9c66-e170-4c88-9a7b-d4202e6addcf
00:52:41.610 --> 00:52:43.790
It just create the child.

NOTE Confidence: 0.83462902

3f80425b-bce1-4a0d-a9bb-ce0296c9dbd4
00:52:43.790 --> 00:52:48.164
But after that there is no

NOTE Confidence: 0.83462902

41882ad5-dd95-4381-a920-80b70df4f031
00:52:48.164 --> 00:52:51.080
communication happening up until.

NOTE Confidence: 0.83462902

9f594901-a53d-4ebe-9ecb-8765ab1a3c82
00:52:51.080 --> 00:52:54.020
The moment that the child finishes,

NOTE Confidence: 0.83462902

4005d0f7-c749-47bd-a3c8-234873871044
00:52:54.020 --> 00:52:56.639
so one communication at the time of the fork,

NOTE Confidence: 0.83462902

ae98dbc5-0334-4dee-9f5f-3f660441d6a3
00:52:56.640 --> 00:52:59.412
which is the copy of the memory

NOTE Confidence: 0.83462902

41da246e-fa82-41c4-99c0-ca28665688fb
00:52:59.412 --> 00:53:02.497
space of the parent to the child.

NOTE Confidence: 0.83462902

d66dd705-c89e-497d-b016-872c5382b690
00:53:02.500 --> 00:53:05.128
The second communication happens

NOTE Confidence: 0.83462902

52a8e8ed-1d05-47ed-a7f8-cd8bc6f32666
00:53:05.128 --> 00:53:07.756
when the child finishes.

NOTE Confidence: 0.83462902

9b4be669-e560-4022-83ac-69f3c330be03
00:53:07.760 --> 00:53:09.700
When the child finishes,

NOTE Confidence: 0.83462902

8c4245f6-29d1-4da4-ba32-cb71b55ade6f
00:53:09.700 --> 00:53:12.610
we already said that it issues

NOTE Confidence: 0.83462902

9f613f1c-b647-4923-a487-2a90e0923914
00:53:12.699 --> 00:53:14.475
a system called. Actually,

NOTE Confidence: 0.83462902

72036037-73c9-4519-912c-2a1bb4fc772b
00:53:14.475 --> 00:53:17.030
the library routine which calls a underlying,

NOTE Confidence: 0.83462902

2a3e7f28-bec5-40c5-8bcd-a432abdcd83c
00:53:17.030 --> 00:53:19.670
except which is a system called,

NOTE Confidence: 0.83462902

99a08ad9-0fee-42df-b157-c491d6186e08
00:53:19.670 --> 00:53:23.010
passing the status code.

NOTE Confidence: 0.83462902

a5745faf-bc16-4f10-a354-f02ea7b6ce37
00:53:23.010 --> 00:53:26.478
By this system, called the child,

NOTE Confidence: 0.83462902

77c2b575-d075-490b-add7-32cdbb064396
00:53:26.480 --> 00:53:28.868
tells the kernel that I'm done.

NOTE Confidence: 0.83462902

f16d7371-4c3d-4d13-86ad-0763554f90cb
00:53:28.870 --> 00:53:31.290
Please wake up my parent.

NOTE Confidence: 0.83462902

4e6ce247-88c3-4c87-a4d7-cdd55ee76097
00:53:31.290 --> 00:53:32.730
And the Colonel.

NOTE Confidence: 0.83462902

7604fbd7-fa4e-4a72-a06a-d93d7274465c
00:53:32.730 --> 00:53:36.090
Find the parent of the child and

NOTE Confidence: 0.83462902

b04c22ce-2f4e-44e6-b8bc-e4cb2f014d06
00:53:36.090 --> 00:53:38.785
see that the parent is in the

NOTE Confidence: 0.83462902

82c5a483-7c48-477f-8128-f7be424049fb
00:53:38.785 --> 00:53:41.310
block blocking a state or no.

NOTE Confidence: 0.83462902

5359f157-6c05-45c8-af22-a466965101db
00:53:41.310 --> 00:53:43.470
If it is not in the blocking estate and

NOTE Confidence: 0.83462902

633b4a88-55db-4bea-94c4-5e372a3659ef
00:53:43.470 --> 00:53:45.430
waits for the parent to call the wait

NOTE Confidence: 0.83462902

9250a267-e8b5-4188-9bb9-49adb861367e
00:53:45.430 --> 00:53:47.768
if it's already in the blocking state,

NOTE Confidence: 0.83462902

19d96df1-ff83-4c8c-b332-08a9509d1b65
00:53:47.770 --> 00:53:51.550
simply tells the parent that.

NOTE Confidence: 0.83462902

c3942ac0-946c-4896-addb-542c098f09e6
00:53:51.550 --> 00:53:55.238
Here I mean in this location you can

NOTE Confidence: 0.83462902

ba91c1a9-b397-4b6a-9ede-7c0e118fc664
00:53:55.238 --> 00:53:58.736
find the exact status of the child.

NOTE Confidence: 0.83462902

767547d6-e648-4fd6-a4a7-c22da8b0e7d9
00:53:58.736 --> 00:54:02.213
So this is another communication from the

NOTE Confidence: 0.83462902

bda67fce-90d9-4bff-b6e5-370e02ececaa
00:54:02.213 --> 00:54:05.384
child to the parent through the kernel.

NOTE Confidence: 0.83462902

ace41a4f-6e2b-40e1-a502-0b58f5b1e9fe
00:54:05.390 --> 00:54:08.010
So by doing the weight,

NOTE Confidence: 0.83462902

a57be35d-d636-4e40-a57c-2869b6dfcaac
00:54:08.010 --> 00:54:10.035
the shell the parent waits

NOTE Confidence: 0.83462902

c1338ea5-3a4d-46c4-ba90-27c35d2710bc
00:54:10.035 --> 00:54:12.060
for the communication by the

NOTE Confidence: 0.83462902

83f710ec-49cd-4b73-af5d-75ddb33743c0
00:54:12.141 --> 00:54:15.738
child through the kernel.

NOTE Confidence: 0.83462902

63706c1f-0172-466e-a975-45b2c61d16b6
00:54:15.740 --> 00:54:16.073
And,

NOTE Confidence: 0.83462902

0ce61a7c-95c1-4c3c-8a6b-7730eca6582a
00:54:16.073 --> 00:54:16.406
uh,

NOTE Confidence: 0.83462902

a0b24228-6669-45b5-bb45-1bc111b9d049
00:54:16.406 --> 00:54:18.737
now I'm going to discuss a little

NOTE Confidence: 0.83462902

7d1c8050-cbe8-48bc-9ff4-7151557867b8
00:54:18.737 --> 00:54:20.686
bit more about this communication

NOTE Confidence: 0.83462902

51309e8a-f4c9-4290-94e2-adb38a4de740
00:54:20.686 --> 00:54:23.712
at the end of the child at the

NOTE Confidence: 0.83462902

6632ee59-999a-4c0f-b154-534f8ee50cf4
00:54:23.712 --> 00:54:25.966
end of the process for the child.

NOTE Confidence: 0.83462902

6d61e73c-abd8-4bb4-b1be-7712a5778fcd
00:54:25.970 --> 00:54:28.454
So basically the the parent does

NOTE Confidence: 0.83462902

d6aacb63-f65e-4224-bdb8-08ddeab89da1
00:54:28.454 --> 00:54:31.681
the wait wait for the children to

NOTE Confidence: 0.83462902

acefd04f-1bf2-4d07-9ad3-bfff50639321
00:54:31.681 --> 00:54:34.495
finishes and tells the kernel that

NOTE Confidence: 0.83462902

32aea7be-526e-4a3a-8fe7-b20efa179ea5
00:54:34.495 --> 00:54:37.599
whatever the child wants to tell me,

NOTE Confidence: 0.83462902

ff34fced-202c-4645-b31a-5d144ee985ef
00:54:37.600 --> 00:54:39.900
put that in this location.

NOTE Confidence: 0.884982465555555

eff7660f-0e7c-4056-bc5f-83f2d6588490
00:54:42.110 --> 00:54:45.647
So again, at the end of the child process,

NOTE Confidence: 0.884982465555555

e98834f4-2622-4edf-91a8-9d96c6bc1e09
00:54:45.650 --> 00:54:48.218
the child says that I'm done,

NOTE Confidence: 0.884982465555555

4a4284f1-6ed5-43f5-a91d-e24b2de90a01
00:54:48.220 --> 00:54:49.884
so the information should

NOTE Confidence: 0.884982465555555

060b2afe-cd1e-40f4-b68f-810bfe2c9b80
00:54:49.884 --> 00:54:51.964
be passed to the parent,

NOTE Confidence: 0.884982465555555

5e1626db-976f-44ea-a801-d3c2a09a1eac
00:54:51.970 --> 00:54:53.548
which is just a zero exit.

NOTE Confidence: 0.884982465555555

a2ce5167-5c65-49df-9f35-c6cc5ac35e1c
00:54:53.550 --> 00:54:54.488
Successful, but.

NOTE Confidence: 0.884982465555555

6c60265d-979b-4217-9786-56e7a0cb10a7
00:54:54.488 --> 00:54:56.364
The parent already said

NOTE Confidence: 0.884982465555555

f94ffb70-aa7a-4142-80de-004a1474a497
00:54:56.364 --> 00:54:58.240
that all this information

NOTE Confidence: 0.884982465555555

5f0defcc-6a5b-43b8-97d6-5cef9a61076d
00:54:58.318 --> 00:55:00.238
should be at this location.

NOTE Confidence: 0.843578643076923

ddb740bd-b306-4483-ad91-7af5c82ef16b
00:55:02.530 --> 00:55:04.554
Because this status location,

NOTE Confidence: 0.843578643076923

5c935bda-f3ce-4c6a-b6b9-af0cc16b51ed
00:55:04.554 --> 00:55:07.084
which is because it's appointed

NOTE Confidence: 0.843578643076923

e64722e3-db07-4d31-8613-2c491e4f5ddf
00:55:07.084 --> 00:55:09.557
to a memory location. And.

NOTE Confidence: 0.843578643076923

7efb223c-5de3-4a27-a500-85ab520ea009
00:55:09.557 --> 00:55:12.756
If you are a a pattern that

NOTE Confidence: 0.843578643076923

b7796824-4706-4d02-9769-ebbd0bdc14ec
00:55:12.756 --> 00:55:15.710
doesn't care about the children,

NOTE Confidence: 0.843578643076923

765f6856-3717-4f1f-a551-42fc06aeba1e
00:55:15.710 --> 00:55:18.070
how the child finishes,

NOTE Confidence: 0.843578643076923

fd12239a-4eb8-479a-b4d0-32df8255de39
00:55:18.070 --> 00:55:21.810
you can simply say that I don't

NOTE Confidence: 0.843578643076923

512317eb-a208-40ae-aeae-12ed559c269a
00:55:21.810 --> 00:55:24.180
have any location to store the

NOTE Confidence: 0.843578643076923

e5b0705b-bea0-4ebc-982f-bbd53176a252
00:55:24.180 --> 00:55:25.770
communication by the child,

NOTE Confidence: 0.843578643076923

f48f09c5-0cf5-4e01-8d73-9d7fc506cde3
00:55:25.770 --> 00:55:27.726
so you can simply pass and

NOTE Confidence: 0.843578643076923

5e75c3c1-a3d6-407d-ab95-75091997d8e6
00:55:27.726 --> 00:55:29.550
not value or zero value.

NOTE Confidence: 0.843578643076923

ce7fd60d-c91b-493d-b3ed-e6c3bfc26203
00:55:29.550 --> 00:55:31.235
Basically you are telling the

NOTE Confidence: 0.843578643076923

e71f03fa-2f8b-442a-82db-fa8a3e8bdacf
00:55:31.235 --> 00:55:33.530
camel that I just wanted to wait

NOTE Confidence: 0.843578643076923

bbd96a88-a82a-474a-965d-23479d105040
00:55:33.530 --> 00:55:36.074
for the chart to finish it, and I

NOTE Confidence: 0.843578643076923

caff5cea-488f-49ce-a92a-a6c19ead34b6
00:55:36.074 --> 00:55:39.238
don't care about how the child finishes.

NOTE Confidence: 0.843578643076923

36d4f4da-70d5-4ad6-87e0-4a0b0b6d91d6
00:55:39.240 --> 00:55:42.840
So you just wait.

NOTE Confidence: 0.843578643076923

e50f4511-a1ff-4e4c-8b64-b9eb2ff5662d
00:55:42.840 --> 00:55:49.000
4. Child to finish.

NOTE Confidence: 0.843578643076923

59501960-1701-484f-a4ed-1e1fa911aaa9
00:55:49.000 --> 00:55:56.890
But you don't care. About how.

NOTE Confidence: 0.843578643076923

a0b17e08-0b47-49d3-8cc6-adfc93191eff
00:55:56.890 --> 00:55:59.338
The child finishes.

NOTE Confidence: 0.843578643076923

186c5591-1988-4f42-bc7b-6afc845ac9d5
00:55:59.340 --> 00:56:00.605
So you don't care about

NOTE Confidence: 0.843578643076923

b23dd316-ed12-4a8a-abe9-a09b2747203a
00:56:00.605 --> 00:56:01.617
how the child finishes,

NOTE Confidence: 0.843578643076923

3b7b4c52-4025-4dbb-a33b-660a90d8e483
00:56:01.620 --> 00:56:04.630
you just want to wait for the

NOTE Confidence: 0.843578643076923

d32e58bc-5f03-4737-8595-dc959960df6d
00:56:04.630 --> 00:56:06.529
finish of finishing of the child.

NOTE Confidence: 0.814036444285714

9f5d223a-0e91-471c-aae7-f73aac7fd1c1
00:56:09.250 --> 00:56:11.749
However, if you are a responsible parent,

NOTE Confidence: 0.814036444285714

9fe41d16-308a-4dc1-8f3a-ff960347788c
00:56:11.750 --> 00:56:15.584
you want to see that how your child finishes,

NOTE Confidence: 0.814036444285714

b5cd0586-2442-4b06-9652-7399e7be2488
00:56:15.590 --> 00:56:19.440
so you have to provide a location

NOTE Confidence: 0.814036444285714

1a212004-5b5b-4d6f-b3a7-1a61ebbdf8da
00:56:19.440 --> 00:56:22.500
for the communication by the child.

NOTE Confidence: 0.814036444285714

a9c34f1c-88e1-4f27-af97-1fd4d776a11a
00:56:22.500 --> 00:56:25.116
This location is an integer location,

NOTE Confidence: 0.814036444285714

c899835a-5dcb-4008-886d-3ca7193fc67a
00:56:25.120 --> 00:56:29.400
so by default is a two byte space.

NOTE Confidence: 0.814036444285714

1676adf2-ffe5-4c9c-b889-a03039fafbd8
00:56:29.400 --> 00:56:32.501
And this is the address of this

NOTE Confidence: 0.814036444285714

d9608a17-be1e-4b42-85db-3d3136ad78f8
00:56:32.501 --> 00:56:34.940
two bytes inside the memory.

NOTE Confidence: 0.814036444285714

2f03bac7-cae0-4aca-ab09-9204757ec805
00:56:34.940 --> 00:56:37.055
We usually call it the

NOTE Confidence: 0.814036444285714

c6ed7c88-2a6e-4cdb-ae70-a0777bb89fb7
00:56:37.055 --> 00:56:39.170
status of the child process.

NOTE Confidence: 0.814036444285714

4a7843d6-e46d-4119-98f7-54dc80980ac7
00:56:39.170 --> 00:56:41.018
And the first, uh,

NOTE Confidence: 0.814036444285714

1de5cb55-f2aa-4b37-a746-13b1d2c2c0ac
00:56:41.018 --> 00:56:44.430
lower part is called World order point.

NOTE Confidence: 0.814036444285714

4e672655-eb72-44f3-973b-e0863fb155f5
00:56:44.430 --> 00:56:46.740
So you see eight bits.

NOTE Confidence: 0.814036444285714

3d7b175f-f2ca-47b8-b6fd-02ea18d281b5
00:56:46.740 --> 00:56:49.205
Each four gonna be represented

NOTE Confidence: 0.814036444285714

28f49e8e-2d4d-4591-9c92-fdcd974906d0
00:56:49.205 --> 00:56:51.177
by one hexadecimal number,

NOTE Confidence: 0.814036444285714

49b1ea49-a0b7-4292-b587-c02f81a618b2
00:56:51.180 --> 00:56:54.295
so you see at the maximum number

NOTE Confidence: 0.814036444285714

ae0891a9-b1b9-4ed8-8cec-aa4d40412002
00:56:54.295 --> 00:56:57.233
gonna be old ones F or the minimum

NOTE Confidence: 0.814036444285714

4185ff51-5727-4dcd-9a91-3a8908366b2f
00:56:57.233 --> 00:56:59.039
value going to be all zero,

NOTE Confidence: 0.814036444285714

4de6ebe5-2dd5-4328-9a72-188aae1b617a
00:56:59.040 --> 00:57:00.272
so it becomes 00.

NOTE Confidence: 0.814036444285714

41dd58f6-b458-470b-8850-e847fd9a4eb2
00:57:00.272 --> 00:57:01.812
So the minimum value is

NOTE Confidence: 0.695878264444445

e449669b-6830-4072-b3a4-31329c1916cb
00:57:04.200 --> 00:57:06.865
0000000, or the maximum value

NOTE Confidence: 0.695878264444445

8755aa3f-38e1-4efe-82a9-ea7189a32043
00:57:06.865 --> 00:57:11.780
going to be old 11111 which is F.

NOTE Confidence: 0.695878264444445

922ea7f5-12ea-420d-8697-21a50693728e
00:57:11.780 --> 00:57:13.156
1111 which is F.

NOTE Confidence: 0.695878264444445

ded20f80-054a-42a1-ae71-3841108f7a2b
00:57:13.156 --> 00:57:14.876
This is a lower order.

NOTE Confidence: 0.695878264444445

c6ffacea-9b86-4067-bab4-f16b84030049
00:57:14.880 --> 00:57:16.620
Also the higher order by

NOTE Confidence: 0.695878264444445

58c20074-45a7-4059-8034-1d4ad4da889c
00:57:16.620 --> 00:57:18.360
the same from the zero,

NOTE Confidence: 0.695878264444445

c266cc72-4537-41fc-b60b-e85b0a204e9a
00:57:18.360 --> 00:57:20.154
the minimum value up until all

NOTE Confidence: 0.695878264444445

4f981fe5-765e-4d4f-b5cc-a0851a99ab9d
00:57:20.154 --> 00:57:22.469
or one or FF in hexadecimal.

NOTE Confidence: 0.806937826

3a3e5f68-5f8e-4bd6-ba19-b0dc32faf930
00:57:26.660 --> 00:57:30.720
So now if the parent.

NOTE Confidence: 0.806937826

541a01ca-a114-4c05-bcad-17e4752d7a9c
00:57:30.720 --> 00:57:33.738
Receive a wants to receive the

NOTE Confidence: 0.806937826

c95d43b7-240e-46ba-a4e2-2b3446fb12f4
00:57:33.738 --> 00:57:35.750
communication by the child.

NOTE Confidence: 0.806937826

4679ee77-3ac3-4c1c-ae4e-805732f6d4af
00:57:35.750 --> 00:57:37.605
How to interpret the communication

NOTE Confidence: 0.806937826

5ace05f8-2f53-4864-b503-aba2b2af0dad
00:57:37.605 --> 00:57:40.112
by the child? How to interpret

NOTE Confidence: 0.806937826

31419e47-71c8-4b63-abfb-b662e1bf0d37
00:57:40.112 --> 00:57:43.360
what the child says to the parent.

NOTE Confidence: 0.806937826

794524f7-b21d-4437-8739-42a72bd1e5f2
00:57:43.360 --> 00:57:47.550
Ah, the. Operating system the

NOTE Confidence: 0.806937826

7b3b0743-58cf-4390-8277-6299c90f9975
00:57:47.550 --> 00:57:50.902
kernel provides some macros.

NOTE Confidence: 0.806937826

88cf527b-c15c-43e5-8f13-07296bba8edd
00:57:50.910 --> 00:57:55.158
To interpret the result of the child the

NOTE Confidence: 0.806937826

4facc890-026f-47fe-b132-12c2768096de
00:57:55.158 --> 00:57:59.227
the whatever the child says to the parent.

NOTE Confidence: 0.806937826

52f77200-ea51-4311-9b0d-5e8f196d4189
00:57:59.230 --> 00:58:02.608
So just for the sake of

NOTE Confidence: 0.806937826

b7ff6556-fb3a-43a3-8969-ccadbfbad06f
00:58:02.610 --> 00:58:04.190
telling what are these macros?

NOTE Confidence: 0.806937826

7b21aed9-8c16-4fde-9b82-62e3f0119bda
00:58:04.190 --> 00:58:07.214
I mean actually I try to figure

NOTE Confidence: 0.806937826

e54221fa-69a3-438b-8a78-0e584daaf9e6
00:58:07.214 --> 00:58:10.760
out what is this stands for W IF.

NOTE Confidence: 0.806937826

2a385a24-77de-4b57-abb5-8aafbfc27754
00:58:10.760 --> 00:58:12.020
You could say that,

NOTE Confidence: 0.806937826

ab57eff4-882d-443e-a299-8d4d7d0092b4
00:58:12.020 --> 00:58:17.999
wait if or we could say that, uh, what if?

NOTE Confidence: 0.806937826

927b253b-423b-46dc-a1e5-3b8a37ba938b
00:58:18.000 --> 00:58:22.288
So either wait if.

NOTE Confidence: 0.806937826

e11a2396-7602-4579-90f9-8ee8887b47c3
00:58:22.290 --> 00:58:23.958
Or what if?

NOTE Confidence: 0.815985833

324cd9f8-7376-4c4a-ae15-b14f6788f198
00:58:26.060 --> 00:58:27.915
So basically this is a

NOTE Confidence: 0.815985833

e675d1b0-6678-495e-92de-2327d20bfb21
00:58:27.915 --> 00:58:29.770
macro says that what if?

NOTE Confidence: 0.690840972222222

be3097e8-0dbc-49fe-8c13-ffb8cddcdba3
00:58:32.240 --> 00:58:34.103
The statuses exited,

NOTE Confidence: 0.690840972222222

8854875c-60cb-42de-a072-36d50a8df3c9
00:58:34.103 --> 00:58:37.829
it just checked out whether this.

NOTE Confidence: 0.690840972222222

505e30fc-0588-4351-b6a4-3e866af16ede
00:58:37.830 --> 00:58:41.624
Value is status to those two bytes.

NOTE Confidence: 0.690840972222222

fe8c0a74-9f88-4bc9-ba94-4219893ed30b
00:58:41.630 --> 00:58:45.284
Can be interpreted as exited or not.

NOTE Confidence: 0.690840972222222

548f463b-fbb7-4f22-ba8c-0f5770c9ecf0
00:58:45.290 --> 00:58:48.434
So it is true if the child basically

NOTE Confidence: 0.690840972222222

bd4fea28-5230-4672-b458-ad52086d326e
00:58:48.434 --> 00:58:51.190
says that I terminated normally.

NOTE Confidence: 0.690840972222222

edca9c39-9e5b-4bd4-85e5-adb87262f88d
00:58:51.190 --> 00:58:56.700
So if the child passes the zero value exit 0.

NOTE Confidence: 0.690840972222222

70df9a86-5935-4046-9abc-98f376c3c901
00:58:56.700 --> 00:58:59.418
This status is going to be

NOTE Confidence: 0.690840972222222

9914787c-400e-4960-bfa4-5abf55f11ce4
00:58:59.418 --> 00:59:01.230
interpreted as exited normally,

NOTE Confidence: 0.690840972222222

8489f57d-bc25-47c0-8719-26ff55cb6ff5
00:59:01.230 --> 00:59:05.091
and if you want to see the exact value

NOTE Confidence: 0.690840972222222

498411e5-3411-44e6-999c-f49ddf5b97c2
00:59:05.091 --> 00:59:08.400
of exact value that the child passes.

NOTE Confidence: 0.690840972222222

aa200183-f83d-47fa-83c4-42c2a5e16ce3
00:59:08.400 --> 00:59:11.430
You can run another macro.

NOTE Confidence: 0.690840972222222

9a612716-dcc7-4268-91f7-a5bbfc02304b
00:59:11.430 --> 00:59:16.081
Uh. A W exit status which

NOTE Confidence: 0.690840972222222

5902dbf9-56ac-49ce-9db8-a4bc2f9e1992
00:59:16.081 --> 00:59:18.286
gives you the status number.

NOTE Confidence: 0.690840972222222

c9eae884-e59d-4395-9230-a3353fa336b0
00:59:18.290 --> 00:59:20.155
I'm going to explain this

NOTE Confidence: 0.690840972222222

e1fd6219-6526-4085-9fbc-1428fc95b4f6
00:59:20.155 --> 00:59:22.570
more in the field next slide.

NOTE Confidence: 0.690840972222222

2e5e0dd2-61b3-49dd-abcd-cd3c85a9acc9
00:59:22.570 --> 00:59:25.295
If the child actually finishes

NOTE Confidence: 0.690840972222222

df578fd1-e4f8-43df-a1d4-ca53db5e3463
00:59:25.295 --> 00:59:28.020
abnormally without a normal execute,

NOTE Confidence: 0.690840972222222

a502c806-0045-40d6-8680-04b69ac2c7bd
00:59:28.020 --> 00:59:29.910
I mean termination,

NOTE Confidence: 0.690840972222222

72e8eb03-0fb4-4247-a894-f65c594a649f
00:59:29.910 --> 00:59:33.690
then this macros macro returns true.

NOTE Confidence: 0.690840972222222

e6ff0db0-9356-4de3-9af1-9a1964f42824
00:59:33.690 --> 00:59:36.374
So basically says that.

NOTE Confidence: 0.690840972222222

6f54007f-13f5-465b-b5ab-5311c47e5b99
00:59:36.374 --> 00:59:39.729
What if your child signaled?

NOTE Confidence: 0.690840972222222

7aeb0523-5ed4-4d88-8343-e9961a1fe38d
00:59:39.730 --> 00:59:43.820
And killed by some reason.

NOTE Confidence: 0.690840972222222

1c5aeda1-cbfb-4b52-b6c3-dad0a444c73a
00:59:43.820 --> 00:59:46.496
So then this macro returns true.

NOTE Confidence: 0.690840972222222

d685d991-08c9-4532-b7bf-ea73f53b6202
00:59:46.500 --> 00:59:50.332
And, uh, in order to see that, what signal?

NOTE Confidence: 0.690840972222222

6dd2033a-335d-481c-a5e7-045e39e8ed48
00:59:50.332 --> 00:59:53.076
Kills your child process.

NOTE Confidence: 0.690840972222222

988281f9-85d2-4796-a5d0-7197232382a4
00:59:53.080 --> 00:59:55.365
You can call another macro

NOTE Confidence: 0.690840972222222

3744e937-5b0d-495b-bdb7-02070918cad7
00:59:55.365 --> 00:59:57.650
to find the signal number.

NOTE Confidence: 0.690840972222222

5b2c2bf0-448b-42a0-b0e0-f2e5fffabc77
00:59:57.650 --> 00:59:59.456
I'm going to explain these more.

NOTE Confidence: 0.690840972222222

292ea761-db1a-473f-b146-6ce16c0cdfad
00:59:59.460 --> 01:00:01.469
I mean in the few next slide.

NOTE Confidence: 0.690840972222222

a4c3f6c3-052e-480d-a874-e1c0aa2ff963
01:00:01.470 --> 01:00:04.232
The same with this stop meaning that

NOTE Confidence: 0.690840972222222

f6f672b4-b43c-4003-bcff-d4a9006fbbf0
01:00:04.232 --> 01:00:06.689
your child processes stopped it.

NOTE Confidence: 0.690840972222222

2543b467-4975-4f19-a0e6-5d013a308631
01:00:06.689 --> 01:00:09.503
Stop continuing the opcodes and you

NOTE Confidence: 0.690840972222222

cc3e7457-5b67-428e-9de9-061028389149
01:00:09.503 --> 01:00:12.531
can figure out what signal makes

NOTE Confidence: 0.690840972222222

0bc7c3d7-02ac-47dd-bdd8-a1f0fec9d0be
01:00:12.531 --> 01:00:16.450
your child process stop and etc.

NOTE Confidence: 0.690840972222222

628c379b-39d1-4305-89cb-8f705bbb504d
01:00:16.450 --> 01:00:18.900
So what are these macros?

NOTE Confidence: 0.690840972222222

9566ebde-4395-4895-b90a-95dfa797f3c0
01:00:18.900 --> 01:00:22.078
So just a reminder from the C

NOTE Confidence: 0.690840972222222

635552e2-0af0-4cf7-82a4-dff92b8831c4
01:00:22.078 --> 01:00:25.534
program and macro is a preprocessing

NOTE Confidence: 0.690840972222222

d083655c-40b5-4fcf-a781-06f38b9996f6
01:00:25.534 --> 01:00:28.326
step of the compilation.

NOTE Confidence: 0.690840972222222

a7a39961-f34e-41e6-856b-e2977134946c
01:00:28.330 --> 01:00:33.055
Basically, uh, you can define a constant.

NOTE Confidence: 0.690840972222222

1c48e1a4-0016-4b1e-8fa0-d67470c51d45
01:00:33.060 --> 01:00:35.790
For instance, you can say that define.

NOTE Confidence: 0.690840972222222

918daa6b-cd53-41da-8df5-d430b562553b
01:00:35.790 --> 01:00:36.354
And.

NOTE Confidence: 0.690840972222222

6770eb57-550b-4808-8552-9764ab197ce1
01:00:36.354 --> 01:00:39.174
100 this means that before

NOTE Confidence: 0.690840972222222

1fd65d45-919d-4883-b2e5-4cbd0acfc667
01:00:39.174 --> 01:00:40.866
compiling your program,

NOTE Confidence: 0.690840972222222

b50825a7-cef1-4f36-8f2e-2173534e3ea6
01:00:40.870 --> 01:00:43.690
whenever the compiler sees the

NOTE Confidence: 0.690840972222222

8652cb86-bd7a-44a8-ae5e-b6d555716c86
01:00:43.690 --> 01:00:46.521
character and it exactly replace

NOTE Confidence: 0.690840972222222

c45f7e16-1dda-41ef-aa8f-ac93b40ea7f1
01:00:46.521 --> 01:00:49.342
it with the character 100.

NOTE Confidence: 0.690840972222222

33731043-5c0f-4b0a-8e8e-f25e78252263
01:00:49.342 --> 01:00:52.654
It's just a replace copy paste.

NOTE Confidence: 0.690840972222222

7199cd14-f85d-48c8-957a-ecb58a6de211
01:00:52.660 --> 01:00:55.390
Or copy replace.

NOTE Confidence: 0.690840972222222

f15844b8-a92a-4635-a000-89e20ac1d823
01:00:55.390 --> 01:00:58.120
Of the characters.

NOTE Confidence: 0.690840972222222

51ff70be-3feb-4c6d-8aba-02b788ea49ab
01:00:58.120 --> 01:01:00.982
One way to one smart way to use the

NOTE Confidence: 0.690840972222222

f6e5b53e-6bb2-42ee-9086-0ddc549eb401
01:01:00.982 --> 01:01:03.657
macros is that writing as a function.

NOTE Confidence: 0.690840972222222

9082fcf0-a22c-427b-9e57-b4d2c340c69a
01:01:03.660 --> 01:01:06.468
Uh, for instance, this is a function Max.

NOTE Confidence: 0.690840972222222

cf077eb5-8a4d-4d59-b1ca-f04c67ad0e4b
01:01:06.470 --> 01:01:08.214
The catalyst in maximum

NOTE Confidence: 0.690840972222222

ca6a7425-29df-4365-8f3f-d434f6815c13
01:01:08.214 --> 01:01:10.830
of two numbers X and one.

NOTE Confidence: 0.690840972222222

c2c281bb-0f8d-46b1-bde3-eb6fb0a9ed26
01:01:10.830 --> 01:01:12.648
So this is not a function,

NOTE Confidence: 0.690840972222222

3ec13b89-9164-4119-b5fe-272c3fbe5e4e
01:01:12.650 --> 01:01:16.088
it's a macro, meaning that wherever

NOTE Confidence: 0.690840972222222

af422dbf-2e85-42fc-8885-7ac1b2fa0a8c
01:01:16.088 --> 01:01:19.262
you use these characters and AXXY,

NOTE Confidence: 0.690840972222222

080b26af-5418-452b-b5bc-081b7e0495f7
01:01:19.262 --> 01:01:22.214
it's going to be replaced by

NOTE Confidence: 0.690840972222222

1b664f99-50a1-4d30-a081-1c02c2ad113a
01:01:22.214 --> 01:01:24.315
this sequence of characters.

NOTE Confidence: 0.690840972222222

f9b77e50-5116-4bd3-b786-70b7f0c70514
01:01:24.315 --> 01:01:28.060
So it's just a replacements of comments.

NOTE Confidence: 0.690840972222222

4e582ede-df71-4d3c-a241-fd4897eaf133
01:01:28.060 --> 01:01:30.340
Or statement in C program.

NOTE Confidence: 0.690840972222222

f914a99d-d57c-4df7-9ce5-c9f22963dc43
01:01:30.340 --> 01:01:32.140
So for instance,

NOTE Confidence: 0.690840972222222

6f58bf8e-acb9-4243-a735-8abaf2d9ad50
01:01:32.140 --> 01:01:35.140
here this program before compiling.

NOTE Confidence: 0.690840972222222

5980face-711b-4c6b-9954-fc9a26f914f1
01:01:35.140 --> 01:01:39.970
The compiler search for this characters.

NOTE Confidence: 0.690840972222222

03f63755-9e91-489f-8d22-f580f23be852
01:01:39.970 --> 01:01:44.970
Max and then it sees as the as the XY

NOTE Confidence: 0.690840972222222

615e75af-118c-4617-9eef-b96ae94872f3
01:01:44.970 --> 01:01:48.330
as the P and it replaces these sequence

NOTE Confidence: 0.690840972222222

49ed0ca0-7ce9-474e-97ac-cf361c55a187
01:01:48.330 --> 01:01:52.218
of characters inside your program code.

NOTE Confidence: 0.690840972222222

8c809f63-a773-4838-8c3b-249d2ffda10d
01:01:52.220 --> 01:01:54.090
Like this?

NOTE Confidence: 0.690840972222222

184c405c-0aa0-46a0-961d-d5be4aa398c9
01:01:54.090 --> 01:01:56.694
So it's not inside the opcode inside.

NOTE Confidence: 0.690840972222222

b4f8fee1-aa65-483c-bd95-62e783be6335
01:01:56.700 --> 01:01:58.930
It's not inside the memory,

NOTE Confidence: 0.690840972222222

189f0444-455e-41cd-ab67-468f188f9b81
01:01:58.930 --> 01:02:03.118
it is inside the program file.

NOTE Confidence: 0.690840972222222

4f422647-50c7-40ed-876b-cc021aa9c925
01:02:03.120 --> 01:02:06.006
So before the compilation it happens,

NOTE Confidence: 0.690840972222222

8c7aa575-a967-477d-a13c-4df13b8f2faf
01:02:06.010 --> 01:02:08.780
so these are called macros.

NOTE Confidence: 0.690840972222222

447f8f4c-7d32-410a-9141-0aeb14f1f51b
01:02:08.780 --> 01:02:10.748
You can read more in in

NOTE Confidence: 0.690840972222222

67029c0b-1271-4a36-89e9-e42b3bcf0d7a
01:02:10.750 --> 01:02:13.390
references for C program.

NOTE Confidence: 0.690840972222222

9062716c-de66-4612-9887-562f2f6fd054
01:02:13.390 --> 01:02:13.890
So.

NOTE Confidence: 0.690840972222222

f51f2c48-c971-48cc-beb5-c862db640b78
01:02:13.890 --> 01:02:16.390
Why the macros are important?

NOTE Confidence: 0.690840972222222

36aa52a8-6d78-4d3d-a364-fc6d69ba35b8
01:02:16.390 --> 01:02:17.946
Because they are interpreting

NOTE Confidence: 0.690840972222222

ae58850b-5045-4d02-bb93-54efc51ffff3
01:02:17.946 --> 01:02:20.280
the communication by the child at

NOTE Confidence: 0.690840972222222

8da3313c-730c-4e02-a819-464875398db3
01:02:20.346 --> 01:02:22.196
the time of their termination.

NOTE Confidence: 0.690840972222222

a4f47fb0-c38a-413d-836e-418e1b8736c6
01:02:22.200 --> 01:02:25.370
The operating system provides macros,

NOTE Confidence: 0.690840972222222

7d5cebad-e425-44e0-a0c4-1b3382397fcb
01:02:25.370 --> 01:02:27.770
not functions.

NOTE Confidence: 0.690840972222222

b1fc9dfc-f1f5-412b-8e27-f1e2ea30a59c
01:02:27.770 --> 01:02:30.130
So if you want to exactly see the

NOTE Confidence: 0.690840972222222

624419af-233d-4e2f-b263-fada1ea6266a
01:02:30.130 --> 01:02:31.540
implementation of these macros,

NOTE Confidence: 0.690840972222222

a6f55035-3b9b-4f72-95cf-96eeaf8ead22
01:02:31.540 --> 01:02:33.563
you can go to these links and

NOTE Confidence: 0.690840972222222

0d5c746d-afcb-490a-8ebf-d21e3783d3cd
01:02:33.563 --> 01:02:35.189
then come to this link.

NOTE Confidence: 0.690840972222222

3b766d04-05d4-4d34-aa40-28d7df58dcb7
01:02:35.190 --> 01:02:37.185
In this thing you can find the

NOTE Confidence: 0.690840972222222

b4a159aa-b635-41ce-bf88-79114349eee3
01:02:37.185 --> 01:02:40.350
exact implementation of the macros.

NOTE Confidence: 0.690840972222222

cd510920-8ba4-4009-8304-256eca07e246
01:02:40.350 --> 01:02:42.744
So I just put here for the

NOTE Confidence: 0.690840972222222

f0a64184-7849-4897-b29e-d82a3dc8c183
01:02:42.744 --> 01:02:43.770
success exit success.

NOTE Confidence: 0.85659413

d7f089d5-e4ea-4180-8097-d0e1e8a186dd
01:02:43.770 --> 01:02:46.858
So what happens when the child wants to

NOTE Confidence: 0.85659413

89fc5940-c840-4ac2-91e2-c725aea8ad9d
01:02:46.858 --> 01:02:50.460
tell the parent that I exited successfully?

NOTE Confidence: 0.85659413

b597f433-3c1d-4a64-8b02-496cde5de011
01:02:50.460 --> 01:02:55.885
So you can call the uh, this uh macro,

NOTE Confidence: 0.85659413

806f393e-b394-4f17-999c-a0d167a00c78
01:02:55.885 --> 01:02:59.260
so forget about these underlines.

NOTE Confidence: 0.780776770416667

64c6bbd3-9e00-4e61-9b00-9dfcaa861cc5
01:03:01.710 --> 01:03:05.150
So basically you can call the macro what

NOTE Confidence: 0.780776770416667

890355cd-9fce-4013-ab61-bdb96ee33334
01:03:05.150 --> 01:03:08.992
if existed and then pass the value of that

NOTE Confidence: 0.780776770416667

c28926f4-31d2-49aa-8dcf-7fe7b6377480
01:03:08.992 --> 01:03:12.178
location that you provide to the kernel.

NOTE Confidence: 0.780776770416667

7fac3f91-5c2c-495e-80c9-22af11f1541c
01:03:12.180 --> 01:03:15.617
And it returns. It replaced by this

NOTE Confidence: 0.780776770416667

ac26d409-2e73-49e3-bebd-cde0dd8945ff
01:03:15.617 --> 01:03:17.500
statement basically checks whether

NOTE Confidence: 0.780776770416667

aeb6f96f-17b7-4ee4-86a0-eb7f0c6b205b
01:03:17.500 --> 01:03:21.050
it is zero or no, but what is 0?

NOTE Confidence: 0.780776770416667

e20b9810-98b3-40c7-9cd3-d15a0454b173
01:03:21.050 --> 01:03:23.425
So it costs another macro

NOTE Confidence: 0.780776770416667

775d7f2f-9193-43ba-96d5-a52175e317ba
01:03:23.425 --> 01:03:26.057
and this macro is here.

NOTE Confidence: 0.780776770416667

ce3c11b6-e5d9-4ed6-85ef-e183802fdd76
01:03:26.060 --> 01:03:28.010
What termination signal?

NOTE Confidence: 0.780776770416667

809acd2a-d5ed-48da-bccd-8b176fbb7a1b
01:03:28.010 --> 01:03:31.260
So what is the macro?

NOTE Confidence: 0.780776770416667

c7f85454-c8b8-467e-a36c-64ceba2818ec
01:03:31.260 --> 01:03:32.949
What termination signal?

NOTE Confidence: 0.780776770416667

93a6fcb8-8ea4-451f-8d45-e3a0a9717571
01:03:32.949 --> 01:03:35.201
Basically it applies on

NOTE Confidence: 0.780776770416667

56e5a3f8-2c22-4abe-a6ac-c8f635c4733f
01:03:35.201 --> 01:03:37.510
the same status bytes.

NOTE Confidence: 0.780776770416667

32793356-d03d-4ab3-95a6-44a0870c20a2
01:03:37.510 --> 01:03:43.318
But here it does A and with a number.

NOTE Confidence: 0.780776770416667

34de12a8-b036-48a3-beb0-e58af391467d
01:03:43.320 --> 01:03:46.759
So this is called masking a.

NOTE Confidence: 0.780776770416667

a117c164-983d-4370-8d9e-179b66ff6e47
01:03:46.759 --> 01:03:48.354
I just wanted to explain

NOTE Confidence: 0.780776770416667

a0a76b18-173a-4dce-abde-0627a5a70ba9
01:03:48.354 --> 01:03:51.970
this a little bit more. So.

NOTE Confidence: 0.780776770416667

49c581ff-83f0-4232-9b9a-a4527b4b452f
01:03:51.970 --> 01:03:55.966
The status bytes these blue and

NOTE Confidence: 0.780776770416667

e3f033b0-80db-4a2c-9015-eb6ac26110f1
01:03:55.966 --> 01:03:59.620
red cells are provided by the.

NOTE Confidence: 0.780776770416667

858639cf-2572-463d-8f9a-002ebdfc012f
01:03:59.620 --> 01:04:03.232
Child if you want to see what

NOTE Confidence: 0.780776770416667

b8d18707-33c4-41e7-b5b9-ace9e1539989
01:04:03.232 --> 01:04:05.750
all these but orbits.

NOTE Confidence: 0.780776770416667

8d78104e-22d1-43a4-8f4f-3b967d10f25c
01:04:05.750 --> 01:04:07.434
You can use masking,

NOTE Confidence: 0.780776770416667

7b48687c-b15b-4536-ab92-4fc158a8acbd
01:04:07.434 --> 01:04:09.960
meaning that you are ending with

NOTE Confidence: 0.780776770416667

0bcd7b41-e917-4bd0-a75d-ef628eb80137
01:04:10.040 --> 01:04:12.145
the specific numbers in order

NOTE Confidence: 0.780776770416667

208eee18-21de-4905-9c53-7c1435fd7990
01:04:12.145 --> 01:04:14.687
to figure out that what bits

NOTE Confidence: 0.780776770416667

99621f07-f91a-49d6-b814-3566be1bb519
01:04:14.687 --> 01:04:17.186
are one and what bits are zero.

NOTE Confidence: 0.780776770416667

8cc18d00-1240-426a-8409-0016824979ec
01:04:17.190 --> 01:04:18.538
So for this case,

NOTE Confidence: 0.780776770416667

604b4693-57fe-463f-9bc9-c32c1c4c01cf
01:04:18.538 --> 01:04:21.045
in order to see that whether the

NOTE Confidence: 0.780776770416667

9f12475d-29eb-4697-af60-1c946d0040d1
01:04:21.045 --> 01:04:23.463
the two parts are interpreted can

NOTE Confidence: 0.780776770416667

21693bac-ad77-467f-9e2a-be386b677179
01:04:23.463 --> 01:04:25.928
be interpreted as a success exist.

NOTE Confidence: 0.780776770416667

631073da-d970-438b-8465-9f9740729fbd
01:04:25.930 --> 01:04:28.190
Here is what happens.

NOTE Confidence: 0.780776770416667

863efcca-d648-4401-b6ee-8264d9a75099
01:04:28.190 --> 01:04:33.226
Basically it ends the uh, lower Boyd.

NOTE Confidence: 0.780776770416667

195d1feb-d81d-4273-8a29-3b95cd2ec75b
01:04:33.226 --> 01:04:38.230
With these numbers 7F, so this is the seven.

NOTE Confidence: 0.780776770416667

cc12db86-6aad-40c1-acdb-f8baa40e8b9f
01:04:38.230 --> 01:04:39.360
And this is the app.

NOTE Confidence: 0.779520021428571

dbbb58f5-1c81-4db2-aad8-d21fed81e139
01:04:41.470 --> 01:04:43.810
And then, uh, we already said

NOTE Confidence: 0.779520021428571

59297d59-98b6-4614-a092-740af55049d8
01:04:43.810 --> 01:04:45.172
that you already know that.

NOTE Confidence: 0.779520021428571

37f98ec2-1213-458c-bc40-0440f350e049
01:04:45.172 --> 01:04:47.441
If you add zeros to the left side of

NOTE Confidence: 0.779520021428571

9572a82c-218d-497c-8ea8-2489371c7dc3
01:04:47.441 --> 01:04:49.670
any number, it doesn't have any impact,

NOTE Confidence: 0.779520021428571

cd9e5371-a86c-42c4-a67e-ccda2b58c224
01:04:49.670 --> 01:04:51.974
so it fills out or pass the left

NOTE Confidence: 0.779520021428571

2f9426ff-867c-4356-87fb-5a3822110e2c
01:04:51.974 --> 01:04:54.209
side of the number with zeros.

NOTE Confidence: 0.779520021428571

e413a423-2635-40ea-9478-757a3b1eb8a3
01:04:54.210 --> 01:04:57.516
So this is the this number.

NOTE Confidence: 0.779520021428571

66934171-1ca5-4ebf-b306-c78b7a830b85
01:04:57.520 --> 01:05:01.296
Or the mask? We add this number with

NOTE Confidence: 0.779520021428571

04d6f73c-ae41-45cf-9f10-653791d15036
01:05:01.296 --> 01:05:04.750
the actual two parts of the status.

NOTE Confidence: 0.779520021428571

d5001cdf-fcb1-43b2-ba2c-9993e88a4347
01:05:04.750 --> 01:05:07.030
So what happens is this.

NOTE Confidence: 0.779520021428571

317edad9-5d29-4c8c-b2af-3378d5ce62f3
01:05:07.030 --> 01:05:08.998
Inside the status bits,

NOTE Confidence: 0.779520021428571

a2234403-9394-4e33-87eb-339cf80b99d9
01:05:08.998 --> 01:05:13.727
any bits and with the zero end up with zero.

NOTE Confidence: 0.779520021428571

4e5b522a-2318-4248-b73b-25b383a416a1
01:05:13.730 --> 01:05:16.030
So here whatever you have

NOTE Confidence: 0.779520021428571

8c4b961c-ec79-47bb-b768-594b76a587fb
01:05:16.030 --> 01:05:17.410
here doesn't matter.

NOTE Confidence: 0.779520021428571

b727f26f-7bb0-4fc4-970a-1023be24bdf8
01:05:17.410 --> 01:05:19.218
The result of the Ant gonna be 0.

NOTE Confidence: 0.73397505

854c5aeb-1de4-4191-89b0-230f4d4211cd
01:05:24.170 --> 01:05:26.274
However. Found the logic.

NOTE Confidence: 0.73397505

1918a780-a34c-485f-8393-18ddb7703ca9
01:05:26.274 --> 01:05:30.280
We know that anything and with the one.

NOTE Confidence: 0.73397505

56086226-ff28-478e-ab5c-d2301ef4b11d
01:05:30.280 --> 01:05:32.428
Depends on that bit.

NOTE Confidence: 0.73397505

dc0ac2c7-5c20-4631-bbf1-e7a466bf0cf4
01:05:32.428 --> 01:05:36.550
So we don't know the answer so one.

NOTE Confidence: 0.73397505

1b4d7d2e-e1ad-417a-be8b-0a0b4e32dd38
01:05:36.550 --> 01:05:39.430
X If the here is the value of X,

NOTE Confidence: 0.73397505

59b639c5-439c-407d-8d68-677f8ec68bce
01:05:39.430 --> 01:05:42.452
we have to wait for the X1 and

NOTE Confidence: 0.73397505

14204fd8-c285-4a1e-999b-c41917c4e06b
01:05:42.452 --> 01:05:45.070
with X we have to wait for the X.

NOTE Confidence: 0.73397505

0132ea54-9ed4-4154-9378-6e0b5941edd5
01:05:45.070 --> 01:05:48.838
So basically for all these bits.

NOTE Confidence: 0.73397505

c3722536-4be7-4493-ae90-8286c6e7c9ec
01:05:48.840 --> 01:05:50.954
We have the value of the child,

NOTE Confidence: 0.73397505

e31fa9c3-cd3d-4cca-8ea9-eda15cec87d0
01:05:50.960 --> 01:05:53.424
but for all the other bits we

NOTE Confidence: 0.73397505

98252d53-bc7a-44bd-9d0d-60e8ffad1122
01:05:53.424 --> 01:05:56.429
have to we have the values here.

NOTE Confidence: 0.73397505

13075ec6-dc2c-488c-a32e-d721a829fb59
01:05:56.430 --> 01:06:01.038
So this means that so this is the checking

NOTE Confidence: 0.73397505

a0fdad50-29c3-46ad-a70a-ad163f2710fe
01:06:01.038 --> 01:06:05.199
by the what termination signal is?

NOTE Confidence: 0.73397505

84e36a4a-3bf2-4376-a84d-81f4711e74d4
01:06:05.200 --> 01:06:07.168
So when this happens,

NOTE Confidence: 0.73397505

0b1eb735-df9f-4644-9a31-78acce8aee6c
01:06:07.168 --> 01:06:10.120
this ends happens all the upper.

NOTE Confidence: 0.73397505

c642dd3e-547b-44cc-9bc9-e788a258554e
01:06:10.120 --> 01:06:11.494
Part becomes zero,

NOTE Confidence: 0.73397505

d377a56a-6682-47e3-ad52-fb1f68374d4d
01:06:11.494 --> 01:06:13.784
the lower part becomes X.

NOTE Confidence: 0.73397505

71d878ea-8d2d-4f18-b78b-38472320275a
01:06:13.790 --> 01:06:16.646
And. This is a macro,

NOTE Confidence: 0.73397505

a10c5281-b046-4350-9c33-789e9f88c7ef
01:06:16.646 --> 01:06:18.650
so it's going to be replaced.

NOTE Confidence: 0.619408213333333

0fb62cd9-4e2e-465d-9498-1bb2705bd928
01:06:21.860 --> 01:06:24.920
With this command.

NOTE Confidence: 0.619408213333333

ec2ad1e6-4499-4862-8937-230b20217ffd
01:06:24.920 --> 01:06:27.490
So let me just, uh, clear it.

NOTE Confidence: 0.898364355

b12a9f15-2640-46d4-8a1f-bf135c2c5654
01:06:30.200 --> 01:06:34.178
So basically this. Going to be

NOTE Confidence: 0.898364355

62744947-def7-4ed1-b74d-cfe402598d74
01:06:34.178 --> 01:06:36.830
replaced exactly comes here.

NOTE Confidence: 0.898364355

3c7d4531-5b81-4836-b9c5-535ab01428eb
01:06:36.830 --> 01:06:40.736
So we gonna end up with

NOTE Confidence: 0.898364355

82f723b3-b037-41ba-b914-7dab4197ea2a
01:06:40.736 --> 01:06:43.050
this statement. This status.

NOTE Confidence: 0.6862967

de21972b-8d25-4cfc-aa85-792248399ca6
01:06:45.130 --> 01:06:45.720
And

NOTE Confidence: 0.38242894

0e597202-b2c3-4e68-8e5a-f0e43306754f
01:06:47.890 --> 01:06:48.200
0X7F.

NOTE Confidence: 0.70236935

c91d0ae2-fdc4-47e1-af8e-93ba7ed9f466
01:06:50.630 --> 01:06:53.279
Equal to. 0.

NOTE Confidence: 0.917726358

7d455030-cb1f-47e5-ad10-0f72e4b65bd3
01:06:56.210 --> 01:06:59.724
So if we do this, we already

NOTE Confidence: 0.917726358

cd184793-9eb8-41ae-8717-6c8bb21bc516
01:06:59.724 --> 01:07:03.798
know that the higher byte RO 0.

NOTE Confidence: 0.917726358

94e59822-362c-4dae-a6a2-ef89fd91980e
01:07:03.800 --> 01:07:07.112
And the lower byte is dependent on the X.

NOTE Confidence: 0.714783516666667

232c536c-0014-4e64-a996-cadacc1bb4b6
01:07:09.340 --> 01:07:13.990
If the child passes exit success,

NOTE Confidence: 0.714783516666667

8f9e36fe-07e2-4344-958f-74daea8bbf48
01:07:13.990 --> 01:07:16.800
it passes the number 0.

NOTE Confidence: 0.714783516666667

561e228b-6a61-4cc4-8372-6aee95479374
01:07:16.800 --> 01:07:20.288
As a result, all these bits are zero.

NOTE Confidence: 0.585978098888889

5367bf1b-877e-4fac-8919-996e9156afe5
01:07:22.350 --> 01:07:25.968
And one and with zero these access becomes 0.

NOTE Confidence: 0.786633320909091

e2d66543-9c06-404b-b0f4-bc47a4f46543
01:07:29.570 --> 01:07:32.125
So then this end is 0 which

NOTE Confidence: 0.786633320909091

b45a356f-009f-4f50-93d3-c94c5f82c8f6
01:07:32.125 --> 01:07:34.375
is equal to zero, which.

NOTE Confidence: 0.786633320909091

907ea4c6-0528-4aa5-a43f-304a4ceea9cf
01:07:34.375 --> 01:07:39.640
Says that the result of this macro is zero.

NOTE Confidence: 0.786633320909091

81cd15e0-c369-4a55-b856-2d2692da7a91
01:07:39.640 --> 01:07:43.749
That's why if the what if exited

NOTE Confidence: 0.786633320909091

614f41a2-87d1-43b0-a6dd-cf7cc8d1fe2a
01:07:43.749 --> 01:07:46.646
status returns true, meaning that.

NOTE Confidence: 0.786633320909091

6e4861cb-ad8b-4823-98a1-ce31f0e3aaba
01:07:46.646 --> 01:07:49.486
All the bits of the.

NOTE Confidence: 0.730770035714286

96bf5157-cd0a-458e-81ad-96d871eaec45
01:07:52.160 --> 01:07:54.120
The result of this macro is zero.

NOTE Confidence: 0.730770035714286

7af74ede-d679-48e9-900e-7966eb8fe5de
01:07:54.120 --> 01:07:56.075
I mean all the lower

NOTE Confidence: 0.730770035714286

16f8c23d-4463-46e7-baef-06de5bb24342
01:07:56.075 --> 01:07:59.930
bytes of the status is 0.

NOTE Confidence: 0.730770035714286

c6f0b4ed-c63a-4bd2-b2e5-d727d9eabeea
01:07:59.930 --> 01:08:02.642
But we are not sure about the higher

NOTE Confidence: 0.730770035714286

c78652dc-81da-4709-8734-babfb8d669f4
01:08:02.642 --> 01:08:04.878
bytes because we add them with zero.

NOTE Confidence: 0.730770035714286

9e5207fb-df68-43d5-8ef6-4c467690cbe8
01:08:04.880 --> 01:08:07.015
We don't know whether the value of

NOTE Confidence: 0.730770035714286

cc25445c-1a04-4185-85a8-cf4818f5aebc
01:08:07.015 --> 01:08:09.070
the higher bites, but for the lower.

NOTE Confidence: 0.730770035714286

6b324d74-bf68-4663-84d5-69fbc3d87b3f
01:08:09.070 --> 01:08:11.513
But we make sure we are sure that

NOTE Confidence: 0.730770035714286

ca3c5038-0972-4b58-90a6-4215834d7297
01:08:11.513 --> 01:08:13.499
the child sends us zero bits.

NOTE Confidence: 0.817149133333333

a2403641-73cd-4779-89dc-4ad15a3890af
01:08:16.210 --> 01:08:18.714
And if we want to see that what

NOTE Confidence: 0.817149133333333

fbb2ca12-1d18-4e29-a17b-808abb58ce9d
01:08:18.714 --> 01:08:21.598
are the values of the higher voids?

NOTE Confidence: 0.817149133333333

e24c451f-1756-4bd3-b23d-680ac7473288
01:08:21.600 --> 01:08:23.700
Here is the macro for.

NOTE Confidence: 0.817149133333333

a850faab-226e-4072-abcb-c104cd298b88
01:08:23.700 --> 01:08:28.828
See the exact status number of the child.

NOTE Confidence: 0.817149133333333

8c86c26f-53fa-4416-be87-671b28085018
01:08:28.830 --> 01:08:31.880
What if exit the status?

NOTE Confidence: 0.817149133333333

0a6a614e-6f4b-470e-9745-daec6458c75a
01:08:31.880 --> 01:08:35.205
So basically it says that now and

NOTE Confidence: 0.817149133333333

00243b15-48aa-491b-8937-b67710632a4f
01:08:35.205 --> 01:08:38.374
this will be FF00, meaning that I

NOTE Confidence: 0.817149133333333

54b1a5aa-d58f-4c5c-b720-709a42976eff
01:08:38.374 --> 01:08:40.990
don't care about the lower boys.

NOTE Confidence: 0.817149133333333

ddb67dd2-7203-4024-b85b-abd3a8452a40
01:08:40.990 --> 01:08:42.510
Because I already know that

NOTE Confidence: 0.817149133333333

3c5e28c0-6d68-4e87-8c8a-3e4de4307ee8
01:08:42.510 --> 01:08:43.726
these are all zero,

NOTE Confidence: 0.817149133333333

2bd25791-a0f5-4fe3-8c66-d278c64f6070
01:08:43.730 --> 01:08:45.506
but I want to see what are the

NOTE Confidence: 0.817149133333333

9055cfb1-6bbf-4998-8c0c-5c3a6608807c
01:08:45.506 --> 01:08:46.980
value of the higher bytes.

NOTE Confidence: 0.817149133333333

0c206547-a592-4c14-b215-9e5a0a60db4d
01:08:46.980 --> 01:08:49.836
So I added with one anything and

NOTE Confidence: 0.817149133333333

c982ae30-05ac-45a3-b0f3-913113ee27dc
01:08:49.836 --> 01:08:52.043
with one returns whatever value

NOTE Confidence: 0.817149133333333

2bdf43bd-cd5c-432c-933a-0862bb00a9b3
01:08:52.043 --> 01:08:54.809
which is passed by the child.

NOTE Confidence: 0.817149133333333

fc8e53bf-cf79-4fcc-88c5-c9dee5eedefd
01:08:54.810 --> 01:09:00.240
And then it does 8 bit shifts to the right.

NOTE Confidence: 0.817149133333333

6a8a7ff5-b56d-4930-8e39-d2e3232b3652
01:09:00.240 --> 01:09:03.568
So as a result, all these eight bits.

NOTE Confidence: 0.817149133333333

3e7a969b-2aab-44b3-9d7b-d9d250a3dee2
01:09:03.570 --> 01:09:07.446
Gonna go to the right side.

NOTE Confidence: 0.817149133333333

cb798f21-36dd-4d03-b56e-af569d890ddb
01:09:07.450 --> 01:09:08.938
And then it returns.

NOTE Confidence: 0.786126684761905

b00fbf6a-f64b-46a3-96c0-769a5047de22
01:09:12.160 --> 01:09:14.712
So this way you can see what are

NOTE Confidence: 0.786126684761905

729e922c-db97-4138-87cd-282c201164c8
01:09:14.712 --> 01:09:16.788
the values of the higher bytes

NOTE Confidence: 0.786126684761905

a01f36ff-d5c6-442a-afad-babda7b96d1f
01:09:16.788 --> 01:09:19.430
passed by the child to the parent.

NOTE Confidence: 0.741804343333333

a7964fc0-25f6-4e13-863d-2b49de2de843
01:09:21.920 --> 01:09:24.866
And here is a example code.

NOTE Confidence: 0.741804343333333

79627905-df75-4c4f-a86c-47581121b140
01:09:24.870 --> 01:09:27.811
So right after the weight call you

NOTE Confidence: 0.741804343333333

81193aa1-4cdb-4ab9-957f-fcd3bf342b03
01:09:27.811 --> 01:09:30.457
can say that whether the exists

NOTE Confidence: 0.741804343333333

61181b4e-ea25-4441-a75f-3b42686c9fd2
01:09:30.457 --> 01:09:32.540
interpretation of this status is

NOTE Confidence: 0.741804343333333

dc9e8d4c-7fab-4793-9938-2206dfa131fa
01:09:32.540 --> 01:09:36.058
normal execution or abnormal exit.

NOTE Confidence: 0.741804343333333

6e7709ea-81f8-48a7-b97a-32e6f455c1b5
01:09:36.058 --> 01:09:38.970
And if it is a normal exam,

NOTE Confidence: 0.741804343333333

26a29684-0592-455e-8cb1-4eecfc58c0e7
01:09:38.970 --> 01:09:43.083
you can see what are the higher order bite.

NOTE Confidence: 0.741804343333333

c9c6f761-0d92-4eaf-bfa2-cdfdf6227440
01:09:43.090 --> 01:09:44.610
And if it is abnormal,

NOTE Confidence: 0.741804343333333

0e94199a-674a-4daa-9cdb-cb4f2eb49fa3
01:09:44.610 --> 01:09:46.710
you can see what is this

NOTE Confidence: 0.741804343333333

5f76f30a-d96e-41e6-8f0e-4ee1a99e5400
01:09:46.710 --> 01:09:48.640
signal number for this macro.

NOTE Confidence: 0.657563941666667

40e725dc-5d00-478e-83c7-91b301567d19
01:09:50.710 --> 01:09:53.951
And here is the sample one. They exist at.

NOTE Confidence: 0.657563941666667

d743e811-422f-4230-99f6-8d4095825975
01:09:53.951 --> 01:09:56.513
This is zero and normal termination.

NOTE Confidence: 0.9351113

79026867-5acf-40c5-8f0b-6f036e358176
01:10:01.130 --> 01:10:05.738
So. This is just a path in normal execution,

NOTE Confidence: 0.9351113

9947f40d-9380-45d8-b349-531772d7e3ac
01:10:05.740 --> 01:10:08.128
otherwise in the apple abnormal execution

NOTE Confidence: 0.9351113

7f69e1f8-fd46-46bd-9c40-a8c63b977ec7
01:10:08.128 --> 01:10:11.569
of the child A we have something called.

NOTE Confidence: 0.9351113

32977d65-62cd-4f04-8f42-82796704d286
01:10:11.570 --> 01:10:14.420
As you can see here signal.

NOTE Confidence: 0.9351113

a58e0570-9112-4c4f-b83b-fd4340f8a942
01:10:14.420 --> 01:10:18.595
Meaning that your child terminated

NOTE Confidence: 0.9351113

57870249-8c7b-4164-9072-23de7e81783c
01:10:18.595 --> 01:10:22.124
abnormally by receiving a signal and you

NOTE Confidence: 0.9351113

f61c51c6-5020-4944-b3a0-1d8caf807a56
01:10:22.124 --> 01:10:25.696
want to see that who sends that signal

NOTE Confidence: 0.9351113

7b729479-2781-43b1-88d1-767d5bf38b99
01:10:25.696 --> 01:10:28.930
to your child and makes your child.

NOTE Confidence: 0.9351113

0d39428e-a8f9-4211-b13a-85e4cac81b38
01:10:28.930 --> 01:10:33.760
Exit or finish is abnormally.

NOTE Confidence: 0.9351113

d099b892-6976-496d-9aae-b2a46e1937a3
01:10:33.760 --> 01:10:39.730
And this is the topic of our next, I mean.

NOTE Confidence: 0.9351113

0f529e6a-63ce-4d78-ab48-c988be5882a1
01:10:39.730 --> 01:10:42.684
Lecture, so in the remaining one or

NOTE Confidence: 0.9351113

8916a8df-090a-4c68-a7b8-634840881f3e
01:10:42.684 --> 01:10:45.678
two minutes I just wanted to play

NOTE Confidence: 0.9351113

ba610d83-e998-473c-ac4a-c2b35e772274
01:10:45.680 --> 01:10:48.266
the opening scene of this movie.

NOTE Confidence: 0.9351113

5a06f279-85f1-492e-b5be-2320bed638bc
01:10:48.270 --> 01:10:51.838
Which is a opening.

NOTE Confidence: 0.9351113

5ba64cf7-2fb6-4a46-9ecb-8a793ba44198
01:10:51.840 --> 01:10:55.326
This slide for our next topic

NOTE Confidence: 0.9351113

f9aff538-c259-4aac-b36d-891ce43c56c1
01:10:55.326 --> 01:10:56.488
about signaling.

NOTE Confidence: 0.9351113

740e13a4-6a30-4d75-958a-67012be592e1
01:10:56.490 --> 01:11:00.046
How two process can signal each other?

NOTE Confidence: 0.9351113

054eb712-568a-4c27-aac7-3fd8a358d5b0
01:11:00.050 --> 01:11:01.970
So if you are ready,

NOTE Confidence: 0.9351113

e2647966-84b0-44af-a47b-5c06ca66bb32
01:11:01.970 --> 01:11:05.148
send me some feedback so I can

NOTE Confidence: 0.9351113

130ee9f1-f7d0-4acd-aaf7-208eefe6a1fc
01:11:05.148 --> 01:11:08.898
then start playing this movie.

NOTE Confidence: 0.9351113

6250c3d4-4069-4058-ba92-080c310c4323
01:11:08.900 --> 01:11:11.875
So we have that we have Mason,

NOTE Confidence: 0.9351113

c12f6b44-c612-46f8-b898-67258bde31c3
01:11:11.880 --> 01:11:13.940
Danielle.

NOTE Confidence: 0.9351113

f021ef05-9f53-4693-8bd4-dcb0139e10f1
01:11:13.940 --> 01:11:16.090
So let me bring the.

NOTE Confidence: 0.56901785

9e6e2215-2240-49de-b9af-d03423dac10f
01:11:18.690 --> 01:11:20.080
Video here.

NOTE Confidence: 0.546612068571429

b967a9a7-2ca4-4004-befd-311c23aa7e5c
01:11:26.020 --> 01:11:29.555
So we have self Sam Zainab look.

NOTE Confidence: 0.546612068571429

23d26a25-fc62-4e7e-a7d3-649b77ee95a7
01:11:29.560 --> 01:11:33.690
We have 37 students we have Justin.

NOTE Confidence: 0.546612068571429

78b3c7ac-94ec-4db4-9752-5c0a5db630e1
01:11:33.690 --> 01:11:37.675
So. It's still I'm waiting for

NOTE Confidence: 0.546612068571429

8a061f01-4987-43ff-8962-72d7ab31aa71
01:11:37.675 --> 01:11:40.360
others ban we have ban Tommy.

NOTE Confidence: 0.6512873

a089f944-fded-419b-8a84-12e99262786a
01:11:42.680 --> 01:11:43.550
OK.

NOTE Confidence: 0.818831451666667

ac3107a9-c848-4b73-bd11-accf3e7656cb
01:11:45.570 --> 01:11:47.343
Jonathan Nicholas OK,

NOTE Confidence: 0.818831451666667

c52359c7-8644-4260-aa77-464d983b9e93
01:11:47.343 --> 01:11:51.480
so I just played this opening scene

NOTE Confidence: 0.818831451666667

d9059b80-6096-4c73-b8fd-031303d34728
01:11:51.590 --> 01:11:54.290
and then wait for your question about

NOTE Confidence: 0.818831451666667

7d229f28-5739-46d1-91a2-b064e2eeef50
01:11:54.290 --> 01:11:56.646
today's topic and then next week

NOTE Confidence: 0.818831451666667

2ef6f1b0-2a1f-494b-927c-6644d45eba7e
01:11:56.646 --> 01:11:58.706
we continue with this signaling.

NOTE Confidence: 0.818831451666667

ae60fe79-f4fb-447d-8f32-b7482b1e7290
01:11:58.710 --> 01:12:01.420
OK, so let's just start.

NOTE Confidence: 0.3465823

deb0e827-fb76-4084-941f-76d8133c80ba
01:12:56.010 --> 01:12:59.145
Door. They're reaching out

NOTE Confidence: 0.3465823

7bbd1964-c280-4100-bdd9-4025087817f7
01:12:59.145 --> 01:13:01.618
more IP time. I'm going to do.

NOTE Confidence: 0.70362306

739b0cbf-16b8-4ab0-8f47-de7b6da45f02
01:13:15.850 --> 01:13:16.130
Yeah.

NOTE Confidence: 0.5084167

29a3c441-cef1-4147-a28a-70f52598e2f5
01:13:21.050 --> 01:13:21.420
Michelle.

NOTE Confidence: 0.5462125925

667a7877-95be-4a25-a110-71ec61df476a
01:13:23.790 --> 01:13:25.858
Thank you. White pages.

NOTE Confidence: 0.47314835

9772d3af-f659-4585-a8f0-78aa8b58ea53
01:13:29.520 --> 01:13:29.880
Kate.

NOTE Confidence: 0.55004533

52e4fcc6-2cc6-4cc0-a6ec-d36a061ce98a
01:13:34.340 --> 01:13:38.380
Curious yeah. I don't get ready.

NOTE Confidence: 0.66227758

48d52e95-a099-42a2-8944-c1a308aa974e
01:13:43.570 --> 01:13:44.030
Here there.

NOTE Confidence: 0.609905653333333

64e7637a-d671-442e-abfb-82d7b911f515
01:13:54.310 --> 01:13:55.189
Have you got?

NOTE Confidence: 0.7229092

324c28b2-794d-497a-a18a-736cc08d62eb
01:13:57.690 --> 01:14:03.010
Topic. Open RPG. Rule.

NOTE Confidence: 0.41798702

b98d69e5-cfa3-44dc-be91-bb3b9262c1a7
01:14:05.970 --> 01:14:06.360
Robot

NOTE Confidence: 0.5392657

42740078-b298-4f33-a53c-d0a96009ccca
01:14:09.130 --> 01:14:09.660
really well?

NOTE Confidence: 0.65327255

f2f396e9-5cc0-4bc9-b26c-b1ac815885eb
01:14:11.700 --> 01:14:14.400
The couple. Peter stay.

NOTE Confidence: 0.62010515

87dc26c6-b6ce-4371-ba1e-f0bdeb65db40
01:14:16.590 --> 01:14:20.529
Move. Who pitched it?

NOTE Confidence: 0.4843329

1292b9e6-1f15-4fae-814e-ad686a06a9a7
01:14:42.310 --> 01:14:42.770
Cricket.

NOTE Confidence: 0.3895573

fe3d401c-e30a-4a9b-8fcc-f8568ae2f3bf
01:14:46.040 --> 01:14:46.750
Super Bowl.

NOTE Confidence: 0.88053524

7b57d681-ee3b-4bfe-bec2-5086117d1752
01:14:48.970 --> 01:14:52.478
OK. Hope you liked it.

NOTE Confidence: 0.88053524

d113e59f-6dc8-44d0-b3d8-e964ccac3c59
01:14:52.478 --> 01:14:54.745
Uh, one thing is that this

NOTE Confidence: 0.88053524

8fc5efeb-035f-4188-bd14-6d1122881ce0
01:14:54.745 --> 01:14:57.699
movie is also a good theme for.

NOTE Confidence: 0.88053524

dc0f1f01-d993-4894-a67d-cca05894b641
01:14:57.700 --> 01:14:59.431
Execution system called.

NOTE Confidence: 0.88053524

bb432185-1b69-4558-b8cf-b31360d3c39d
01:14:59.431 --> 01:15:03.354
So if you watch this movie, they.

NOTE Confidence: 0.88053524

430f081b-9ab2-4d99-9075-8453168ca0e2
01:15:03.354 --> 01:15:06.078
The story of this movie is

NOTE Confidence: 0.88053524

50c73322-2ec3-4a1d-97a2-141059bd9735
01:15:06.078 --> 01:15:08.889
about a family that occupies.

NOTE Confidence: 0.88053524

8b47dba0-0d2e-48b9-945d-14e559bca065
01:15:08.890 --> 01:15:13.726
Uh, the. House of another family,

NOTE Confidence: 0.88053524

912d7588-3556-4760-8bdc-5a384cd96732
01:15:13.730 --> 01:15:16.218
so it's very similar to the way that

NOTE Confidence: 0.88053524

f18284b2-6aea-4730-9657-a302a1884027
01:15:16.218 --> 01:15:18.790
it tried process does the execution.

NOTE Confidence: 0.88053524

d6eaa9db-6ac1-4de1-bfeb-f698d4797348
01:15:18.790 --> 01:15:21.546
So. Hopefully these.

NOTE Confidence: 0.88053524

dc34cf63-6836-4f93-8adc-84f6ce55a83a
01:15:21.546 --> 01:15:24.384
Gonna help you to understand how

NOTE Confidence: 0.88053524

d4769c61-2cf2-469b-9bea-0a32ef2ee0bd
01:15:24.384 --> 01:15:26.948
the execution system called works

NOTE Confidence: 0.88053524

977d081c-ff93-4557-9ed7-8a790b4da355
01:15:26.948 --> 01:15:29.004
inside the operating system.

NOTE Confidence: 0.88053524

83ebc5f9-91b8-4814-85f9-0e2d635e3733
01:15:29.010 --> 01:15:33.138
OK, so now I'm ready for your questions.

NOTE Confidence: 0.710677862857143

f63b9cee-832f-42b6-be69-76671b86f9c7
01:15:41.600 --> 01:15:43.329
You too Justin have a good day.

NOTE Confidence: 0.517351386666667

082a4b73-39d5-4e14-9c4d-8fdce255e7ff
01:15:46.940 --> 01:15:48.668
YouTube, Danielle. Oh thank

NOTE Confidence: 0.517351386666667

c4aafdac-6502-4659-b888-60df4aa9c565
01:15:48.668 --> 01:15:52.149
you you too ya have a nice day.

NOTE Confidence: 0.680773177142857

93e96c37-733e-4722-a1a7-6c7e90bd6551
01:15:54.310 --> 01:15:56.326
Joshua, you're welcome.

NOTE Confidence: 0.680773177142857

037a5982-3880-4da5-901c-fa89eb963c43
01:15:56.326 --> 01:16:01.130
Have a great day. And.

NOTE Confidence: 0.680773177142857

3987a65e-9e74-4427-b416-891b8881f9b2
01:16:01.130 --> 01:16:03.458
Thank you look. Thank you Sam.

NOTE Confidence: 0.685583066666667

8740a908-cdd8-4994-9fcd-60b26fdfded0
01:16:13.290 --> 01:16:15.000
So I'm just.

